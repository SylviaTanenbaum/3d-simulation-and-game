/*
** Lua binding: PX2
** Generated automatically by tolua++-1.0.92 on 09/09/14 14:01:11.
*/

#ifndef __cplusplus
#include "stdlib.h"
#endif
#include "string.h"

#include "tolua++.h"

/* Exported function */
TOLUA_API int  tolua_PX2_open (lua_State* tolua_S);

#include "PX2ToLua.hpp"

/* function to release collected object via destructor */
#ifdef __cplusplus

static int tolua_collect_std__map_std__string_int_ (lua_State* tolua_S)
{
 std::map<std::string,int>* self = (std::map<std::string,int>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Buf (lua_State* tolua_S)
{
 Buf* self = (Buf*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIView (lua_State* tolua_S)
{
 UIView* self = (UIView*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIRangeFrame (lua_State* tolua_S)
{
 UIRangeFrame* self = (UIRangeFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Scene3D (lua_State* tolua_S)
{
 Scene3D* self = (Scene3D*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SkillStepFarTrack (lua_State* tolua_S)
{
 SkillStepFarTrack* self = (SkillStepFarTrack*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Netable (lua_State* tolua_S)
{
 Netable* self = (Netable*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Controlledable (lua_State* tolua_S)
{
 Controlledable* self = (Controlledable*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Character2DFrames8 (lua_State* tolua_S)
{
 Character2DFrames8* self = (Character2DFrames8*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_ResHandle (lua_State* tolua_S)
{
 ResHandle* self = (ResHandle*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIStaticText (lua_State* tolua_S)
{
 UIStaticText* self = (UIStaticText*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_APoint (lua_State* tolua_S)
{
 APoint* self = (APoint*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIEditBox (lua_State* tolua_S)
{
 UIEditBox* self = (UIEditBox*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AVector (lua_State* tolua_S)
{
 AVector* self = (AVector*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Triangles (lua_State* tolua_S)
{
 Triangles* self = (Triangles*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_TriMesh (lua_State* tolua_S)
{
 TriMesh* self = (TriMesh*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Float4 (lua_State* tolua_S)
{
 Float4* self = (Float4*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Scene (lua_State* tolua_S)
{
 Scene* self = (Scene*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_EffectBuf (lua_State* tolua_S)
{
 EffectBuf* self = (EffectBuf*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__list_Skill__ (lua_State* tolua_S)
{
 std::list<Skill*>* self = (std::list<Skill*>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_AffectObject (lua_State* tolua_S)
{
 AffectObject* self = (AffectObject*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SkillActorLink (lua_State* tolua_S)
{
 SkillActorLink* self = (SkillActorLink*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_HPoint (lua_State* tolua_S)
{
 HPoint* self = (HPoint*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SkillStepLink (lua_State* tolua_S)
{
 SkillStepLink* self = (SkillStepLink*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Camera (lua_State* tolua_S)
{
 Camera* self = (Camera*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SkillInstance (lua_State* tolua_S)
{
 SkillInstance* self = (SkillInstance*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Vector2f (lua_State* tolua_S)
{
 Vector2f* self = (Vector2f*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SkillActor (lua_State* tolua_S)
{
 SkillActor* self = (SkillActor*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_EffectActor (lua_State* tolua_S)
{
 EffectActor* self = (EffectActor*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SkillStep (lua_State* tolua_S)
{
 SkillStep* self = (SkillStep*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIInputStaticText (lua_State* tolua_S)
{
 UIInputStaticText* self = (UIInputStaticText*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SpeedBuf (lua_State* tolua_S)
{
 SpeedBuf* self = (SpeedBuf*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Transform (lua_State* tolua_S)
{
 Transform* self = (Transform*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_std__bitset_PX2_ACTOR_BS_SIZE_ (lua_State* tolua_S)
{
 std::bitset<PX2_ACTOR_BS_SIZE>* self = (std::bitset<PX2_ACTOR_BS_SIZE>*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SkillCriticalBuf (lua_State* tolua_S)
{
 SkillCriticalBuf* self = (SkillCriticalBuf*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SkillCDTimeBuf (lua_State* tolua_S)
{
 SkillCDTimeBuf* self = (SkillCDTimeBuf*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_GroupBuf (lua_State* tolua_S)
{
 GroupBuf* self = (GroupBuf*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Skill (lua_State* tolua_S)
{
 Skill* self = (Skill*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_HPBuf (lua_State* tolua_S)
{
 HPBuf* self = (HPBuf*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UICheckButton (lua_State* tolua_S)
{
 UICheckButton* self = (UICheckButton*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Character (lua_State* tolua_S)
{
 Character* self = (Character*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Movable (lua_State* tolua_S)
{
 Movable* self = (Movable*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Animation2DFrames8 (lua_State* tolua_S)
{
 Animation2DFrames8* self = (Animation2DFrames8*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_FreezeBuf (lua_State* tolua_S)
{
 FreezeBuf* self = (FreezeBuf*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Item (lua_State* tolua_S)
{
 Item* self = (Item*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Sound (lua_State* tolua_S)
{
 Sound* self = (Sound*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SwitchNode (lua_State* tolua_S)
{
 SwitchNode* self = (SwitchNode*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Gameable (lua_State* tolua_S)
{
 Gameable* self = (Gameable*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Actor (lua_State* tolua_S)
{
 Actor* self = (Actor*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SkillStepRangeTime (lua_State* tolua_S)
{
 SkillStepRangeTime* self = (SkillStepRangeTime*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Animation (lua_State* tolua_S)
{
 Animation* self = (Animation*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_CameraActor (lua_State* tolua_S)
{
 CameraActor* self = (CameraActor*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SoundCreateInfo3D (lua_State* tolua_S)
{
 SoundCreateInfo3D* self = (SoundCreateInfo3D*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIButton (lua_State* tolua_S)
{
 UIButton* self = (UIButton*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_InputEventData (lua_State* tolua_S)
{
 InputEventData* self = (InputEventData*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Float3 (lua_State* tolua_S)
{
 Float3* self = (Float3*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_SoundSystemInitInfo (lua_State* tolua_S)
{
 SoundSystemInitInfo* self = (SoundSystemInitInfo*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Renderable (lua_State* tolua_S)
{
 Renderable* self = (Renderable*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIProgressBar (lua_State* tolua_S)
{
 UIProgressBar* self = (UIProgressBar*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIButtonBase (lua_State* tolua_S)
{
 UIButtonBase* self = (UIButtonBase*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_UIFrame (lua_State* tolua_S)
{
 UIFrame* self = (UIFrame*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_int64_t (lua_State* tolua_S)
{
 int64_t* self = (int64_t*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}

static int tolua_collect_Texture__Format (lua_State* tolua_S)
{
 Texture::Format* self = (Texture::Format*) tolua_tousertype(tolua_S,1,0);
	Mtolua_delete(self);
	return 0;
}
#endif


/* function to register type */
static void tolua_reg_types (lua_State* tolua_S)
{
 tolua_usertype(tolua_S,"SoundManager");
 tolua_usertype(tolua_S,"ShaderParameters");
 tolua_usertype(tolua_S,"OffsetProperty");
 tolua_usertype(tolua_S,"std::vector<MultiTouchState>");
 tolua_usertype(tolua_S,"AmbientRegionActor");
 tolua_usertype(tolua_S,"Light");
 tolua_usertype(tolua_S,"TexPackElement");
 tolua_usertype(tolua_S,"Scene3D");
 tolua_usertype(tolua_S,"Controlledable");
 tolua_usertype(tolua_S,"SkillStep");
 tolua_usertype(tolua_S,"ResHandle");
 tolua_usertype(tolua_S,"UIFrame");
 tolua_usertype(tolua_S,"GroupBuf");
 tolua_usertype(tolua_S,"EffectBuf");
 tolua_usertype(tolua_S,"AVector");
 tolua_usertype(tolua_S,"Triangles");
 tolua_usertype(tolua_S,"TriMesh");
 tolua_usertype(tolua_S,"Float4");
 tolua_usertype(tolua_S,"PX2::Node");
 tolua_usertype(tolua_S,"LanguageManager");
 tolua_usertype(tolua_S,"std::vector<Pointer0<UIPicBox> >");
 tolua_usertype(tolua_S,"XMLNode");
 tolua_usertype(tolua_S,"Character2DFrames8");
 tolua_usertype(tolua_S,"StateMachine<Character>");
 tolua_usertype(tolua_S,"ScriptManager");
 tolua_usertype(tolua_S,"Texture2D");
 tolua_usertype(tolua_S,"std::list<Skill*>");
 tolua_usertype(tolua_S,"UIButtonBase");
 tolua_usertype(tolua_S,"std::list<SkinControllerPtr>");
 tolua_usertype(tolua_S,"Vector2f");
 tolua_usertype(tolua_S,"APoint");
 tolua_usertype(tolua_S,"AffectObject");
 tolua_usertype(tolua_S,"CameraNode");
 tolua_usertype(tolua_S,"Transform");
 tolua_usertype(tolua_S,"SkillActorLink");
 tolua_usertype(tolua_S,"Vector3f");
 tolua_usertype(tolua_S,"Renderer");
 tolua_usertype(tolua_S,"SkillInstance");
 tolua_usertype(tolua_S,"Skill");
 tolua_usertype(tolua_S,"SkillStepLink");
 tolua_usertype(tolua_S,"UICheckButton");
 tolua_usertype(tolua_S,"SkillStepFarTrack");
 tolua_usertype(tolua_S,"Movable");
 tolua_usertype(tolua_S,"Project");
 tolua_usertype(tolua_S,"HMatrix");
 tolua_usertype(tolua_S,"IndexBuffer");
 tolua_usertype(tolua_S,"EffectActor");
 tolua_usertype(tolua_S,"SwitchNode");
 tolua_usertype(tolua_S,"MouseState");
 tolua_usertype(tolua_S,"Actor");
 tolua_usertype(tolua_S,"PX2::Movable");
 tolua_usertype(tolua_S,"Animation");
 tolua_usertype(tolua_S,"std::bitset<PX2_ACTOR_BS_SIZE>");
 tolua_usertype(tolua_S,"VertexBuffer");
 tolua_usertype(tolua_S,"MultiTouchState");
 tolua_usertype(tolua_S,"DepthProperty");
 tolua_usertype(tolua_S,"GameManager");
 tolua_usertype(tolua_S,"Font");
 tolua_usertype(tolua_S,"Renderable");
 tolua_usertype(tolua_S,"Netable");
 tolua_usertype(tolua_S,"SkillCDTimeBuf");
 tolua_usertype(tolua_S,"SpeedBuf");
 tolua_usertype(tolua_S,"HPBuf");
 tolua_usertype(tolua_S,"Texture::Format");
 tolua_usertype(tolua_S,"std::map<std::string,int>");
 tolua_usertype(tolua_S,"Sizef");
 tolua_usertype(tolua_S,"UIProgressBar");
 tolua_usertype(tolua_S,"AimBuf");
 tolua_usertype(tolua_S,"Texture3D");
 tolua_usertype(tolua_S,"Buf");
 tolua_usertype(tolua_S,"Animation2DFrames8");
 tolua_usertype(tolua_S,"RenderTarget");
 tolua_usertype(tolua_S,"CameraActor");
 tolua_usertype(tolua_S,"EffectNode");
 tolua_usertype(tolua_S,"Item");
 tolua_usertype(tolua_S,"Gameable");
 tolua_usertype(tolua_S,"ResourceManager");
 tolua_usertype(tolua_S,"PixelShader");
 tolua_usertype(tolua_S,"SkillCriticalBuf");
 tolua_usertype(tolua_S,"Singleton<GameManager>");
 tolua_usertype(tolua_S,"Logger");
 tolua_usertype(tolua_S,"Singleton<Project>");
 tolua_usertype(tolua_S,"Scene");
 tolua_usertype(tolua_S,"UIPicBox");
 tolua_usertype(tolua_S,"Controller");
 tolua_usertype(tolua_S,"Culler");
 tolua_usertype(tolua_S,"UIView");
 tolua_usertype(tolua_S,"HPoint");
 tolua_usertype(tolua_S,"SoundSystem");
 tolua_usertype(tolua_S,"Camera");
 tolua_usertype(tolua_S,"Object");
 tolua_usertype(tolua_S,"TexPack");
 tolua_usertype(tolua_S,"SkillActor");
 tolua_usertype(tolua_S,"Singleton<UIManager>");
 tolua_usertype(tolua_S,"Node");
 tolua_usertype(tolua_S,"UIInputStaticText");
 tolua_usertype(tolua_S,"UIRangeFrame");
 tolua_usertype(tolua_S,"UIProgressBarCtrl");
 tolua_usertype(tolua_S,"TextureCube");
 tolua_usertype(tolua_S,"Event");
 tolua_usertype(tolua_S,"VisibleSet");
 tolua_usertype(tolua_S,"UIButton");
 tolua_usertype(tolua_S,"UIEditBox");
 tolua_usertype(tolua_S,"VertexShader");
 tolua_usertype(tolua_S,"UIStaticText");
 tolua_usertype(tolua_S,"Character");
 tolua_usertype(tolua_S,"AlphaProperty");
 tolua_usertype(tolua_S,"VertexFormat");
 tolua_usertype(tolua_S,"UIManager");
 tolua_usertype(tolua_S,"TerrainActor");
 tolua_usertype(tolua_S,"Sound");
 tolua_usertype(tolua_S,"GlobalMaterial");
 tolua_usertype(tolua_S,"std::map<std::string,UIViewPtr>");
 tolua_usertype(tolua_S,"SoundCreateInfo3D");
 tolua_usertype(tolua_S,"SkillStepRangeTime");
 tolua_usertype(tolua_S,"MaterialInstance");
 tolua_usertype(tolua_S,"WireProperty");
 tolua_usertype(tolua_S,"FreezeBuf");
 tolua_usertype(tolua_S,"EventHandler");
 tolua_usertype(tolua_S,"StencilProperty");
 tolua_usertype(tolua_S,"Float3");
 tolua_usertype(tolua_S,"SoundSystemInitInfo");
 tolua_usertype(tolua_S,"Buffer::Locking");
 tolua_usertype(tolua_S,"CullProperty");
 tolua_usertype(tolua_S,"InputEventData");
 tolua_usertype(tolua_S,"Bound");
 tolua_usertype(tolua_S,"Texture1D");
 tolua_usertype(tolua_S,"int64_t");
}

/* method: GetResourcePath of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetResourcePath00
static int tolua_PX2_Object_GetResourcePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetResourcePath'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetResourcePath();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetResourcePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetName of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_SetName00
static int tolua_PX2_Object_SetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetName'", NULL);
#endif
  {
   self->SetName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetName00
static int tolua_PX2_Object_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Object* self = (const Object*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetObjectByName of class  Object */
#ifndef TOLUA_DISABLE_tolua_PX2_Object_GetObjectByName00
static int tolua_PX2_Object_GetObjectByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Object",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Object* self = (Object*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetObjectByName'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->GetObjectByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetObjectByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: GetTimeInMicroseconds */
#ifndef TOLUA_DISABLE_tolua_PX2_GetTimeInMicroseconds00
static int tolua_PX2_GetTimeInMicroseconds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int64_t tolua_ret = (int64_t)  GetTimeInMicroseconds();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((int64_t)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"int64_t");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(int64_t));
     tolua_pushusertype(tolua_S,tolua_obj,"int64_t");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTimeInMicroseconds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* function: GetTimeInSeconds */
#ifndef TOLUA_DISABLE_tolua_PX2_GetTimeInSeconds00
static int tolua_PX2_GetTimeInSeconds00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isnoobj(tolua_S,1,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   double tolua_ret = (double)  GetTimeInSeconds();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTimeInSeconds'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSingleton of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_GetSingleton00
static int tolua_PX2_Logger_GetSingleton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Logger",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Logger& tolua_ret = (Logger&)  Logger::GetSingleton();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Logger");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSingleton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LogInfo of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_LogInfo00
static int tolua_PX2_Logger_LogInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Logger",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Logger* self = (Logger*)  tolua_tousertype(tolua_S,1,0);
  const std::string tag = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string info = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LogInfo'", NULL);
#endif
  {
   self->LogInfo(tag,info);
   tolua_pushcppstring(tolua_S,(const char*)tag);
   tolua_pushcppstring(tolua_S,(const char*)info);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LogInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LogError of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_LogError00
static int tolua_PX2_Logger_LogError00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Logger",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Logger* self = (Logger*)  tolua_tousertype(tolua_S,1,0);
  const std::string tag = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string info = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LogError'", NULL);
#endif
  {
   self->LogError(tag,info);
   tolua_pushcppstring(tolua_S,(const char*)tag);
   tolua_pushcppstring(tolua_S,(const char*)info);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LogError'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LogUser of class  Logger */
#ifndef TOLUA_DISABLE_tolua_PX2_Logger_LogUser00
static int tolua_PX2_Logger_LogUser00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Logger",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Logger* self = (Logger*)  tolua_tousertype(tolua_S,1,0);
  const std::string tag = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string info = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LogUser'", NULL);
#endif
  {
   self->LogUser(tag,info);
   tolua_pushcppstring(tolua_S,(const char*)tag);
   tolua_pushcppstring(tolua_S,(const char*)info);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LogUser'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new00
static int tolua_PX2_APoint_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new00_local
static int tolua_PX2_APoint_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new01
static int tolua_PX2_APoint_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const APoint* pnt = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)(*pnt));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new01_local
static int tolua_PX2_APoint_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const APoint* pnt = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)(*pnt));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new02
static int tolua_PX2_APoint_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_new02_local
static int tolua_PX2_APoint_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   APoint* tolua_ret = (APoint*)  Mtolua_new((APoint)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_delete00
static int tolua_PX2_APoint_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"APoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  APoint* self = (APoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint__sub00
static int tolua_PX2_APoint__sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const APoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const APoint* self = (const APoint*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pnt = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->operator-(*pnt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint__add00
static int tolua_PX2_APoint__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const APoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const APoint* self = (const APoint*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->operator+(*vec);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint__sub01
static int tolua_PX2_APoint__sub01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const APoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const APoint* self = (const APoint*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->operator-(*vec);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint__sub00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint__add01
static int tolua_PX2_APoint__add01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const APoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const APoint* self = (const APoint*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pnt = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->operator+(*pnt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint__add00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint__mul00
static int tolua_PX2_APoint__mul00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const APoint* self = (const APoint*)  tolua_tousertype(tolua_S,1,0);
  float scalar = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->operator*(scalar);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.mul'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator/ of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint__div00
static int tolua_PX2_APoint__div00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const APoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const APoint* self = (const APoint*)  tolua_tousertype(tolua_S,1,0);
  float scalar = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator/'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->operator/(scalar);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.div'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint__sub02
static int tolua_PX2_APoint__sub02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const APoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const APoint* self = (const APoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->operator-();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_APoint__sub01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dot of class  APoint */
#ifndef TOLUA_DISABLE_tolua_PX2_APoint_Dot00
static int tolua_PX2_APoint_Dot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const APoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const APoint* self = (const APoint*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dot'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Dot(*vec);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ORIGIN of class  APoint */
#ifndef TOLUA_DISABLE_tolua_get_APoint_ORIGIN
static int tolua_get_APoint_ORIGIN(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&APoint::ORIGIN,"const APoint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new00
static int tolua_PX2_AVector_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new00_local
static int tolua_PX2_AVector_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new01
static int tolua_PX2_AVector_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(*vec));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new01_local
static int tolua_PX2_AVector_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(*vec));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new02
static int tolua_PX2_AVector_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new02_local
static int tolua_PX2_AVector_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(x,y,z));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new03
static int tolua_PX2_AVector_new03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float3* tuple = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new03_local
static int tolua_PX2_AVector_new03_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Float3* tuple = ((const Float3*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(*tuple));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new02_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new04
static int tolua_PX2_AVector_new04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3f",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Vector3f* vec = ((const Vector3f*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(*vec));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_new04_local
static int tolua_PX2_AVector_new04_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Vector3f",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Vector3f* vec = ((const Vector3f*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector* tolua_ret = (AVector*)  Mtolua_new((AVector)(*vec));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector_new03_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_delete00
static int tolua_PX2_AVector_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* self = (AVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator+ of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector__add00
static int tolua_PX2_AVector__add00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator+'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->operator+(*vec);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.add'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector__sub00
static int tolua_PX2_AVector__sub00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->operator-(*vec);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.sub'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector__mul00
static int tolua_PX2_AVector__mul00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
  float scalar = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->operator*(scalar);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.mul'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator/ of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector__div00
static int tolua_PX2_AVector__div00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
  float scalar = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator/'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->operator/(scalar);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.div'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator- of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector__sub01
static int tolua_PX2_AVector__sub01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator-'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->operator-();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_AVector__sub00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Length of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Length00
static int tolua_PX2_AVector_Length00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Length'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Length();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Length'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SquaredLength of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_SquaredLength00
static int tolua_PX2_AVector_SquaredLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SquaredLength'", NULL);
#endif
  {
   float tolua_ret = (float)  self->SquaredLength();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SquaredLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Dot of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Dot00
static int tolua_PX2_AVector_Dot00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Dot'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Dot(*vec);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Dot'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Normalize of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Normalize00
static int tolua_PX2_AVector_Normalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* self = (AVector*)  tolua_tousertype(tolua_S,1,0);
  const float epsilon = ((const float)  tolua_tonumber(tolua_S,2,Mathf::ZERO_TOLERANCE));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Normalize'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Normalize(epsilon);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Normalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Cross of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Cross00
static int tolua_PX2_AVector_Cross00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Cross'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->Cross(*vec);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Cross'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnitCross of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_UnitCross00
static int tolua_PX2_AVector_UnitCross00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AVector* self = (const AVector*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UnitCross'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->UnitCross(*vec);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UnitCross'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Orthonormalize of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Orthonormalize00
static int tolua_PX2_AVector_Orthonormalize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* vec0 = ((AVector*)  tolua_tousertype(tolua_S,2,0));
  AVector* vec1 = ((AVector*)  tolua_tousertype(tolua_S,3,0));
  AVector* vec2 = ((AVector*)  tolua_tousertype(tolua_S,4,0));
  {
   AVector::Orthonormalize(*vec0,*vec1,*vec2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Orthonormalize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Orthonormalize of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_Orthonormalize01
static int tolua_PX2_AVector_Orthonormalize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  AVector* vec = ((AVector*)  tolua_tousertype(tolua_S,2,0));
  {
   AVector::Orthonormalize(vec);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_AVector_Orthonormalize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GenerateOrthonormalBasis of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_GenerateOrthonormalBasis00
static int tolua_PX2_AVector_GenerateOrthonormalBasis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* vec0 = ((AVector*)  tolua_tousertype(tolua_S,2,0));
  AVector* vec1 = ((AVector*)  tolua_tousertype(tolua_S,3,0));
  AVector* vec2 = ((AVector*)  tolua_tousertype(tolua_S,4,0));
  {
   AVector::GenerateOrthonormalBasis(*vec0,*vec1,*vec2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GenerateOrthonormalBasis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GenerateComplementBasis of class  AVector */
#ifndef TOLUA_DISABLE_tolua_PX2_AVector_GenerateComplementBasis00
static int tolua_PX2_AVector_GenerateComplementBasis00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AVector",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AVector* vec0 = ((AVector*)  tolua_tousertype(tolua_S,2,0));
  AVector* vec1 = ((AVector*)  tolua_tousertype(tolua_S,3,0));
  const AVector* vec2 = ((const AVector*)  tolua_tousertype(tolua_S,4,0));
  {
   AVector::GenerateComplementBasis(*vec0,*vec1,*vec2);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GenerateComplementBasis'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ZERO of class  AVector */
#ifndef TOLUA_DISABLE_tolua_get_AVector_ZERO
static int tolua_get_AVector_ZERO(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&AVector::ZERO,"const AVector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT_X of class  AVector */
#ifndef TOLUA_DISABLE_tolua_get_AVector_UNIT_X
static int tolua_get_AVector_UNIT_X(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&AVector::UNIT_X,"const AVector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT_Y of class  AVector */
#ifndef TOLUA_DISABLE_tolua_get_AVector_UNIT_Y
static int tolua_get_AVector_UNIT_Y(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&AVector::UNIT_Y,"const AVector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: UNIT_Z of class  AVector */
#ifndef TOLUA_DISABLE_tolua_get_AVector_UNIT_Z
static int tolua_get_AVector_UNIT_Z(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&AVector::UNIT_Z,"const AVector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new00
static int tolua_PX2_HPoint_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new00_local
static int tolua_PX2_HPoint_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new01
static int tolua_PX2_HPoint_new01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const HPoint* pnt = ((const HPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)(*pnt));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_new00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new01_local
static int tolua_PX2_HPoint_new01_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const HPoint* pnt = ((const HPoint*)  tolua_tousertype(tolua_S,2,0));
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)(*pnt));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_new00_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new02
static int tolua_PX2_HPoint_new02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  float w = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)(x,y,z,w));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_new01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_new02_local
static int tolua_PX2_HPoint_new02_local(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  float x = ((float)  tolua_tonumber(tolua_S,2,0));
  float y = ((float)  tolua_tonumber(tolua_S,3,0));
  float z = ((float)  tolua_tonumber(tolua_S,4,0));
  float w = ((float)  tolua_tonumber(tolua_S,5,0));
  {
   HPoint* tolua_ret = (HPoint*)  Mtolua_new((HPoint)(x,y,z,w));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_new01_local(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_delete00
static int tolua_PX2_HPoint_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator[] of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint__geti00
static int tolua_PX2_HPoint__geti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator[]'", NULL);
#endif
  {
   float tolua_ret = (float)  self->operator[](i);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.geti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator&[] of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint__seti00
static int tolua_PX2_HPoint__seti00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  float tolua_value = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator&[]'", NULL);
#endif
  self->operator[](i) =  tolua_value;
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.seti'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator[] of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint__geti01
static int tolua_PX2_HPoint__geti01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator[]'", NULL);
#endif
  {
   float tolua_ret = (float)  self->operator[](i);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint__geti00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: X of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_X00
static int tolua_PX2_HPoint_X00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'X'", NULL);
#endif
  {
   float tolua_ret = (float)  self->X();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'X'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: X of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_X01
static int tolua_PX2_HPoint_X01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'X'", NULL);
#endif
  {
   float tolua_ret = (float)  self->X();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_X00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Y of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_Y00
static int tolua_PX2_HPoint_Y00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Y'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Y();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Y'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Y of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_Y01
static int tolua_PX2_HPoint_Y01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Y'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Y();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_Y00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Z of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_Z00
static int tolua_PX2_HPoint_Z00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Z'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Z();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Z'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Z of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_Z01
static int tolua_PX2_HPoint_Z01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Z'", NULL);
#endif
  {
   float tolua_ret = (float)  self->Z();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_Z00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: W of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_W00
static int tolua_PX2_HPoint_W00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'W'", NULL);
#endif
  {
   float tolua_ret = (float)  self->W();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'W'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: W of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint_W01
static int tolua_PX2_HPoint_W01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  HPoint* self = (HPoint*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'W'", NULL);
#endif
  {
   float tolua_ret = (float)  self->W();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_HPoint_W00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator== of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint__eq00
static int tolua_PX2_HPoint__eq00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
  const HPoint* pnt = ((const HPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator=='", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator==(*pnt);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.eq'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator< of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint__lt00
static int tolua_PX2_HPoint__lt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
  const HPoint* pnt = ((const HPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator<'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator<(*pnt);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.lt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator<= of class  HPoint */
#ifndef TOLUA_DISABLE_tolua_PX2_HPoint__le00
static int tolua_PX2_HPoint__le00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPoint",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HPoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPoint* self = (const HPoint*)  tolua_tousertype(tolua_S,1,0);
  const HPoint* pnt = ((const HPoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator<='", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->operator<=(*pnt);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.le'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_new00
static int tolua_PX2_Transform_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Transform* tolua_ret = (Transform*)  Mtolua_new((Transform)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Transform");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_new00_local
static int tolua_PX2_Transform_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Transform* tolua_ret = (Transform*)  Mtolua_new((Transform)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_delete00
static int tolua_PX2_Transform_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MakeIdentity of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_MakeIdentity00
static int tolua_PX2_Transform_MakeIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MakeIdentity'", NULL);
#endif
  {
   self->MakeIdentity();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MakeIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: MakeUnitScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_MakeUnitScale00
static int tolua_PX2_Transform_MakeUnitScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'MakeUnitScale'", NULL);
#endif
  {
   self->MakeUnitScale();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'MakeUnitScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsIdentity of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_IsIdentity00
static int tolua_PX2_Transform_IsIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsIdentity'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsIdentity();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsRSMatrix of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_IsRSMatrix00
static int tolua_PX2_Transform_IsRSMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsRSMatrix'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsRSMatrix();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsRSMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUniformScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_IsUniformScale00
static int tolua_PX2_Transform_IsUniformScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUniformScale'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUniformScale();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUniformScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRotate of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetRotate00
static int tolua_PX2_Transform_SetRotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HMatrix",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  const HMatrix* rotate = ((const HMatrix*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRotate'", NULL);
#endif
  {
   self->SetRotate(*rotate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMatrix of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetMatrix00
static int tolua_PX2_Transform_SetMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HMatrix",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  const HMatrix* matrix = ((const HMatrix*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMatrix'", NULL);
#endif
  {
   self->SetMatrix(*matrix);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTranslate of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetTranslate00
static int tolua_PX2_Transform_SetTranslate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  const APoint* translate = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTranslate'", NULL);
#endif
  {
   self->SetTranslate(*translate);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTranslate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetScale00
static int tolua_PX2_Transform_SetScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  const APoint* scale = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScale'", NULL);
#endif
  {
   self->SetScale(*scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUniformScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_SetUniformScale00
static int tolua_PX2_Transform_SetUniformScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Transform* self = (Transform*)  tolua_tousertype(tolua_S,1,0);
  float scale = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUniformScale'", NULL);
#endif
  {
   self->SetUniformScale(scale);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUniformScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRotate of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetRotate00
static int tolua_PX2_Transform_GetRotate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRotate'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetRotate();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRotate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMatrix of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetMatrix00
static int tolua_PX2_Transform_GetMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTranslate of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetTranslate00
static int tolua_PX2_Transform_GetTranslate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTranslate'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetTranslate();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTranslate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetScale00
static int tolua_PX2_Transform_GetScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScale'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetScale();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUniformScale of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetUniformScale00
static int tolua_PX2_Transform_GetUniformScale00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUniformScale'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetUniformScale();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUniformScale'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNorm of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetNorm00
static int tolua_PX2_Transform_GetNorm00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNorm'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetNorm();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNorm'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform__mul00
static int tolua_PX2_Transform__mul00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pnt = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->operator*(*pnt);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function '.mul'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform__mul01
static int tolua_PX2_Transform__mul01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->operator*(*vec);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Transform__mul00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: operator* of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform__mul02
static int tolua_PX2_Transform__mul02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Transform",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
  const Transform* transform = ((const Transform*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'operator*'", NULL);
#endif
  {
   Transform tolua_ret = (Transform)  self->operator*(*transform);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Transform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Transform));
     tolua_pushusertype(tolua_S,tolua_obj,"Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Transform__mul01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Matrix of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_Matrix00
static int tolua_PX2_Transform_Matrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Matrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->Matrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Matrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Inverse of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_Inverse00
static int tolua_PX2_Transform_Inverse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Inverse'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->Inverse();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Inverse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: InverseTransform of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_InverseTransform00
static int tolua_PX2_Transform_InverseTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Transform* self = (const Transform*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'InverseTransform'", NULL);
#endif
  {
   Transform tolua_ret = (Transform)  self->InverseTransform();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Transform)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Transform));
     tolua_pushusertype(tolua_S,tolua_obj,"Transform");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'InverseTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IDENTITY of class  Transform */
#ifndef TOLUA_DISABLE_tolua_get_Transform_IDENTITY
static int tolua_get_Transform_IDENTITY(lua_State* tolua_S)
{
   tolua_pushusertype(tolua_S,(void*)&Transform::IDENTITY,"const Transform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetStreamingSize of class  Transform */
#ifndef TOLUA_DISABLE_tolua_PX2_Transform_GetStreamingSize00
static int tolua_PX2_Transform_GetStreamingSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Transform",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  Transform::GetStreamingSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetStreamingSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_delete00
static int tolua_PX2_Controlledable_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumControllers of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_GetNumControllers00
static int tolua_PX2_Controlledable_GetNumControllers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controlledable* self = (const Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumControllers'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumControllers();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumControllers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetController of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_GetController00
static int tolua_PX2_Controlledable_GetController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Controlledable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Controlledable* self = (const Controlledable*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetController'", NULL);
#endif
  {
   Controller* tolua_ret = (Controller*)  self->GetController(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Controller");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttachController of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_AttachController00
static int tolua_PX2_Controlledable_AttachController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
  Controller* controller = ((Controller*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttachController'", NULL);
#endif
  {
   self->AttachController(controller);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttachController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DetachController of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_DetachController00
static int tolua_PX2_Controlledable_DetachController00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Controller",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
  Controller* controller = ((Controller*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DetachController'", NULL);
#endif
  {
   self->DetachController(controller);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DetachController'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DetachAllControllers of class  Controlledable */
#ifndef TOLUA_DISABLE_tolua_PX2_Controlledable_DetachAllControllers00
static int tolua_PX2_Controlledable_DetachAllControllers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Controlledable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Controlledable* self = (Controlledable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DetachAllControllers'", NULL);
#endif
  {
   self->DetachAllControllers();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DetachAllControllers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_delete00
static int tolua_PX2_Movable_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LocalTransform of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_LocalTransform
static int tolua_get_Movable_LocalTransform(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LocalTransform'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->LocalTransform,"Transform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LocalTransform of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_LocalTransform
static int tolua_set_Movable_LocalTransform(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LocalTransform'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Transform",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LocalTransform = *((Transform*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WorldTransform of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_WorldTransform
static int tolua_get_Movable_WorldTransform(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldTransform'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->WorldTransform,"Transform");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WorldTransform of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_WorldTransform
static int tolua_set_Movable_WorldTransform(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldTransform'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Transform",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WorldTransform = *((Transform*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WorldTransformIsCurrent of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_WorldTransformIsCurrent
static int tolua_get_Movable_WorldTransformIsCurrent(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldTransformIsCurrent'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->WorldTransformIsCurrent);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WorldTransformIsCurrent of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_WorldTransformIsCurrent
static int tolua_set_Movable_WorldTransformIsCurrent(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldTransformIsCurrent'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WorldTransformIsCurrent = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WorldBound of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_WorldBound
static int tolua_get_Movable_WorldBound(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldBound'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->WorldBound,"Bound");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WorldBound of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_WorldBound
static int tolua_set_Movable_WorldBound(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldBound'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Bound",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WorldBound = *((Bound*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: WorldBoundIsCurrent of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_WorldBoundIsCurrent
static int tolua_get_Movable_WorldBoundIsCurrent(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldBoundIsCurrent'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->WorldBoundIsCurrent);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: WorldBoundIsCurrent of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_WorldBoundIsCurrent
static int tolua_set_Movable_WorldBoundIsCurrent(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'WorldBoundIsCurrent'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->WorldBoundIsCurrent = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Culling of class  Movable */
#ifndef TOLUA_DISABLE_tolua_get_Movable_Culling
static int tolua_get_Movable_Culling(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Culling'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Culling);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Culling of class  Movable */
#ifndef TOLUA_DISABLE_tolua_set_Movable_Culling
static int tolua_set_Movable_Culling(lua_State* tolua_S)
{
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Culling'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Culling = ((Movable::CullingMode) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: Show of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_Show00
static int tolua_PX2_Movable_Show00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Show'", NULL);
#endif
  {
   self->Show(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Show'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShow of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_IsShow00
static int tolua_PX2_Movable_IsShow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Movable* self = (const Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShow'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShow();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_Update00
static int tolua_PX2_Movable_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,1,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
  double applicationTime = ((double)  tolua_tonumber(tolua_S,2,-Mathd::MAX_REAL));
  bool initiator = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(applicationTime,initiator);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetParent of class  Movable */
#ifndef TOLUA_DISABLE_tolua_PX2_Movable_GetParent00
static int tolua_PX2_Movable_GetParent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Movable* self = (Movable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetParent'", NULL);
#endif
  {
   Movable* tolua_ret = (Movable*)  self->GetParent();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetParent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_delete00
static int tolua_PX2_Renderable_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPrimitiveType of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetPrimitiveType00
static int tolua_PX2_Renderable_GetPrimitiveType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderable* self = (const Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPrimitiveType'", NULL);
#endif
  {
   Renderable::PrimitiveType tolua_ret = (Renderable::PrimitiveType)  self->GetPrimitiveType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPrimitiveType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVertexFormat of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_SetVertexFormat00
static int tolua_PX2_Renderable_SetVertexFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"VertexFormat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  VertexFormat* vformat = ((VertexFormat*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVertexFormat'", NULL);
#endif
  {
   self->SetVertexFormat(vformat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVertexFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexFormat of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetVertexFormat00
static int tolua_PX2_Renderable_GetVertexFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderable* self = (const Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexFormat'", NULL);
#endif
  {
   const VertexFormat* tolua_ret = (const VertexFormat*)  self->GetVertexFormat();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const VertexFormat");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexFormat of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetVertexFormat01
static int tolua_PX2_Renderable_GetVertexFormat01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexFormat'", NULL);
#endif
  {
   VertexFormat* tolua_ret = (VertexFormat*)  self->GetVertexFormat();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"VertexFormat");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Renderable_GetVertexFormat00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVertexBuffer of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_SetVertexBuffer00
static int tolua_PX2_Renderable_SetVertexBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"VertexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  VertexBuffer* vbuffer = ((VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVertexBuffer'", NULL);
#endif
  {
   self->SetVertexBuffer(vbuffer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVertexBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexBuffer of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetVertexBuffer00
static int tolua_PX2_Renderable_GetVertexBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderable* self = (const Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexBuffer'", NULL);
#endif
  {
   const VertexBuffer* tolua_ret = (const VertexBuffer*)  self->GetVertexBuffer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const VertexBuffer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetVertexBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetVertexBuffer of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetVertexBuffer01
static int tolua_PX2_Renderable_GetVertexBuffer01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetVertexBuffer'", NULL);
#endif
  {
   VertexBuffer* tolua_ret = (VertexBuffer*)  self->GetVertexBuffer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"VertexBuffer");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Renderable_GetVertexBuffer00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetIndexBuffer of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_SetIndexBuffer00
static int tolua_PX2_Renderable_SetIndexBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  IndexBuffer* ibuffer = ((IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetIndexBuffer'", NULL);
#endif
  {
   self->SetIndexBuffer(ibuffer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetIndexBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetIndexBuffer of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetIndexBuffer00
static int tolua_PX2_Renderable_GetIndexBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderable* self = (const Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetIndexBuffer'", NULL);
#endif
  {
   const IndexBuffer* tolua_ret = (const IndexBuffer*)  self->GetIndexBuffer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const IndexBuffer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetIndexBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetIndexBuffer of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetIndexBuffer01
static int tolua_PX2_Renderable_GetIndexBuffer01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetIndexBuffer'", NULL);
#endif
  {
   IndexBuffer* tolua_ret = (IndexBuffer*)  self->GetIndexBuffer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"IndexBuffer");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Renderable_GetIndexBuffer00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModelBound of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetModelBound00
static int tolua_PX2_Renderable_GetModelBound00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderable* self = (const Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModelBound'", NULL);
#endif
  {
   const Bound& tolua_ret = (const Bound&)  self->GetModelBound();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Bound");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModelBound'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModelBound of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetModelBound01
static int tolua_PX2_Renderable_GetModelBound01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModelBound'", NULL);
#endif
  {
   Bound& tolua_ret = (Bound&)  self->GetModelBound();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Bound");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Renderable_GetModelBound00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddRenderUsage of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_AddRenderUsage00
static int tolua_PX2_Renderable_AddRenderUsage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  Renderable::RenderUsage usage = ((Renderable::RenderUsage) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddRenderUsage'", NULL);
#endif
  {
   self->AddRenderUsage(usage);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddRenderUsage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveRenderUsage of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_RemoveRenderUsage00
static int tolua_PX2_Renderable_RemoveRenderUsage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  Renderable::RenderUsage usage = ((Renderable::RenderUsage) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveRenderUsage'", NULL);
#endif
  {
   self->RemoveRenderUsage(usage);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveRenderUsage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRenderUsage of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetRenderUsage00
static int tolua_PX2_Renderable_GetRenderUsage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRenderUsage'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->GetRenderUsage();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRenderUsage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRenderLayer of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_SetRenderLayer00
static int tolua_PX2_Renderable_SetRenderLayer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  Renderable::RenderLayer layer = ((Renderable::RenderLayer) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRenderLayer'", NULL);
#endif
  {
   self->SetRenderLayer(layer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRenderLayer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSortIndex of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetSortIndex00
static int tolua_PX2_Renderable_GetSortIndex00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSortIndex'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->GetSortIndex();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSortIndex'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaterialInstance of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_SetMaterialInstance00
static int tolua_PX2_Renderable_SetMaterialInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"MaterialInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  MaterialInstance* material = ((MaterialInstance*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaterialInstance'", NULL);
#endif
  {
   self->SetMaterialInstance(material);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaterialInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaterialInstance of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetMaterialInstance00
static int tolua_PX2_Renderable_GetMaterialInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderable* self = (const Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaterialInstance'", NULL);
#endif
  {
   MaterialInstance* tolua_ret = (MaterialInstance*)  self->GetMaterialInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"MaterialInstance");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaterialInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddLight of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_AddLight00
static int tolua_PX2_Renderable_AddLight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Light",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  Light* light = ((Light*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddLight'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddLight(light);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddLight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveLight of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_RemoveLight00
static int tolua_PX2_Renderable_RemoveLight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Light",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  Light* light = ((Light*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveLight'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveLight(light);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveLight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearLights of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_ClearLights00
static int tolua_PX2_Renderable_ClearLights00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearLights'", NULL);
#endif
  {
   self->ClearLights();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearLights'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumLights of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetNumLights00
static int tolua_PX2_Renderable_GetNumLights00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumLights'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumLights();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumLights'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLight of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_GetLight00
static int tolua_PX2_Renderable_GetLight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLight'", NULL);
#endif
  {
   Light* tolua_ret = (Light*)  self->GetLight(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Light");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateModelSpace of class  Renderable */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderable_UpdateModelSpace00
static int tolua_PX2_Renderable_UpdateModelSpace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderable* self = (Renderable*)  tolua_tousertype(tolua_S,1,0);
  Renderable::UpdateType type = ((Renderable::UpdateType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UpdateModelSpace'", NULL);
#endif
  {
   self->UpdateModelSpace(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateModelSpace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Triangles */
#ifndef TOLUA_DISABLE_tolua_PX2_Triangles_delete00
static int tolua_PX2_Triangles_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Triangles",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Triangles* self = (Triangles*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumTriangles of class  Triangles */
#ifndef TOLUA_DISABLE_tolua_PX2_Triangles_GetNumTriangles00
static int tolua_PX2_Triangles_GetNumTriangles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Triangles",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Triangles* self = (const Triangles*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumTriangles'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumTriangles();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumTriangles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTriangle of class  Triangles */
#ifndef TOLUA_DISABLE_tolua_PX2_Triangles_GetTriangle00
static int tolua_PX2_Triangles_GetTriangle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Triangles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Triangles* self = (const Triangles*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  int v0 = ((int)  tolua_tonumber(tolua_S,3,0));
  int v1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int v2 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTriangle'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetTriangle(i,v0,v1,v2);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)v0);
   tolua_pushnumber(tolua_S,(lua_Number)v1);
   tolua_pushnumber(tolua_S,(lua_Number)v2);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTriangle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModelTriangle of class  Triangles */
#ifndef TOLUA_DISABLE_tolua_PX2_Triangles_GetModelTriangle00
static int tolua_PX2_Triangles_GetModelTriangle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Triangles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"APoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Triangles* self = (const Triangles*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  APoint* modelTriangle = ((APoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModelTriangle'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetModelTriangle(i,modelTriangle);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModelTriangle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldTriangle of class  Triangles */
#ifndef TOLUA_DISABLE_tolua_PX2_Triangles_GetWorldTriangle00
static int tolua_PX2_Triangles_GetWorldTriangle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Triangles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"APoint",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Triangles* self = (const Triangles*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  APoint* worldTriangle = ((APoint*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldTriangle'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetWorldTriangle(i,worldTriangle);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldTriangle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumVertices of class  Triangles */
#ifndef TOLUA_DISABLE_tolua_PX2_Triangles_GetNumVertices00
static int tolua_PX2_Triangles_GetNumVertices00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Triangles",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Triangles* self = (const Triangles*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumVertices'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumVertices();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumVertices'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldTransform of class  Triangles */
#ifndef TOLUA_DISABLE_tolua_PX2_Triangles_GetWorldTransform00
static int tolua_PX2_Triangles_GetWorldTransform00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Triangles",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Triangles* self = (const Triangles*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldTransform'", NULL);
#endif
  {
   const Transform& tolua_ret = (const Transform&)  self->GetWorldTransform();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Transform");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldTransform'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPosition of class  Triangles */
#ifndef TOLUA_DISABLE_tolua_PX2_Triangles_GetPosition00
static int tolua_PX2_Triangles_GetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Triangles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Triangles* self = (const Triangles*)  tolua_tousertype(tolua_S,1,0);
  int v = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPosition'", NULL);
#endif
  {
   Float3 tolua_ret = (Float3)  self->GetPosition(v);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Float3)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Float3));
     tolua_pushusertype(tolua_S,tolua_obj,"Float3");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateModelSpace of class  Triangles */
#ifndef TOLUA_DISABLE_tolua_PX2_Triangles_UpdateModelSpace00
static int tolua_PX2_Triangles_UpdateModelSpace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Triangles",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Triangles* self = (Triangles*)  tolua_tousertype(tolua_S,1,0);
  Renderable::UpdateType type = ((Renderable::UpdateType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UpdateModelSpace'", NULL);
#endif
  {
   self->UpdateModelSpace(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateModelSpace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  TriMesh */
#ifndef TOLUA_DISABLE_tolua_PX2_TriMesh_new00
static int tolua_PX2_TriMesh_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"VertexFormat",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"VertexBuffer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  VertexFormat* vformat = ((VertexFormat*)  tolua_tousertype(tolua_S,2,0));
  VertexBuffer* vbuffer = ((VertexBuffer*)  tolua_tousertype(tolua_S,3,0));
  IndexBuffer* ibuffer = ((IndexBuffer*)  tolua_tousertype(tolua_S,4,0));
  {
   TriMesh* tolua_ret = (TriMesh*)  Mtolua_new((TriMesh)(vformat,vbuffer,ibuffer));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriMesh");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  TriMesh */
#ifndef TOLUA_DISABLE_tolua_PX2_TriMesh_new00_local
static int tolua_PX2_TriMesh_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"TriMesh",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"VertexFormat",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"VertexBuffer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  VertexFormat* vformat = ((VertexFormat*)  tolua_tousertype(tolua_S,2,0));
  VertexBuffer* vbuffer = ((VertexBuffer*)  tolua_tousertype(tolua_S,3,0));
  IndexBuffer* ibuffer = ((IndexBuffer*)  tolua_tousertype(tolua_S,4,0));
  {
   TriMesh* tolua_ret = (TriMesh*)  Mtolua_new((TriMesh)(vformat,vbuffer,ibuffer));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TriMesh");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  TriMesh */
#ifndef TOLUA_DISABLE_tolua_PX2_TriMesh_delete00
static int tolua_PX2_TriMesh_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"TriMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  TriMesh* self = (TriMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumTriangles of class  TriMesh */
#ifndef TOLUA_DISABLE_tolua_PX2_TriMesh_GetNumTriangles00
static int tolua_PX2_TriMesh_GetNumTriangles00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TriMesh",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TriMesh* self = (const TriMesh*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumTriangles'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumTriangles();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumTriangles'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTriangle of class  TriMesh */
#ifndef TOLUA_DISABLE_tolua_PX2_TriMesh_GetTriangle00
static int tolua_PX2_TriMesh_GetTriangle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const TriMesh",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const TriMesh* self = (const TriMesh*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  int v0 = ((int)  tolua_tonumber(tolua_S,3,0));
  int v1 = ((int)  tolua_tonumber(tolua_S,4,0));
  int v2 = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTriangle'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetTriangle(i,v0,v1,v2);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)v0);
   tolua_pushnumber(tolua_S,(lua_Number)v1);
   tolua_pushnumber(tolua_S,(lua_Number)v2);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTriangle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_new00
static int tolua_PX2_SwitchNode_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SwitchNode* tolua_ret = (SwitchNode*)  Mtolua_new((SwitchNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SwitchNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_new00_local
static int tolua_PX2_SwitchNode_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SwitchNode* tolua_ret = (SwitchNode*)  Mtolua_new((SwitchNode)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SwitchNode");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_delete00
static int tolua_PX2_SwitchNode_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SwitchNode* self = (SwitchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_Create00
static int tolua_PX2_SwitchNode_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SwitchNode* tolua_ret = (SwitchNode*)  SwitchNode::Create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SwitchNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActiveChild of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_SetActiveChild00
static int tolua_PX2_SwitchNode_SetActiveChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SwitchNode* self = (SwitchNode*)  tolua_tousertype(tolua_S,1,0);
  int activeChild = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActiveChild'", NULL);
#endif
  {
   self->SetActiveChild(activeChild);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActiveChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActiveChild of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_GetActiveChild00
static int tolua_PX2_SwitchNode_GetActiveChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SwitchNode* self = (const SwitchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActiveChild'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetActiveChild();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActiveChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DisableAllChildren of class  SwitchNode */
#ifndef TOLUA_DISABLE_tolua_PX2_SwitchNode_DisableAllChildren00
static int tolua_PX2_SwitchNode_DisableAllChildren00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SwitchNode",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SwitchNode* self = (SwitchNode*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DisableAllChildren'", NULL);
#endif
  {
   self->DisableAllChildren();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DisableAllChildren'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_new00
static int tolua_PX2_Camera_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool isPerspective = ((bool)  tolua_toboolean(tolua_S,2,true));
  {
   Camera* tolua_ret = (Camera*)  Mtolua_new((Camera)(isPerspective));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_new00_local
static int tolua_PX2_Camera_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  bool isPerspective = ((bool)  tolua_toboolean(tolua_S,2,true));
  {
   Camera* tolua_ret = (Camera*)  Mtolua_new((Camera)(isPerspective));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Camera");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_delete00
static int tolua_PX2_Camera_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrame of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetFrame00
static int tolua_PX2_Camera_SetFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const APoint* position = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  const AVector* dVector = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
  const AVector* uVector = ((const AVector*)  tolua_tousertype(tolua_S,4,0));
  const AVector* rVector = ((const AVector*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrame'", NULL);
#endif
  {
   self->SetFrame(*position,*dVector,*uVector,*rVector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPosition of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetPosition00
static int tolua_PX2_Camera_SetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const APoint* position = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPosition'", NULL);
#endif
  {
   self->SetPosition(*position);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAxes of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetAxes00
static int tolua_PX2_Camera_SetAxes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const AVector* dVector = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
  const AVector* uVector = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
  const AVector* rVector = ((const AVector*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAxes'", NULL);
#endif
  {
   self->SetAxes(*dVector,*uVector,*rVector);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAxes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPosition of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetPosition00
static int tolua_PX2_Camera_GetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPosition'", NULL);
#endif
  {
   APoint tolua_ret = (APoint)  self->GetPosition();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((APoint)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(APoint));
     tolua_pushusertype(tolua_S,tolua_obj,"APoint");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDVector of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetDVector00
static int tolua_PX2_Camera_GetDVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDVector'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->GetDVector();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUVector of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetUVector00
static int tolua_PX2_Camera_GetUVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUVector'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->GetUVector();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRVector of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetRVector00
static int tolua_PX2_Camera_GetRVector00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRVector'", NULL);
#endif
  {
   AVector tolua_ret = (AVector)  self->GetRVector();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((AVector)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(AVector));
     tolua_pushusertype(tolua_S,tolua_obj,"AVector");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRVector'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetViewMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetViewMatrix00
static int tolua_PX2_Camera_GetViewMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetViewMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetViewMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetViewMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPerspective of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_IsPerspective00
static int tolua_PX2_Camera_IsPerspective00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPerspective'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPerspective();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPerspective'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrustum of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetFrustum00
static int tolua_PX2_Camera_SetFrustum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  float dMin = ((float)  tolua_tonumber(tolua_S,2,0));
  float dMax = ((float)  tolua_tonumber(tolua_S,3,0));
  float uMin = ((float)  tolua_tonumber(tolua_S,4,0));
  float uMax = ((float)  tolua_tonumber(tolua_S,5,0));
  float rMin = ((float)  tolua_tonumber(tolua_S,6,0));
  float rMax = ((float)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrustum'", NULL);
#endif
  {
   self->SetFrustum(dMin,dMax,uMin,uMax,rMin,rMax);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFrustum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrustum of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetFrustum01
static int tolua_PX2_Camera_SetFrustum01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const float frustum = ((const float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrustum'", NULL);
#endif
  {
   self->SetFrustum(&frustum);
   tolua_pushnumber(tolua_S,(lua_Number)frustum);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Camera_SetFrustum00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFrustum of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetFrustum02
static int tolua_PX2_Camera_SetFrustum02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  float upFovDegrees = ((float)  tolua_tonumber(tolua_S,2,0));
  float aspectRatio = ((float)  tolua_tonumber(tolua_S,3,0));
  float dMin = ((float)  tolua_tonumber(tolua_S,4,0));
  float dMax = ((float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFrustum'", NULL);
#endif
  {
   self->SetFrustum(upFovDegrees,aspectRatio,dMin,dMax);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Camera_SetFrustum01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFrustum of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetFrustum00
static int tolua_PX2_Camera_GetFrustum00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
  float dMin = ((float)  tolua_tonumber(tolua_S,2,0));
  float dMax = ((float)  tolua_tonumber(tolua_S,3,0));
  float uMin = ((float)  tolua_tonumber(tolua_S,4,0));
  float uMax = ((float)  tolua_tonumber(tolua_S,5,0));
  float rMin = ((float)  tolua_tonumber(tolua_S,6,0));
  float rMax = ((float)  tolua_tonumber(tolua_S,7,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFrustum'", NULL);
#endif
  {
   self->GetFrustum(dMin,dMax,uMin,uMax,rMin,rMax);
   tolua_pushnumber(tolua_S,(lua_Number)dMin);
   tolua_pushnumber(tolua_S,(lua_Number)dMax);
   tolua_pushnumber(tolua_S,(lua_Number)uMin);
   tolua_pushnumber(tolua_S,(lua_Number)uMax);
   tolua_pushnumber(tolua_S,(lua_Number)rMin);
   tolua_pushnumber(tolua_S,(lua_Number)rMax);
  }
 }
 return 6;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFrustum'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFrustum of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetFrustum01
static int tolua_PX2_Camera_GetFrustum01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFrustum'", NULL);
#endif
  {
   const void* tolua_ret = (const void*)  self->GetFrustum();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Camera_GetFrustum00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFrustum of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetFrustum02
static int tolua_PX2_Camera_GetFrustum02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
  float upFovDegrees = ((float)  tolua_tonumber(tolua_S,2,0));
  float aspectRatio = ((float)  tolua_tonumber(tolua_S,3,0));
  float dMin = ((float)  tolua_tonumber(tolua_S,4,0));
  float dMax = ((float)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFrustum'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetFrustum(upFovDegrees,aspectRatio,dMin,dMax);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushnumber(tolua_S,(lua_Number)upFovDegrees);
   tolua_pushnumber(tolua_S,(lua_Number)aspectRatio);
   tolua_pushnumber(tolua_S,(lua_Number)dMin);
   tolua_pushnumber(tolua_S,(lua_Number)dMax);
  }
 }
 return 5;
tolua_lerror:
 return tolua_PX2_Camera_GetFrustum01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDMin of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetDMin00
static int tolua_PX2_Camera_GetDMin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDMin'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDMin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDMin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDMax of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetDMax00
static int tolua_PX2_Camera_GetDMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDMax'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUMin of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetUMin00
static int tolua_PX2_Camera_GetUMin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUMin'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetUMin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUMin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUMax of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetUMax00
static int tolua_PX2_Camera_GetUMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUMax'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetUMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRMin of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetRMin00
static int tolua_PX2_Camera_GetRMin00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRMin'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetRMin();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRMin'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRMax of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetRMax00
static int tolua_PX2_Camera_GetRMax00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRMax'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetRMax();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRMax'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDepthType of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetDepthType00
static int tolua_PX2_Camera_GetDepthType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDepthType'", NULL);
#endif
  {
   Camera::DepthType tolua_ret = (Camera::DepthType)  self->GetDepthType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDepthType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProjectionMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetProjectionMatrix00
static int tolua_PX2_Camera_GetProjectionMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProjectionMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetProjectionMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProjectionMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProjectionViewMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetProjectionViewMatrix00
static int tolua_PX2_Camera_GetProjectionViewMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProjectionViewMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetProjectionViewMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProjectionViewMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPreViewMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetPreViewMatrix00
static int tolua_PX2_Camera_SetPreViewMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HMatrix",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const HMatrix* preViewMatrix = ((const HMatrix*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPreViewMatrix'", NULL);
#endif
  {
   self->SetPreViewMatrix(*preViewMatrix);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPreViewMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPreViewMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetPreViewMatrix00
static int tolua_PX2_Camera_GetPreViewMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPreViewMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetPreViewMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPreViewMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PreViewIsIdentity of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_PreViewIsIdentity00
static int tolua_PX2_Camera_PreViewIsIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PreViewIsIdentity'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->PreViewIsIdentity();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PreViewIsIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPostProjectionMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_SetPostProjectionMatrix00
static int tolua_PX2_Camera_SetPostProjectionMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Camera",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const HMatrix",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* self = (Camera*)  tolua_tousertype(tolua_S,1,0);
  const HMatrix* postProjMatrix = ((const HMatrix*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPostProjectionMatrix'", NULL);
#endif
  {
   self->SetPostProjectionMatrix(*postProjMatrix);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPostProjectionMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPostProjectionMatrix of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_GetPostProjectionMatrix00
static int tolua_PX2_Camera_GetPostProjectionMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPostProjectionMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetPostProjectionMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPostProjectionMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PostProjectionIsIdentity of class  Camera */
#ifndef TOLUA_DISABLE_tolua_PX2_Camera_PostProjectionIsIdentity00
static int tolua_PX2_Camera_PostProjectionIsIdentity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Camera* self = (const Camera*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PostProjectionIsIdentity'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->PostProjectionIsIdentity();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PostProjectionIsIdentity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initialize of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Initialize00
static int tolua_PX2_Renderer_Initialize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Texture::Format",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Texture::Format",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  int width = ((int)  tolua_tonumber(tolua_S,2,0));
  int height = ((int)  tolua_tonumber(tolua_S,3,0));
  Texture::Format colorFormat = *((Texture::Format*)  tolua_tousertype(tolua_S,4,0));
  Texture::Format depthStencilFormat = *((Texture::Format*)  tolua_tousertype(tolua_S,5,0));
  int numMultisamples = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initialize'", NULL);
#endif
  {
   self->Initialize(width,height,colorFormat,depthStencilFormat,numMultisamples);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initialize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Terminate of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Terminate00
static int tolua_PX2_Renderer_Terminate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Terminate'", NULL);
#endif
  {
   self->Terminate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Terminate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDefaultRenderer of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetDefaultRenderer00
static int tolua_PX2_Renderer_SetDefaultRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* renderer = ((Renderer*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::SetDefaultRenderer(renderer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDefaultRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDefaultRenderer of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetDefaultRenderer00
static int tolua_PX2_Renderer_GetDefaultRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Renderer* tolua_ret = (Renderer*)  Renderer::GetDefaultRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Renderer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDefaultRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetWidth00
static int tolua_PX2_Renderer_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetHeight00
static int tolua_PX2_Renderer_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetColorFormat of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetColorFormat00
static int tolua_PX2_Renderer_GetColorFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetColorFormat'", NULL);
#endif
  {
   Texture::Format tolua_ret = (Texture::Format)  self->GetColorFormat();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Texture::Format)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Texture::Format");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Texture::Format));
     tolua_pushusertype(tolua_S,tolua_obj,"Texture::Format");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetColorFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDepthStencilFormat of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetDepthStencilFormat00
static int tolua_PX2_Renderer_GetDepthStencilFormat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDepthStencilFormat'", NULL);
#endif
  {
   Texture::Format tolua_ret = (Texture::Format)  self->GetDepthStencilFormat();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Texture::Format)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Texture::Format");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Texture::Format));
     tolua_pushusertype(tolua_S,tolua_obj,"Texture::Format");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDepthStencilFormat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumMultisamples of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetNumMultisamples00
static int tolua_PX2_Renderer_GetNumMultisamples00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumMultisamples'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumMultisamples();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumMultisamples'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Bind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Bind00
static int tolua_PX2_Renderer_Bind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexFormat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexFormat* vformat = ((const VertexFormat*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Bind'", NULL);
#endif
  {
   self->Bind(vformat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Bind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_BindAll00
static int tolua_PX2_Renderer_BindAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexFormat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const VertexFormat* vformat = ((const VertexFormat*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::BindAll(vformat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BindAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unbind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unbind00
static int tolua_PX2_Renderer_Unbind00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexFormat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexFormat* vformat = ((const VertexFormat*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unbind'", NULL);
#endif
  {
   self->Unbind(vformat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Unbind'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnbindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UnbindAll00
static int tolua_PX2_Renderer_UnbindAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexFormat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const VertexFormat* vformat = ((const VertexFormat*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UnbindAll(vformat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UnbindAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable00
static int tolua_PX2_Renderer_Enable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexFormat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexFormat* vformat = ((const VertexFormat*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(vformat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Enable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Disable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Disable00
static int tolua_PX2_Renderer_Disable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexFormat",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexFormat* vformat = ((const VertexFormat*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Disable'", NULL);
#endif
  {
   self->Disable(vformat);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Disable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Bind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Bind01
static int tolua_PX2_Renderer_Bind01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexBuffer* vbuffer = ((const VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Bind'", NULL);
#endif
  {
   self->Bind(vbuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Bind00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_BindAll01
static int tolua_PX2_Renderer_BindAll01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const VertexBuffer* vbuffer = ((const VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::BindAll(vbuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_BindAll00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unbind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unbind01
static int tolua_PX2_Renderer_Unbind01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexBuffer* vbuffer = ((const VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unbind'", NULL);
#endif
  {
   self->Unbind(vbuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unbind00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnbindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UnbindAll01
static int tolua_PX2_Renderer_UnbindAll01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const VertexBuffer* vbuffer = ((const VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UnbindAll(vbuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UnbindAll00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable01
static int tolua_PX2_Renderer_Enable01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexBuffer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexBuffer* vbuffer = ((const VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
  unsigned int streamIndex = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
  unsigned int offset = ((unsigned int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(vbuffer,streamIndex,offset);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Enable00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Disable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Disable01
static int tolua_PX2_Renderer_Disable01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexBuffer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexBuffer* vbuffer = ((const VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
  unsigned int streamIndex = ((unsigned int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Disable'", NULL);
#endif
  {
   self->Disable(vbuffer,streamIndex);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Disable00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Lock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Lock00
static int tolua_PX2_Renderer_Lock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexBuffer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Buffer::Locking",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexBuffer* vbuffer = ((const VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
  Buffer::Locking mode = *((Buffer::Locking*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Lock'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->Lock(vbuffer,mode);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Lock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unlock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unlock00
static int tolua_PX2_Renderer_Unlock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexBuffer* vbuffer = ((const VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unlock'", NULL);
#endif
  {
   self->Unlock(vbuffer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Unlock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Update00
static int tolua_PX2_Renderer_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexBuffer* vbuffer = ((const VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(vbuffer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UpdateAll00
static int tolua_PX2_Renderer_UpdateAll00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const VertexBuffer* vbuffer = ((const VertexBuffer*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UpdateAll(vbuffer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UpdateAll'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Bind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Bind02
static int tolua_PX2_Renderer_Bind02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const IndexBuffer* ibuffer = ((const IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Bind'", NULL);
#endif
  {
   self->Bind(ibuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Bind01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_BindAll02
static int tolua_PX2_Renderer_BindAll02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const IndexBuffer* ibuffer = ((const IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::BindAll(ibuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_BindAll01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unbind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unbind02
static int tolua_PX2_Renderer_Unbind02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const IndexBuffer* ibuffer = ((const IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unbind'", NULL);
#endif
  {
   self->Unbind(ibuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unbind01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnbindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UnbindAll02
static int tolua_PX2_Renderer_UnbindAll02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const IndexBuffer* ibuffer = ((const IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UnbindAll(ibuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UnbindAll01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable02
static int tolua_PX2_Renderer_Enable02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const IndexBuffer* ibuffer = ((const IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(ibuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Enable01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Disable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Disable02
static int tolua_PX2_Renderer_Disable02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const IndexBuffer* ibuffer = ((const IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Disable'", NULL);
#endif
  {
   self->Disable(ibuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Disable01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Lock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Lock01
static int tolua_PX2_Renderer_Lock01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const IndexBuffer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"Buffer::Locking",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const IndexBuffer* ibuffer = ((const IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
  Buffer::Locking mode = *((Buffer::Locking*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Lock'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->Lock(ibuffer,mode);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Renderer_Lock00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unlock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unlock01
static int tolua_PX2_Renderer_Unlock01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const IndexBuffer* ibuffer = ((const IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unlock'", NULL);
#endif
  {
   self->Unlock(ibuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unlock00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Update01
static int tolua_PX2_Renderer_Update01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const IndexBuffer* ibuffer = ((const IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(ibuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Update00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UpdateAll01
static int tolua_PX2_Renderer_UpdateAll01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const IndexBuffer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const IndexBuffer* ibuffer = ((const IndexBuffer*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UpdateAll(ibuffer);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UpdateAll00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Bind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Bind03
static int tolua_PX2_Renderer_Bind03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture1D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture1D* texture = ((const Texture1D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Bind'", NULL);
#endif
  {
   self->Bind(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Bind02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_BindAll03
static int tolua_PX2_Renderer_BindAll03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture1D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Texture1D* texture = ((const Texture1D*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::BindAll(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_BindAll02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unbind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unbind03
static int tolua_PX2_Renderer_Unbind03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture1D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture1D* texture = ((const Texture1D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unbind'", NULL);
#endif
  {
   self->Unbind(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unbind02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnbindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UnbindAll03
static int tolua_PX2_Renderer_UnbindAll03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture1D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Texture1D* texture = ((const Texture1D*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UnbindAll(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UnbindAll02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable03
static int tolua_PX2_Renderer_Enable03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture1D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture1D* texture = ((const Texture1D*)  tolua_tousertype(tolua_S,2,0));
  int textureUnit = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(texture,textureUnit);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Enable02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Disable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Disable03
static int tolua_PX2_Renderer_Disable03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture1D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture1D* texture = ((const Texture1D*)  tolua_tousertype(tolua_S,2,0));
  int textureUnit = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Disable'", NULL);
#endif
  {
   self->Disable(texture,textureUnit);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Disable02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Lock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Lock02
static int tolua_PX2_Renderer_Lock02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture1D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Buffer::Locking",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture1D* texture = ((const Texture1D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
  Buffer::Locking mode = *((Buffer::Locking*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Lock'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->Lock(texture,level,mode);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Renderer_Lock01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unlock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unlock02
static int tolua_PX2_Renderer_Unlock02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture1D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture1D* texture = ((const Texture1D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unlock'", NULL);
#endif
  {
   self->Unlock(texture,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unlock01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Update02
static int tolua_PX2_Renderer_Update02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture1D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture1D* texture = ((const Texture1D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(texture,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Update01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UpdateAll02
static int tolua_PX2_Renderer_UpdateAll02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture1D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Texture1D* texture = ((const Texture1D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Renderer::UpdateAll(texture,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UpdateAll01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Bind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Bind04
static int tolua_PX2_Renderer_Bind04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Bind'", NULL);
#endif
  {
   self->Bind(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Bind03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_BindAll04
static int tolua_PX2_Renderer_BindAll04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::BindAll(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_BindAll03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unbind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unbind04
static int tolua_PX2_Renderer_Unbind04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unbind'", NULL);
#endif
  {
   self->Unbind(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unbind03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnbindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UnbindAll04
static int tolua_PX2_Renderer_UnbindAll04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UnbindAll(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UnbindAll03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable04
static int tolua_PX2_Renderer_Enable04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
  int textureUnit = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(texture,textureUnit);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Enable03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable05
static int tolua_PX2_Renderer_Enable05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
  int textureUnit = ((int)  tolua_tonumber(tolua_S,3,0));
  int loc = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(texture,textureUnit,loc);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Enable04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Disable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Disable04
static int tolua_PX2_Renderer_Disable04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
  int textureUnit = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Disable'", NULL);
#endif
  {
   self->Disable(texture,textureUnit);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Disable03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Lock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Lock03
static int tolua_PX2_Renderer_Lock03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Buffer::Locking",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
  Buffer::Locking mode = *((Buffer::Locking*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Lock'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->Lock(texture,level,mode);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Renderer_Lock02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unlock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unlock03
static int tolua_PX2_Renderer_Unlock03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unlock'", NULL);
#endif
  {
   self->Unlock(texture,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unlock02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Update03
static int tolua_PX2_Renderer_Update03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(texture,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Update02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UpdateAll03
static int tolua_PX2_Renderer_UpdateAll03(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture2D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Texture2D* texture = ((const Texture2D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Renderer::UpdateAll(texture,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UpdateAll02(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Bind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Bind05
static int tolua_PX2_Renderer_Bind05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture3D* texture = ((const Texture3D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Bind'", NULL);
#endif
  {
   self->Bind(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Bind04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_BindAll05
static int tolua_PX2_Renderer_BindAll05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Texture3D* texture = ((const Texture3D*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::BindAll(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_BindAll04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unbind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unbind05
static int tolua_PX2_Renderer_Unbind05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture3D* texture = ((const Texture3D*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unbind'", NULL);
#endif
  {
   self->Unbind(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unbind04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnbindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UnbindAll05
static int tolua_PX2_Renderer_UnbindAll05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Texture3D* texture = ((const Texture3D*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UnbindAll(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UnbindAll04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable06
static int tolua_PX2_Renderer_Enable06(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture3D* texture = ((const Texture3D*)  tolua_tousertype(tolua_S,2,0));
  int textureUnit = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(texture,textureUnit);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Enable05(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Disable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Disable05
static int tolua_PX2_Renderer_Disable05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture3D* texture = ((const Texture3D*)  tolua_tousertype(tolua_S,2,0));
  int textureUnit = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Disable'", NULL);
#endif
  {
   self->Disable(texture,textureUnit);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Disable04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Lock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Lock04
static int tolua_PX2_Renderer_Lock04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"Buffer::Locking",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture3D* texture = ((const Texture3D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
  Buffer::Locking mode = *((Buffer::Locking*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Lock'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->Lock(texture,level,mode);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Renderer_Lock03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unlock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unlock04
static int tolua_PX2_Renderer_Unlock04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture3D* texture = ((const Texture3D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unlock'", NULL);
#endif
  {
   self->Unlock(texture,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unlock03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Update04
static int tolua_PX2_Renderer_Update04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Texture3D* texture = ((const Texture3D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(texture,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Update03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UpdateAll04
static int tolua_PX2_Renderer_UpdateAll04(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Texture3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Texture3D* texture = ((const Texture3D*)  tolua_tousertype(tolua_S,2,0));
  int level = ((int)  tolua_tonumber(tolua_S,3,0));
  {
   Renderer::UpdateAll(texture,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UpdateAll03(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Bind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Bind06
static int tolua_PX2_Renderer_Bind06(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const TextureCube",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const TextureCube* texture = ((const TextureCube*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Bind'", NULL);
#endif
  {
   self->Bind(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Bind05(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_BindAll06
static int tolua_PX2_Renderer_BindAll06(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const TextureCube",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const TextureCube* texture = ((const TextureCube*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::BindAll(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_BindAll05(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unbind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unbind06
static int tolua_PX2_Renderer_Unbind06(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const TextureCube",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const TextureCube* texture = ((const TextureCube*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unbind'", NULL);
#endif
  {
   self->Unbind(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unbind05(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnbindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UnbindAll06
static int tolua_PX2_Renderer_UnbindAll06(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const TextureCube",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const TextureCube* texture = ((const TextureCube*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UnbindAll(texture);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UnbindAll05(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable07
static int tolua_PX2_Renderer_Enable07(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const TextureCube",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const TextureCube* texture = ((const TextureCube*)  tolua_tousertype(tolua_S,2,0));
  int textureUnit = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(texture,textureUnit);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Enable06(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Disable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Disable06
static int tolua_PX2_Renderer_Disable06(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const TextureCube",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const TextureCube* texture = ((const TextureCube*)  tolua_tousertype(tolua_S,2,0));
  int textureUnit = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Disable'", NULL);
#endif
  {
   self->Disable(texture,textureUnit);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Disable05(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Lock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Lock05
static int tolua_PX2_Renderer_Lock05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const TextureCube",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"Buffer::Locking",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const TextureCube* texture = ((const TextureCube*)  tolua_tousertype(tolua_S,2,0));
  int face = ((int)  tolua_tonumber(tolua_S,3,0));
  int level = ((int)  tolua_tonumber(tolua_S,4,0));
  Buffer::Locking mode = *((Buffer::Locking*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Lock'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->Lock(texture,face,level,mode);
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Renderer_Lock04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unlock of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unlock05
static int tolua_PX2_Renderer_Unlock05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const TextureCube",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const TextureCube* texture = ((const TextureCube*)  tolua_tousertype(tolua_S,2,0));
  int face = ((int)  tolua_tonumber(tolua_S,3,0));
  int level = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unlock'", NULL);
#endif
  {
   self->Unlock(texture,face,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unlock04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Update05
static int tolua_PX2_Renderer_Update05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const TextureCube",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const TextureCube* texture = ((const TextureCube*)  tolua_tousertype(tolua_S,2,0));
  int face = ((int)  tolua_tonumber(tolua_S,3,0));
  int level = ((int)  tolua_tonumber(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(texture,face,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Update04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UpdateAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UpdateAll05
static int tolua_PX2_Renderer_UpdateAll05(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const TextureCube",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const TextureCube* texture = ((const TextureCube*)  tolua_tousertype(tolua_S,2,0));
  int face = ((int)  tolua_tonumber(tolua_S,3,0));
  int level = ((int)  tolua_tonumber(tolua_S,4,0));
  {
   Renderer::UpdateAll(texture,face,level);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UpdateAll04(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Bind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Bind07
static int tolua_PX2_Renderer_Bind07(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const RenderTarget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const RenderTarget* renderTarget = ((const RenderTarget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Bind'", NULL);
#endif
  {
   self->Bind(renderTarget);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Bind06(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_BindAll07
static int tolua_PX2_Renderer_BindAll07(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const RenderTarget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const RenderTarget* renderTarget = ((const RenderTarget*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::BindAll(renderTarget);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_BindAll06(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unbind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unbind07
static int tolua_PX2_Renderer_Unbind07(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const RenderTarget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const RenderTarget* renderTarget = ((const RenderTarget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unbind'", NULL);
#endif
  {
   self->Unbind(renderTarget);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unbind06(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnbindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UnbindAll07
static int tolua_PX2_Renderer_UnbindAll07(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const RenderTarget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const RenderTarget* renderTarget = ((const RenderTarget*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UnbindAll(renderTarget);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UnbindAll06(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable08
static int tolua_PX2_Renderer_Enable08(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const RenderTarget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const RenderTarget* renderTarget = ((const RenderTarget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(renderTarget);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Enable07(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Disable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Disable07
static int tolua_PX2_Renderer_Disable07(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const RenderTarget",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const RenderTarget* renderTarget = ((const RenderTarget*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Disable'", NULL);
#endif
  {
   self->Disable(renderTarget);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Disable06(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ReadColor of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_ReadColor00
static int tolua_PX2_Renderer_ReadColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const RenderTarget",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"Texture2D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
  const RenderTarget* renderTarget = ((const RenderTarget*)  tolua_tousertype(tolua_S,3,0));
  Texture2D* texture = ((Texture2D*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ReadColor'", NULL);
#endif
  {
   self->ReadColor(i,renderTarget,texture);
    tolua_pushusertype(tolua_S,(void*)texture,"Texture2D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ReadColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Bind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Bind08
static int tolua_PX2_Renderer_Bind08(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexShader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexShader* vshader = ((const VertexShader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Bind'", NULL);
#endif
  {
   self->Bind(vshader);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Bind07(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_BindAll08
static int tolua_PX2_Renderer_BindAll08(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexShader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const VertexShader* vshader = ((const VertexShader*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::BindAll(vshader);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_BindAll07(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unbind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unbind08
static int tolua_PX2_Renderer_Unbind08(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexShader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexShader* vshader = ((const VertexShader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unbind'", NULL);
#endif
  {
   self->Unbind(vshader);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unbind07(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnbindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UnbindAll08
static int tolua_PX2_Renderer_UnbindAll08(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexShader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const VertexShader* vshader = ((const VertexShader*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UnbindAll(vshader);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UnbindAll07(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable09
static int tolua_PX2_Renderer_Enable09(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexShader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const ShaderParameters",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexShader* vshader = ((const VertexShader*)  tolua_tousertype(tolua_S,2,0));
  const ShaderParameters* parameters = ((const ShaderParameters*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(vshader,parameters);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Enable08(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Disable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Disable08
static int tolua_PX2_Renderer_Disable08(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const VertexShader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const ShaderParameters",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VertexShader* vshader = ((const VertexShader*)  tolua_tousertype(tolua_S,2,0));
  const ShaderParameters* parameters = ((const ShaderParameters*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Disable'", NULL);
#endif
  {
   self->Disable(vshader,parameters);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Disable07(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Bind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Bind09
static int tolua_PX2_Renderer_Bind09(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const PixelShader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const PixelShader* pshader = ((const PixelShader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Bind'", NULL);
#endif
  {
   self->Bind(pshader);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Bind08(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: BindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_BindAll09
static int tolua_PX2_Renderer_BindAll09(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const PixelShader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const PixelShader* pshader = ((const PixelShader*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::BindAll(pshader);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_BindAll08(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Unbind of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Unbind09
static int tolua_PX2_Renderer_Unbind09(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const PixelShader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const PixelShader* pshader = ((const PixelShader*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Unbind'", NULL);
#endif
  {
   self->Unbind(pshader);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Unbind08(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnbindAll of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_UnbindAll09
static int tolua_PX2_Renderer_UnbindAll09(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const PixelShader",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const PixelShader* pshader = ((const PixelShader*)  tolua_tousertype(tolua_S,2,0));
  {
   Renderer::UnbindAll(pshader);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_UnbindAll08(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Enable10
static int tolua_PX2_Renderer_Enable10(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const PixelShader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const ShaderParameters",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const PixelShader* pshader = ((const PixelShader*)  tolua_tousertype(tolua_S,2,0));
  const ShaderParameters* parameters = ((const ShaderParameters*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(pshader,parameters);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Enable09(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Disable of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Disable09
static int tolua_PX2_Renderer_Disable09(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const PixelShader",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const ShaderParameters",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const PixelShader* pshader = ((const PixelShader*)  tolua_tousertype(tolua_S,2,0));
  const ShaderParameters* parameters = ((const ShaderParameters*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Disable'", NULL);
#endif
  {
   self->Disable(pshader,parameters);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Disable08(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAlphaProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetAlphaProperty00
static int tolua_PX2_Renderer_GetAlphaProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAlphaProperty'", NULL);
#endif
  {
   const AlphaProperty* tolua_ret = (const AlphaProperty*)  self->GetAlphaProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const AlphaProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAlphaProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCullProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetCullProperty00
static int tolua_PX2_Renderer_GetCullProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCullProperty'", NULL);
#endif
  {
   const CullProperty* tolua_ret = (const CullProperty*)  self->GetCullProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const CullProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCullProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDepthProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetDepthProperty00
static int tolua_PX2_Renderer_GetDepthProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDepthProperty'", NULL);
#endif
  {
   const DepthProperty* tolua_ret = (const DepthProperty*)  self->GetDepthProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const DepthProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDepthProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOffsetProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetOffsetProperty00
static int tolua_PX2_Renderer_GetOffsetProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOffsetProperty'", NULL);
#endif
  {
   const OffsetProperty* tolua_ret = (const OffsetProperty*)  self->GetOffsetProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const OffsetProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOffsetProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetStencilProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetStencilProperty00
static int tolua_PX2_Renderer_GetStencilProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetStencilProperty'", NULL);
#endif
  {
   const StencilProperty* tolua_ret = (const StencilProperty*)  self->GetStencilProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const StencilProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetStencilProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWireProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetWireProperty00
static int tolua_PX2_Renderer_GetWireProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWireProperty'", NULL);
#endif
  {
   const WireProperty* tolua_ret = (const WireProperty*)  self->GetWireProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const WireProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWireProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCamera of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetCamera00
static int tolua_PX2_Renderer_SetCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  Camera* camera = ((Camera*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCamera'", NULL);
#endif
  {
   self->SetCamera(camera);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCamera of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetCamera00
static int tolua_PX2_Renderer_GetCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCamera'", NULL);
#endif
  {
   Camera* tolua_ret = (Camera*)  self->GetCamera();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCamera of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetCamera01
static int tolua_PX2_Renderer_GetCamera01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCamera'", NULL);
#endif
  {
   const Camera* tolua_ret = (const Camera*)  self->GetCamera();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const Camera");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Renderer_GetCamera00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetViewMatrix of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetViewMatrix00
static int tolua_PX2_Renderer_GetViewMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetViewMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetViewMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetViewMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProjectionMatrix of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetProjectionMatrix00
static int tolua_PX2_Renderer_GetProjectionMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProjectionMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetProjectionMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProjectionMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPostProjectionMatrix of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetPostProjectionMatrix00
static int tolua_PX2_Renderer_GetPostProjectionMatrix00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPostProjectionMatrix'", NULL);
#endif
  {
   const HMatrix& tolua_ret = (const HMatrix&)  self->GetPostProjectionMatrix();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const HMatrix");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPostProjectionMatrix'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPickRay of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetPickRay00
static int tolua_PX2_Renderer_GetPickRay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,4,&tolua_err) || !tolua_isusertype(tolua_S,4,"APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  APoint* origin = ((APoint*)  tolua_tousertype(tolua_S,4,0));
  AVector* direction = ((AVector*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPickRay'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetPickRay(x,y,*origin,*direction);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPickRay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PointWorldToViewPort of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_PointWorldToViewPort00
static int tolua_PX2_Renderer_PointWorldToViewPort00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const APoint* point = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  bool isInBack = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PointWorldToViewPort'", NULL);
#endif
  {
   Vector2f tolua_ret = (Vector2f)  self->PointWorldToViewPort(*point,&isInBack);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Vector2f)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2f");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Vector2f));
     tolua_pushusertype(tolua_S,tolua_obj,"Vector2f");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
   tolua_pushboolean(tolua_S,(bool)isInBack);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PointWorldToViewPort'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearColor of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetClearColor00
static int tolua_PX2_Renderer_SetClearColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Float4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Float4* clearColor = ((const Float4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearColor'", NULL);
#endif
  {
   self->SetClearColor(*clearColor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearColor of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetClearColor00
static int tolua_PX2_Renderer_GetClearColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearColor'", NULL);
#endif
  {
   const Float4& tolua_ret = (const Float4&)  self->GetClearColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float4");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearDepth of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetClearDepth00
static int tolua_PX2_Renderer_SetClearDepth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  float clearDepth = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearDepth'", NULL);
#endif
  {
   self->SetClearDepth(clearDepth);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearDepth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearDepth of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetClearDepth00
static int tolua_PX2_Renderer_GetClearDepth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearDepth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetClearDepth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearDepth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClearStencil of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetClearStencil00
static int tolua_PX2_Renderer_SetClearStencil00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  unsigned int clearStencil = ((unsigned int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClearStencil'", NULL);
#endif
  {
   self->SetClearStencil(clearStencil);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClearStencil'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClearStencil of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetClearStencil00
static int tolua_PX2_Renderer_GetClearStencil00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClearStencil'", NULL);
#endif
  {
   unsigned int tolua_ret = (unsigned int)  self->GetClearStencil();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClearStencil'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetColorMask of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetColorMask00
static int tolua_PX2_Renderer_GetColorMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
  bool allowRed = ((bool)  tolua_toboolean(tolua_S,2,0));
  bool allowGreen = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool allowBlue = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool allowAlpha = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetColorMask'", NULL);
#endif
  {
   self->GetColorMask(allowRed,allowGreen,allowBlue,allowAlpha);
   tolua_pushboolean(tolua_S,(bool)allowRed);
   tolua_pushboolean(tolua_S,(bool)allowGreen);
   tolua_pushboolean(tolua_S,(bool)allowBlue);
   tolua_pushboolean(tolua_S,(bool)allowAlpha);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetColorMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOverrideAlphaProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetOverrideAlphaProperty00
static int tolua_PX2_Renderer_SetOverrideAlphaProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const AlphaProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const AlphaProperty* alphaState = ((const AlphaProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOverrideAlphaProperty'", NULL);
#endif
  {
   self->SetOverrideAlphaProperty(alphaState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOverrideAlphaProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOverrideCullProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetOverrideCullProperty00
static int tolua_PX2_Renderer_SetOverrideCullProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CullProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const CullProperty* cullState = ((const CullProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOverrideCullProperty'", NULL);
#endif
  {
   self->SetOverrideCullProperty(cullState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOverrideCullProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOverrideDepthProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetOverrideDepthProperty00
static int tolua_PX2_Renderer_SetOverrideDepthProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const DepthProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const DepthProperty* depthState = ((const DepthProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOverrideDepthProperty'", NULL);
#endif
  {
   self->SetOverrideDepthProperty(depthState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOverrideDepthProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOverrideOffsetProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetOverrideOffsetProperty00
static int tolua_PX2_Renderer_SetOverrideOffsetProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const OffsetProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const OffsetProperty* offsetState = ((const OffsetProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOverrideOffsetProperty'", NULL);
#endif
  {
   self->SetOverrideOffsetProperty(offsetState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOverrideOffsetProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOverrideStencilProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetOverrideStencilProperty00
static int tolua_PX2_Renderer_SetOverrideStencilProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const StencilProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const StencilProperty* stencilState = ((const StencilProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOverrideStencilProperty'", NULL);
#endif
  {
   self->SetOverrideStencilProperty(stencilState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOverrideStencilProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOverrideWireProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetOverrideWireProperty00
static int tolua_PX2_Renderer_SetOverrideWireProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const WireProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const WireProperty* wireState = ((const WireProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOverrideWireProperty'", NULL);
#endif
  {
   self->SetOverrideWireProperty(wireState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOverrideWireProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOverrideAlphaProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetOverrideAlphaProperty00
static int tolua_PX2_Renderer_GetOverrideAlphaProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOverrideAlphaProperty'", NULL);
#endif
  {
   const AlphaProperty* tolua_ret = (const AlphaProperty*)  self->GetOverrideAlphaProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const AlphaProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOverrideAlphaProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOverrideCullProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetOverrideCullProperty00
static int tolua_PX2_Renderer_GetOverrideCullProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOverrideCullProperty'", NULL);
#endif
  {
   const CullProperty* tolua_ret = (const CullProperty*)  self->GetOverrideCullProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const CullProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOverrideCullProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOverrideDepthProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetOverrideDepthProperty00
static int tolua_PX2_Renderer_GetOverrideDepthProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOverrideDepthProperty'", NULL);
#endif
  {
   const DepthProperty* tolua_ret = (const DepthProperty*)  self->GetOverrideDepthProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const DepthProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOverrideDepthProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOverrideOffsetProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetOverrideOffsetProperty00
static int tolua_PX2_Renderer_GetOverrideOffsetProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOverrideOffsetProperty'", NULL);
#endif
  {
   const OffsetProperty* tolua_ret = (const OffsetProperty*)  self->GetOverrideOffsetProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const OffsetProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOverrideOffsetProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOverrideStencilProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetOverrideStencilProperty00
static int tolua_PX2_Renderer_GetOverrideStencilProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOverrideStencilProperty'", NULL);
#endif
  {
   const StencilProperty* tolua_ret = (const StencilProperty*)  self->GetOverrideStencilProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const StencilProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOverrideStencilProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOverrideWireProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetOverrideWireProperty00
static int tolua_PX2_Renderer_GetOverrideWireProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOverrideWireProperty'", NULL);
#endif
  {
   const WireProperty* tolua_ret = (const WireProperty*)  self->GetOverrideWireProperty();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const WireProperty");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOverrideWireProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetReverseCullOrder of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetReverseCullOrder00
static int tolua_PX2_Renderer_SetReverseCullOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  bool reverseCullOrder = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetReverseCullOrder'", NULL);
#endif
  {
   self->SetReverseCullOrder(reverseCullOrder);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetReverseCullOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetReverseCullOrder of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetReverseCullOrder00
static int tolua_PX2_Renderer_GetReverseCullOrder00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetReverseCullOrder'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->GetReverseCullOrder();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetReverseCullOrder'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Draw of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Draw00
static int tolua_PX2_Renderer_Draw00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const VisibleSet",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,3,"GlobalMaterial",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const VisibleSet* visibleSet = ((const VisibleSet*)  tolua_tousertype(tolua_S,2,0));
  GlobalMaterial* globalMaterial = ((GlobalMaterial*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Draw'", NULL);
#endif
  {
   self->Draw(*visibleSet,globalMaterial);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Draw'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Draw of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Draw01
static int tolua_PX2_Renderer_Draw01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Renderable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Renderable* renderable = ((const Renderable*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Draw'", NULL);
#endif
  {
   self->Draw(renderable);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Draw00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: Draw of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Draw02
static int tolua_PX2_Renderer_Draw02(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Renderable",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const MaterialInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const Renderable* renderable = ((const Renderable*)  tolua_tousertype(tolua_S,2,0));
  const MaterialInstance* instance = ((const MaterialInstance*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Draw'", NULL);
#endif
  {
   self->Draw(renderable,instance);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_Draw01(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAlphaProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetAlphaProperty00
static int tolua_PX2_Renderer_SetAlphaProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const AlphaProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const AlphaProperty* alphaState = ((const AlphaProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAlphaProperty'", NULL);
#endif
  {
   self->SetAlphaProperty(alphaState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAlphaProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCullProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetCullProperty00
static int tolua_PX2_Renderer_SetCullProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const CullProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const CullProperty* cullState = ((const CullProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCullProperty'", NULL);
#endif
  {
   self->SetCullProperty(cullState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCullProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDepthProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetDepthProperty00
static int tolua_PX2_Renderer_SetDepthProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const DepthProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const DepthProperty* depthState = ((const DepthProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDepthProperty'", NULL);
#endif
  {
   self->SetDepthProperty(depthState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDepthProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOffsetProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetOffsetProperty00
static int tolua_PX2_Renderer_SetOffsetProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const OffsetProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const OffsetProperty* offsetState = ((const OffsetProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOffsetProperty'", NULL);
#endif
  {
   self->SetOffsetProperty(offsetState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOffsetProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetStencilProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetStencilProperty00
static int tolua_PX2_Renderer_SetStencilProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const StencilProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const StencilProperty* stencilState = ((const StencilProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetStencilProperty'", NULL);
#endif
  {
   self->SetStencilProperty(stencilState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetStencilProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWireProperty of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetWireProperty00
static int tolua_PX2_Renderer_SetWireProperty00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const WireProperty",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  const WireProperty* wireState = ((const WireProperty*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWireProperty'", NULL);
#endif
  {
   self->SetWireProperty(wireState);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWireProperty'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetViewport of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetViewport00
static int tolua_PX2_Renderer_SetViewport00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  int xPosition = ((int)  tolua_tonumber(tolua_S,2,0));
  int yPosition = ((int)  tolua_tonumber(tolua_S,3,0));
  int width = ((int)  tolua_tonumber(tolua_S,4,0));
  int height = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetViewport'", NULL);
#endif
  {
   self->SetViewport(xPosition,yPosition,width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetViewport'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetViewport of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetViewport00
static int tolua_PX2_Renderer_GetViewport00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
  int xPosition = ((int)  tolua_tonumber(tolua_S,2,0));
  int yPosition = ((int)  tolua_tonumber(tolua_S,3,0));
  int width = ((int)  tolua_tonumber(tolua_S,4,0));
  int height = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetViewport'", NULL);
#endif
  {
   self->GetViewport(xPosition,yPosition,width,height);
   tolua_pushnumber(tolua_S,(lua_Number)xPosition);
   tolua_pushnumber(tolua_S,(lua_Number)yPosition);
   tolua_pushnumber(tolua_S,(lua_Number)width);
   tolua_pushnumber(tolua_S,(lua_Number)height);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetViewport'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDepthRange of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetDepthRange00
static int tolua_PX2_Renderer_SetDepthRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  float zMin = ((float)  tolua_tonumber(tolua_S,2,0));
  float zMax = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDepthRange'", NULL);
#endif
  {
   self->SetDepthRange(zMin,zMax);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDepthRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDepthRange of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_GetDepthRange00
static int tolua_PX2_Renderer_GetDepthRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Renderer* self = (const Renderer*)  tolua_tousertype(tolua_S,1,0);
  float zMin = ((float)  tolua_tonumber(tolua_S,2,0));
  float zMax = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDepthRange'", NULL);
#endif
  {
   self->GetDepthRange(zMin,zMax);
   tolua_pushnumber(tolua_S,(lua_Number)zMin);
   tolua_pushnumber(tolua_S,(lua_Number)zMax);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDepthRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Resize of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_Resize00
static int tolua_PX2_Renderer_Resize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  int width = ((int)  tolua_tonumber(tolua_S,2,0));
  int height = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Resize'", NULL);
#endif
  {
   self->Resize(width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Resize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResizeWindow of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_ResizeWindow00
static int tolua_PX2_Renderer_ResizeWindow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  int width = ((int)  tolua_tonumber(tolua_S,2,0));
  int height = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResizeWindow'", NULL);
#endif
  {
   self->ResizeWindow(width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResizeWindow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearColorBuffer of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_ClearColorBuffer00
static int tolua_PX2_Renderer_ClearColorBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearColorBuffer'", NULL);
#endif
  {
   self->ClearColorBuffer();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearColorBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearDepthBuffer of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_ClearDepthBuffer00
static int tolua_PX2_Renderer_ClearDepthBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearDepthBuffer'", NULL);
#endif
  {
   self->ClearDepthBuffer();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearDepthBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearStencilBuffer of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_ClearStencilBuffer00
static int tolua_PX2_Renderer_ClearStencilBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearStencilBuffer'", NULL);
#endif
  {
   self->ClearStencilBuffer();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearStencilBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearBuffers of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_ClearBuffers00
static int tolua_PX2_Renderer_ClearBuffers00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearBuffers'", NULL);
#endif
  {
   self->ClearBuffers();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearBuffers'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearColorBuffer of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_ClearColorBuffer01
static int tolua_PX2_Renderer_ClearColorBuffer01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearColorBuffer'", NULL);
#endif
  {
   self->ClearColorBuffer(x,y,w,h);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_ClearColorBuffer00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearDepthBuffer of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_ClearDepthBuffer01
static int tolua_PX2_Renderer_ClearDepthBuffer01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearDepthBuffer'", NULL);
#endif
  {
   self->ClearDepthBuffer(x,y,w,h);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_ClearDepthBuffer00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearStencilBuffer of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_ClearStencilBuffer01
static int tolua_PX2_Renderer_ClearStencilBuffer01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearStencilBuffer'", NULL);
#endif
  {
   self->ClearStencilBuffer(x,y,w,h);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_ClearStencilBuffer00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearBuffers of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_ClearBuffers01
static int tolua_PX2_Renderer_ClearBuffers01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  int x = ((int)  tolua_tonumber(tolua_S,2,0));
  int y = ((int)  tolua_tonumber(tolua_S,3,0));
  int w = ((int)  tolua_tonumber(tolua_S,4,0));
  int h = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearBuffers'", NULL);
#endif
  {
   self->ClearBuffers(x,y,w,h);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_Renderer_ClearBuffers00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: DisplayColorBuffer of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_DisplayColorBuffer00
static int tolua_PX2_Renderer_DisplayColorBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DisplayColorBuffer'", NULL);
#endif
  {
   self->DisplayColorBuffer();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DisplayColorBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetColorMask of class  Renderer */
#ifndef TOLUA_DISABLE_tolua_PX2_Renderer_SetColorMask00
static int tolua_PX2_Renderer_SetColorMask00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Renderer",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Renderer* self = (Renderer*)  tolua_tousertype(tolua_S,1,0);
  bool allowRed = ((bool)  tolua_toboolean(tolua_S,2,0));
  bool allowGreen = ((bool)  tolua_toboolean(tolua_S,3,0));
  bool allowBlue = ((bool)  tolua_toboolean(tolua_S,4,0));
  bool allowAlpha = ((bool)  tolua_toboolean(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetColorMask'", NULL);
#endif
  {
   self->SetColorMask(allowRed,allowGreen,allowBlue,allowAlpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetColorMask'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_PX2_InputEventData_new00
static int tolua_PX2_InputEventData_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InputEventData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InputEventData* tolua_ret = (InputEventData*)  Mtolua_new((InputEventData)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InputEventData");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_PX2_InputEventData_new00_local
static int tolua_PX2_InputEventData_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"InputEventData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   InputEventData* tolua_ret = (InputEventData*)  Mtolua_new((InputEventData)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"InputEventData");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_PX2_InputEventData_delete00
static int tolua_PX2_InputEventData_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"InputEventData",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: KCode of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_get_InputEventData_KCode
static int tolua_get_InputEventData_KCode(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KCode'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->KCode);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: KCode of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_set_InputEventData_KCode
static int tolua_set_InputEventData_KCode(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'KCode'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->KCode = ((KeyCode) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MButtonID of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_get_InputEventData_MButtonID
static int tolua_get_InputEventData_MButtonID(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MButtonID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MButtonID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MButtonID of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_set_InputEventData_MButtonID
static int tolua_set_InputEventData_MButtonID(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MButtonID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MButtonID = ((MouseButtonID) (int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MState of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_get_InputEventData_MState
static int tolua_get_InputEventData_MState(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MState'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->MState,"MouseState");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MState of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_set_InputEventData_MState
static int tolua_set_InputEventData_MState(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MState'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"MouseState",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MState = *((MouseState*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TState of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_get_InputEventData_TState
static int tolua_get_InputEventData_TState(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TState'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->TState,"MultiTouchState");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TState of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_set_InputEventData_TState
static int tolua_set_InputEventData_TState(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TState'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"MultiTouchState",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TState = *((MultiTouchState*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: TStates of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_get_InputEventData_TStates
static int tolua_get_InputEventData_TStates(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TStates'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->TStates,"std::vector<MultiTouchState>");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: TStates of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_set_InputEventData_TStates
static int tolua_set_InputEventData_TStates(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'TStates'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"std::vector<MultiTouchState>",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->TStates = *((std::vector<MultiTouchState>*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: ViewID of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_get_InputEventData_ViewID
static int tolua_get_InputEventData_ViewID(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ViewID'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->ViewID);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: ViewID of class  InputEventData */
#ifndef TOLUA_DISABLE_tolua_set_InputEventData_ViewID
static int tolua_set_InputEventData_ViewID(lua_State* tolua_S)
{
  InputEventData* self = (InputEventData*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'ViewID'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->ViewID = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSingleton of class  ScriptManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ScriptManager_GetSingleton00
static int tolua_PX2_ScriptManager_GetSingleton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ScriptManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ScriptManager& tolua_ret = (ScriptManager&)  ScriptManager::GetSingleton();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"ScriptManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSingleton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CallString of class  ScriptManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ScriptManager_CallString00
static int tolua_PX2_ScriptManager_CallString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScriptManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScriptManager* self = (ScriptManager*)  tolua_tousertype(tolua_S,1,0);
  const char* str = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CallString'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CallString(str);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CallString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CallFile of class  ScriptManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ScriptManager_CallFile00
static int tolua_PX2_ScriptManager_CallFile00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ScriptManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ScriptManager* self = (ScriptManager*)  tolua_tousertype(tolua_S,1,0);
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CallFile'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CallFile(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CallFile'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSingleton of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetSingleton00
static int tolua_PX2_ResourceManager_GetSingleton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   ResourceManager& tolua_ret = (ResourceManager&)  ResourceManager::GetSingleton();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"ResourceManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSingleton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_Clear00
static int tolua_PX2_ResourceManager_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BlockLoad of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_BlockLoad00
static int tolua_PX2_ResourceManager_BlockLoad00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BlockLoad'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->BlockLoad(filename);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BlockLoad'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BackgroundLoad of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_BackgroundLoad00
static int tolua_PX2_ResourceManager_BackgroundLoad00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BackgroundLoad'", NULL);
#endif
  {
   ResHandle tolua_ret = (ResHandle)  self->BackgroundLoad(filename);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((ResHandle)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"ResHandle");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(ResHandle));
     tolua_pushusertype(tolua_S,tolua_obj,"ResHandle");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BackgroundLoad'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CheckRes of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_CheckRes00
static int tolua_PX2_ResourceManager_CheckRes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"ResHandle",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  ResHandle handle = *((ResHandle*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CheckRes'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->CheckRes(handle);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CheckRes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetResLoadState of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetResLoadState00
static int tolua_PX2_ResourceManager_GetResLoadState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"ResHandle",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  ResHandle handle = *((ResHandle*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetResLoadState'", NULL);
#endif
  {
   ResourceManager::LoadState tolua_ret = (ResourceManager::LoadState)  self->GetResLoadState(handle);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetResLoadState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseGarbageCollect of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_SetUseGarbageCollect00
static int tolua_PX2_ResourceManager_SetUseGarbageCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseGarbageCollect'", NULL);
#endif
  {
   self->SetUseGarbageCollect(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseGarbageCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUseGarbageCollect of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_IsUseGarbageCollect00
static int tolua_PX2_ResourceManager_IsUseGarbageCollect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ResourceManager* self = (const ResourceManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUseGarbageCollect'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUseGarbageCollect();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUseGarbageCollect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetGarbageCollectTime of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_SetGarbageCollectTime00
static int tolua_PX2_ResourceManager_SetGarbageCollectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  float seconds = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetGarbageCollectTime'", NULL);
#endif
  {
   self->SetGarbageCollectTime(seconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetGarbageCollectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetGarbageCollectTime of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetGarbageCollectTime00
static int tolua_PX2_ResourceManager_GetGarbageCollectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const ResourceManager* self = (const ResourceManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetGarbageCollectTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetGarbageCollectTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetGarbageCollectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadBuffer of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_LoadBuffer00
static int tolua_PX2_ResourceManager_LoadBuffer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isstring(tolua_S,4,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int bufferSize = ((int)  tolua_tonumber(tolua_S,3,0));
  char* buffer = ((char*)  tolua_tostring(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadBuffer'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadBuffer(filename,bufferSize,buffer);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
   tolua_pushnumber(tolua_S,(lua_Number)bufferSize);
   tolua_pushstring(tolua_S,(const char*)buffer);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadBuffer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddTexPack of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_AddTexPack00
static int tolua_PX2_ResourceManager_AddTexPack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string texPackPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddTexPack'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddTexPack(texPackPath);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)texPackPath);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddTexPack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexPack of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetTexPack00
static int tolua_PX2_ResourceManager_GetTexPack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string texPackPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexPack'", NULL);
#endif
  {
   const TexPack& tolua_ret = (const TexPack&)  self->GetTexPack(texPackPath);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const TexPack");
   tolua_pushcppstring(tolua_S,(const char*)texPackPath);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexPack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTexPackElement of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetTexPackElement00
static int tolua_PX2_ResourceManager_GetTexPackElement00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string texPackPath = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string eleName = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTexPackElement'", NULL);
#endif
  {
   const TexPackElement& tolua_ret = (const TexPackElement&)  self->GetTexPackElement(texPackPath,eleName);
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const TexPackElement");
   tolua_pushcppstring(tolua_S,(const char*)texPackPath);
   tolua_pushcppstring(tolua_S,(const char*)eleName);
  }
 }
 return 3;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTexPackElement'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWriteablePath of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetWriteablePath00
static int tolua_PX2_ResourceManager_GetWriteablePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWriteablePath'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetWriteablePath();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWriteablePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetResourcePath of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_GetResourcePath00
static int tolua_PX2_ResourceManager_GetResourcePath00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   const std::string tolua_ret = (const std::string)  ResourceManager::GetResourcePath();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetResourcePath'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DDSKeepCompressed of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_DDSKeepCompressed00
static int tolua_PX2_ResourceManager_DDSKeepCompressed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
  bool keep = ((bool)  tolua_toboolean(tolua_S,2,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DDSKeepCompressed'", NULL);
#endif
  {
   self->DDSKeepCompressed(keep);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DDSKeepCompressed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDDSKeepCompressed of class  ResourceManager */
#ifndef TOLUA_DISABLE_tolua_PX2_ResourceManager_IsDDSKeepCompressed00
static int tolua_PX2_ResourceManager_IsDDSKeepCompressed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"ResourceManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  ResourceManager* self = (ResourceManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDDSKeepCompressed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDDSKeepCompressed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDDSKeepCompressed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSingleton of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_GetSingleton00
static int tolua_PX2_LanguageManager_GetSingleton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   LanguageManager& tolua_ret = (LanguageManager&)  LanguageManager::GetSingleton();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"LanguageManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSingleton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Load of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_Load00
static int tolua_PX2_LanguageManager_Load00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguageManager* self = (LanguageManager*)  tolua_tousertype(tolua_S,1,0);
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Load'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Load(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Load'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLanguage of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_SetLanguage00
static int tolua_PX2_LanguageManager_SetLanguage00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguageManager* self = (LanguageManager*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLanguage'", NULL);
#endif
  {
   self->SetLanguage(index);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLanguage'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_GetValue00
static int tolua_PX2_LanguageManager_GetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  LanguageManager* self = (LanguageManager*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValue'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetValue(key);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  LanguageManager */
#ifndef TOLUA_DISABLE_tolua_PX2_LanguageManager_GetValue01
static int tolua_PX2_LanguageManager_GetValue01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"LanguageManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  LanguageManager* self = (LanguageManager*)  tolua_tousertype(tolua_S,1,0);
  std::string key = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  int index = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValue'", NULL);
#endif
  {
   std::string tolua_ret = (std::string)  self->GetValue(key,index);
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_LanguageManager_GetValue00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Sound */
#ifndef TOLUA_DISABLE_tolua_PX2_Sound_delete00
static int tolua_PX2_Sound_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sound* self = (Sound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlaying of class  Sound */
#ifndef TOLUA_DISABLE_tolua_PX2_Sound_IsPlaying00
static int tolua_PX2_Sound_IsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sound* self = (Sound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVolume of class  Sound */
#ifndef TOLUA_DISABLE_tolua_PX2_Sound_SetVolume00
static int tolua_PX2_Sound_SetVolume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sound",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sound* self = (Sound*)  tolua_tousertype(tolua_S,1,0);
  float volume = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVolume'", NULL);
#endif
  {
   self->SetVolume(volume);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVolume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPaused of class  Sound */
#ifndef TOLUA_DISABLE_tolua_PX2_Sound_SetPaused00
static int tolua_PX2_Sound_SetPaused00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sound",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sound* self = (Sound*)  tolua_tousertype(tolua_S,1,0);
  bool paused = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPaused'", NULL);
#endif
  {
   self->SetPaused(paused);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPaused'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  Sound */
#ifndef TOLUA_DISABLE_tolua_PX2_Sound_Stop00
static int tolua_PX2_Sound_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sound* self = (Sound*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPosition of class  Sound */
#ifndef TOLUA_DISABLE_tolua_PX2_Sound_SetPosition00
static int tolua_PX2_Sound_SetPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sound",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sound* self = (Sound*)  tolua_tousertype(tolua_S,1,0);
  const APoint* position = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPosition'", NULL);
#endif
  {
   self->SetPosition(*position);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetVelocity of class  Sound */
#ifndef TOLUA_DISABLE_tolua_PX2_Sound_SetVelocity00
static int tolua_PX2_Sound_SetVelocity00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sound",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sound* self = (Sound*)  tolua_tousertype(tolua_S,1,0);
  const AVector* velocity = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetVelocity'", NULL);
#endif
  {
   self->SetVelocity(*velocity);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetVelocity'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDistance of class  Sound */
#ifndef TOLUA_DISABLE_tolua_PX2_Sound_SetDistance00
static int tolua_PX2_Sound_SetDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Sound",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Sound* self = (Sound*)  tolua_tousertype(tolua_S,1,0);
  float minDistance = ((float)  tolua_tonumber(tolua_S,2,0));
  float maxDistance = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDistance'", NULL);
#endif
  {
   self->SetDistance(minDistance,maxDistance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SoundSystemInitInfo */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystemInitInfo_new00
static int tolua_PX2_SoundSystemInitInfo_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SoundSystemInitInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SoundSystemInitInfo* tolua_ret = (SoundSystemInitInfo*)  Mtolua_new((SoundSystemInitInfo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SoundSystemInitInfo");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SoundSystemInitInfo */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystemInitInfo_new00_local
static int tolua_PX2_SoundSystemInitInfo_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SoundSystemInitInfo",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SoundSystemInitInfo* tolua_ret = (SoundSystemInitInfo*)  Mtolua_new((SoundSystemInitInfo)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SoundSystemInitInfo");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxChannels of class  SoundSystemInitInfo */
#ifndef TOLUA_DISABLE_tolua_get_SoundSystemInitInfo_MaxChannels
static int tolua_get_SoundSystemInitInfo_MaxChannels(lua_State* tolua_S)
{
  SoundSystemInitInfo* self = (SoundSystemInitInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxChannels'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxChannels);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxChannels of class  SoundSystemInitInfo */
#ifndef TOLUA_DISABLE_tolua_set_SoundSystemInitInfo_MaxChannels
static int tolua_set_SoundSystemInitInfo_MaxChannels(lua_State* tolua_S)
{
  SoundSystemInitInfo* self = (SoundSystemInitInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxChannels'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxChannels = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DopplerScale of class  SoundSystemInitInfo */
#ifndef TOLUA_DISABLE_tolua_get_SoundSystemInitInfo_DopplerScale
static int tolua_get_SoundSystemInitInfo_DopplerScale(lua_State* tolua_S)
{
  SoundSystemInitInfo* self = (SoundSystemInitInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DopplerScale'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DopplerScale);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DopplerScale of class  SoundSystemInitInfo */
#ifndef TOLUA_DISABLE_tolua_set_SoundSystemInitInfo_DopplerScale
static int tolua_set_SoundSystemInitInfo_DopplerScale(lua_State* tolua_S)
{
  SoundSystemInitInfo* self = (SoundSystemInitInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DopplerScale'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DopplerScale = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: DistanceFactor of class  SoundSystemInitInfo */
#ifndef TOLUA_DISABLE_tolua_get_SoundSystemInitInfo_DistanceFactor
static int tolua_get_SoundSystemInitInfo_DistanceFactor(lua_State* tolua_S)
{
  SoundSystemInitInfo* self = (SoundSystemInitInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DistanceFactor'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->DistanceFactor);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: DistanceFactor of class  SoundSystemInitInfo */
#ifndef TOLUA_DISABLE_tolua_set_SoundSystemInitInfo_DistanceFactor
static int tolua_set_SoundSystemInitInfo_DistanceFactor(lua_State* tolua_S)
{
  SoundSystemInitInfo* self = (SoundSystemInitInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'DistanceFactor'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->DistanceFactor = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: RolloffScale of class  SoundSystemInitInfo */
#ifndef TOLUA_DISABLE_tolua_get_SoundSystemInitInfo_RolloffScale
static int tolua_get_SoundSystemInitInfo_RolloffScale(lua_State* tolua_S)
{
  SoundSystemInitInfo* self = (SoundSystemInitInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RolloffScale'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->RolloffScale);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: RolloffScale of class  SoundSystemInitInfo */
#ifndef TOLUA_DISABLE_tolua_set_SoundSystemInitInfo_RolloffScale
static int tolua_set_SoundSystemInitInfo_RolloffScale(lua_State* tolua_S)
{
  SoundSystemInitInfo* self = (SoundSystemInitInfo*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'RolloffScale'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->RolloffScale = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundCreateInfo3D_new00
static int tolua_PX2_SoundCreateInfo3D_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SoundCreateInfo3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SoundCreateInfo3D* tolua_ret = (SoundCreateInfo3D*)  Mtolua_new((SoundCreateInfo3D)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SoundCreateInfo3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundCreateInfo3D_new00_local
static int tolua_PX2_SoundCreateInfo3D_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SoundCreateInfo3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SoundCreateInfo3D* tolua_ret = (SoundCreateInfo3D*)  Mtolua_new((SoundCreateInfo3D)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SoundCreateInfo3D");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MinDistance of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_get_SoundCreateInfo3D_MinDistance
static int tolua_get_SoundCreateInfo3D_MinDistance(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinDistance'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MinDistance);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MinDistance of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_set_SoundCreateInfo3D_MinDistance
static int tolua_set_SoundCreateInfo3D_MinDistance(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MinDistance'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MinDistance = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: MaxDistance of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_get_SoundCreateInfo3D_MaxDistance
static int tolua_get_SoundCreateInfo3D_MaxDistance(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxDistance'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->MaxDistance);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: MaxDistance of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_set_SoundCreateInfo3D_MaxDistance
static int tolua_set_SoundCreateInfo3D_MaxDistance(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'MaxDistance'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->MaxDistance = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Volume of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_get_SoundCreateInfo3D_Volume
static int tolua_get_SoundCreateInfo3D_Volume(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Volume'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Volume);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Volume of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_set_SoundCreateInfo3D_Volume
static int tolua_set_SoundCreateInfo3D_Volume(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Volume'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Volume = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Position of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_get_SoundCreateInfo3D_Position
static int tolua_get_SoundCreateInfo3D_Position(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Position'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Position,"APoint");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Position of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_set_SoundCreateInfo3D_Position
static int tolua_set_SoundCreateInfo3D_Position(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Position'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"APoint",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Position = *((APoint*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Velocity of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_get_SoundCreateInfo3D_Velocity
static int tolua_get_SoundCreateInfo3D_Velocity(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Velocity'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)&self->Velocity,"AVector");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Velocity of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_set_SoundCreateInfo3D_Velocity
static int tolua_set_SoundCreateInfo3D_Velocity(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Velocity'",NULL);
  if ((tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"AVector",0,&tolua_err)))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Velocity = *((AVector*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: IsLoop of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_get_SoundCreateInfo3D_IsLoop
static int tolua_get_SoundCreateInfo3D_IsLoop(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsLoop'",NULL);
#endif
  tolua_pushboolean(tolua_S,(bool)self->IsLoop);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: IsLoop of class  SoundCreateInfo3D */
#ifndef TOLUA_DISABLE_tolua_set_SoundCreateInfo3D_IsLoop
static int tolua_set_SoundCreateInfo3D_IsLoop(lua_State* tolua_S)
{
  SoundCreateInfo3D* self = (SoundCreateInfo3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'IsLoop'",NULL);
  if (!tolua_isboolean(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->IsLoop = ((bool)  tolua_toboolean(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSingleton of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_GetSingleton00
static int tolua_PX2_SoundSystem_GetSingleton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SoundSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SoundSystem& tolua_ret = (SoundSystem&)  SoundSystem::GetSingleton();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"SoundSystem");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSingleton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSystemType of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_GetSystemType00
static int tolua_PX2_SoundSystem_GetSystemType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SoundSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SoundSystem* self = (const SoundSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSystemType'", NULL);
#endif
  {
   SoundSystem::SystemType tolua_ret = (SoundSystem::SystemType)  self->GetSystemType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSystemType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxNumPlaySameTime of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_SetMaxNumPlaySameTime00
static int tolua_PX2_SoundSystem_SetMaxNumPlaySameTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundSystem* self = (SoundSystem*)  tolua_tousertype(tolua_S,1,0);
  int num = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxNumPlaySameTime'", NULL);
#endif
  {
   self->SetMaxNumPlaySameTime(num);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxNumPlaySameTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxNumPlaySameTime of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_GetMaxNumPlaySameTime00
static int tolua_PX2_SoundSystem_GetMaxNumPlaySameTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SoundSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SoundSystem* self = (const SoundSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxNumPlaySameTime'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetMaxNumPlaySameTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxNumPlaySameTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlaySameTimeRange of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_SetPlaySameTimeRange00
static int tolua_PX2_SoundSystem_SetPlaySameTimeRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundSystem* self = (SoundSystem*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlaySameTimeRange'", NULL);
#endif
  {
   self->SetPlaySameTimeRange(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlaySameTimeRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPlaySameTimeRange of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_GetPlaySameTimeRange00
static int tolua_PX2_SoundSystem_GetPlaySameTimeRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SoundSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SoundSystem* self = (const SoundSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPlaySameTimeRange'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPlaySameTimeRange();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPlaySameTimeRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetListener of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_SetListener00
static int tolua_PX2_SoundSystem_SetListener00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundSystem",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,4,"const AVector",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"const AVector",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundSystem* self = (SoundSystem*)  tolua_tousertype(tolua_S,1,0);
  const APoint* position = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  const AVector* velocity = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
  const AVector* forward = ((const AVector*)  tolua_tousertype(tolua_S,4,0));
  const AVector* up = ((const AVector*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetListener'", NULL);
#endif
  {
   self->SetListener(position,velocity,forward,up);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetListener'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetListenerPos of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_GetListenerPos00
static int tolua_PX2_SoundSystem_GetListenerPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SoundSystem",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SoundSystem* self = (const SoundSystem*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetListenerPos'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetListenerPos();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetListenerPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlayMusic of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_PlayMusic00
static int tolua_PX2_SoundSystem_PlayMusic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundSystem* self = (SoundSystem*)  tolua_tousertype(tolua_S,1,0);
  int channel = ((int)  tolua_tonumber(tolua_S,2,0));
  const char* filename = ((const char*)  tolua_tostring(tolua_S,3,0));
  bool isLoop = ((bool)  tolua_toboolean(tolua_S,4,0));
  float fadeSeconds = ((float)  tolua_tonumber(tolua_S,5,0));
  float volume = ((float)  tolua_tonumber(tolua_S,6,1.0f));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlayMusic'", NULL);
#endif
  {
   self->PlayMusic(channel,filename,isLoop,fadeSeconds,volume);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlayMusic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMusicVolume of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_SetMusicVolume00
static int tolua_PX2_SoundSystem_SetMusicVolume00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundSystem",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundSystem* self = (SoundSystem*)  tolua_tousertype(tolua_S,1,0);
  int channel = ((int)  tolua_tonumber(tolua_S,2,0));
  float volume = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMusicVolume'", NULL);
#endif
  {
   self->SetMusicVolume(channel,volume);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMusicVolume'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlaySound2DControl of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_PlaySound2DControl00
static int tolua_PX2_SoundSystem_PlaySound2DControl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundSystem",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,4,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,5,"Sound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundSystem* self = (SoundSystem*)  tolua_tousertype(tolua_S,1,0);
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
  float volume = ((float)  tolua_tonumber(tolua_S,3,0));
  bool isLoop = ((bool)  tolua_toboolean(tolua_S,4,0));
  Sound* sound = ((Sound*)  tolua_tousertype(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlaySound2DControl'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->PlaySound2DControl(filename,volume,isLoop,sound);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
    tolua_pushusertype(tolua_S,(void*)sound,"Sound");
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlaySound2DControl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlaySound3DControl of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_PlaySound3DControl00
static int tolua_PX2_SoundSystem_PlaySound3DControl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundSystem",0,&tolua_err) ||
     !tolua_isstring(tolua_S,2,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const SoundCreateInfo3D",0,&tolua_err)) ||
     !tolua_isusertype(tolua_S,4,"Sound",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,5,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundSystem* self = (SoundSystem*)  tolua_tousertype(tolua_S,1,0);
  const char* filename = ((const char*)  tolua_tostring(tolua_S,2,0));
  const SoundCreateInfo3D* createInfo = ((const SoundCreateInfo3D*)  tolua_tousertype(tolua_S,3,0));
  Sound* sound = ((Sound*)  tolua_tousertype(tolua_S,4,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlaySound3DControl'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->PlaySound3DControl(filename,*createInfo,sound);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
    tolua_pushusertype(tolua_S,(void*)sound,"Sound");
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlaySound3DControl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CanPlaySameTime of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_CanPlaySameTime00
static int tolua_PX2_SoundSystem_CanPlaySameTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundSystem",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundSystem* self = (SoundSystem*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float playTime = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CanPlaySameTime'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CanPlaySameTime(filename,playTime);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CanPlaySameTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumPlaySameTime of class  SoundSystem */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundSystem_GetNumPlaySameTime00
static int tolua_PX2_SoundSystem_GetNumPlaySameTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundSystem",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundSystem* self = (SoundSystem*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumPlaySameTime'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumPlaySameTime(filename);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumPlaySameTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDynamic of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_SetDynamic00
static int tolua_PX2_UIPicBox_SetDynamic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIPicBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIPicBox* self = (UIPicBox*)  tolua_tousertype(tolua_S,1,0);
  bool dyn = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDynamic'", NULL);
#endif
  {
   self->SetDynamic(dyn);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDynamic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDynamic of class  UIPicBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIPicBox_IsDynamic00
static int tolua_PX2_UIPicBox_IsDynamic00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIPicBox* self = (const UIPicBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDynamic'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDynamic();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDynamic'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_new00
static int tolua_PX2_UIFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFrame* tolua_ret = (UIFrame*)  Mtolua_new((UIFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_new00_local
static int tolua_PX2_UIFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIFrame* tolua_ret = (UIFrame*)  Mtolua_new((UIFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_delete00
static int tolua_PX2_UIFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetObjectByName of class  UIFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIFrame_GetObjectByName00
static int tolua_PX2_UIFrame_GetObjectByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIFrame",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIFrame* self = (UIFrame*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetObjectByName'", NULL);
#endif
  {
   Object* tolua_ret = (Object*)  self->GetObjectByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Object");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetObjectByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_new00
static int tolua_PX2_UIStaticText_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIStaticText* tolua_ret = (UIStaticText*)  Mtolua_new((UIStaticText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIStaticText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_new00_local
static int tolua_PX2_UIStaticText_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIStaticText* tolua_ret = (UIStaticText*)  Mtolua_new((UIStaticText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIStaticText");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_delete00
static int tolua_PX2_UIStaticText_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFont of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_SetFont00
static int tolua_PX2_UIStaticText_SetFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
  const std::string fontFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int fontWidth = ((int)  tolua_tonumber(tolua_S,3,0));
  int fontHeight = ((int)  tolua_tonumber(tolua_S,4,0));
  unsigned int fontStyle = ((unsigned int)  tolua_tonumber(tolua_S,5,FES_NORMAL));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFont'", NULL);
#endif
  {
   self->SetFont(fontFilename,fontWidth,fontHeight,fontStyle);
   tolua_pushcppstring(tolua_S,(const char*)fontFilename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFont of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_GetFont00
static int tolua_PX2_UIStaticText_GetFont00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFont'", NULL);
#endif
  {
   Font* tolua_ret = (Font*)  self->GetFont();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Font");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFont'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetText of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_SetText00
static int tolua_PX2_UIStaticText_SetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
  std::string text = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetText'", NULL);
#endif
  {
   self->SetText(text);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetText of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_GetText00
static int tolua_PX2_UIStaticText_GetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIStaticText* self = (const UIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetText'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetText();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontStyle of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_SetFontStyle00
static int tolua_PX2_UIStaticText_SetFontStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
  int style = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontStyle'", NULL);
#endif
  {
   self->SetFontStyle(style);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFontStyle of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_GetFontStyle00
static int tolua_PX2_UIStaticText_GetFontStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFontStyle'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetFontStyle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFontStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDrawStyle of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_SetDrawStyle00
static int tolua_PX2_UIStaticText_SetDrawStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
  int style = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDrawStyle'", NULL);
#endif
  {
   self->SetDrawStyle(style);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDrawStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDrawStyle of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_GetDrawStyle00
static int tolua_PX2_UIStaticText_GetDrawStyle00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDrawStyle'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetDrawStyle();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDrawStyle'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetColor of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_SetColor00
static int tolua_PX2_UIStaticText_SetColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Float3",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
  Float3 color = *((Float3*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetColor'", NULL);
#endif
  {
   self->SetColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetColor of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_GetColor00
static int tolua_PX2_UIStaticText_GetColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIStaticText* self = (const UIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetColor'", NULL);
#endif
  {
   const Float3& tolua_ret = (const Float3&)  self->GetColor();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Float3");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAlpha of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_SetAlpha00
static int tolua_PX2_UIStaticText_SetAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
  float alpha = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAlpha'", NULL);
#endif
  {
   self->SetAlpha(alpha);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAlpha of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_GetAlpha00
static int tolua_PX2_UIStaticText_GetAlpha00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAlpha'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetAlpha();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAlpha'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontWidth of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_SetFontWidth00
static int tolua_PX2_UIStaticText_SetFontWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
  int width = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontWidth'", NULL);
#endif
  {
   self->SetFontWidth(width);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFontWidth of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_GetFontWidth00
static int tolua_PX2_UIStaticText_GetFontWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFontWidth'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetFontWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFontWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFontHeight of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_SetFontHeight00
static int tolua_PX2_UIStaticText_SetFontHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
  int height = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFontHeight'", NULL);
#endif
  {
   self->SetFontHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFontHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFontHeight of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_GetFontHeight00
static int tolua_PX2_UIStaticText_GetFontHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFontHeight'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetFontHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFontHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDoubleSide of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_SetDoubleSide00
static int tolua_PX2_UIStaticText_SetDoubleSide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
  bool d = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDoubleSide'", NULL);
#endif
  {
   self->SetDoubleSide(d);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDoubleSide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDoubleSide of class  UIStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIStaticText_IsDoubleSide00
static int tolua_PX2_UIStaticText_IsDoubleSide00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIStaticText* self = (UIStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDoubleSide'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDoubleSide();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDoubleSide'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIInputStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputStaticText_new00
static int tolua_PX2_UIInputStaticText_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIInputStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIInputStaticText* tolua_ret = (UIInputStaticText*)  Mtolua_new((UIInputStaticText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIInputStaticText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIInputStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputStaticText_new00_local
static int tolua_PX2_UIInputStaticText_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIInputStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIInputStaticText* tolua_ret = (UIInputStaticText*)  Mtolua_new((UIInputStaticText)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIInputStaticText");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIInputStaticText */
#ifndef TOLUA_DISABLE_tolua_PX2_UIInputStaticText_delete00
static int tolua_PX2_UIInputStaticText_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIInputStaticText",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIInputStaticText* self = (UIInputStaticText*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_new00
static int tolua_PX2_UIEditBox_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIEditBox* tolua_ret = (UIEditBox*)  Mtolua_new((UIEditBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIEditBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_new00_local
static int tolua_PX2_UIEditBox_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIEditBox* tolua_ret = (UIEditBox*)  Mtolua_new((UIEditBox)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIEditBox");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_delete00
static int tolua_PX2_UIEditBox_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPassword of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_SetPassword00
static int tolua_PX2_UIEditBox_SetPassword00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
  bool isPassword = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPassword'", NULL);
#endif
  {
   self->SetPassword(isPassword);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPassword'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPassword of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_IsPassword00
static int tolua_PX2_UIEditBox_IsPassword00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPassword'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPassword();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPassword'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_SetSize00
static int tolua_PX2_UIEditBox_SetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
  float height = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_SetSize01
static int tolua_PX2_UIEditBox_SetSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(*size);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_UIEditBox_SetSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_GetWidth00
static int tolua_PX2_UIEditBox_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_GetHeight00
static int tolua_PX2_UIEditBox_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSize of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_GetSize00
static int tolua_PX2_UIEditBox_GetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSize'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetText of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_SetText00
static int tolua_PX2_UIEditBox_SetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIEditBox",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIEditBox* self = (UIEditBox*)  tolua_tousertype(tolua_S,1,0);
  const std::string text = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetText'", NULL);
#endif
  {
   self->SetText(text);
   tolua_pushcppstring(tolua_S,(const char*)text);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetText of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_GetText00
static int tolua_PX2_UIEditBox_GetText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetText'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetText();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRealText of class  UIEditBox */
#ifndef TOLUA_DISABLE_tolua_PX2_UIEditBox_GetRealText00
static int tolua_PX2_UIEditBox_GetRealText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIEditBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIEditBox* self = (const UIEditBox*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRealText'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetRealText();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRealText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_delete00
static int tolua_PX2_UIButtonBase_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetButtonState of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetButtonState00
static int tolua_PX2_UIButtonBase_SetButtonState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetButtonState'", NULL);
#endif
  {
   self->SetButtonState(state);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetButtonState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetButtonState of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetButtonState00
static int tolua_PX2_UIButtonBase_GetButtonState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIButtonBase* self = (const UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetButtonState'", NULL);
#endif
  {
   UIButtonBase::ButtonState tolua_ret = (UIButtonBase::ButtonState)  self->GetButtonState();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetButtonState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPicBox of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetPicBox00
static int tolua_PX2_UIButtonBase_SetPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
  UIPicBox* pic = ((UIPicBox*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPicBox'", NULL);
#endif
  {
   self->SetPicBox(state,pic);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPicBoxAtState of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetPicBoxAtState00
static int tolua_PX2_UIButtonBase_GetPicBoxAtState00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  UIButtonBase::ButtonState state = ((UIButtonBase::ButtonState) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPicBoxAtState'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->GetPicBoxAtState(state);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPicBoxAtState'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetSize00
static int tolua_PX2_UIButtonBase_SetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
  float height = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetSize01
static int tolua_PX2_UIButtonBase_SetSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(*size);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_UIButtonBase_SetSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSize of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetSize00
static int tolua_PX2_UIButtonBase_GetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIButtonBase* self = (const UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSize'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWidth of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetWidth00
static int tolua_PX2_UIButtonBase_SetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWidth'", NULL);
#endif
  {
   self->SetWidth(width);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetWidth00
static int tolua_PX2_UIButtonBase_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHeight of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_SetHeight00
static int tolua_PX2_UIButtonBase_SetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
  float height = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHeight'", NULL);
#endif
  {
   self->SetHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  UIButtonBase */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButtonBase_GetHeight00
static int tolua_PX2_UIButtonBase_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButtonBase",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButtonBase* self = (UIButtonBase*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_new00
static int tolua_PX2_UIButton_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIButton* tolua_ret = (UIButton*)  Mtolua_new((UIButton)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_new00_local
static int tolua_PX2_UIButton_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIButton* tolua_ret = (UIButton*)  Mtolua_new((UIButton)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UIButton_delete00
static int tolua_PX2_UIButton_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIButton* self = (UIButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_new00
static int tolua_PX2_UICheckButton_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UICheckButton* tolua_ret = (UICheckButton*)  Mtolua_new((UICheckButton)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICheckButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_new00_local
static int tolua_PX2_UICheckButton_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UICheckButton* tolua_ret = (UICheckButton*)  Mtolua_new((UICheckButton)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UICheckButton");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_delete00
static int tolua_PX2_UICheckButton_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICheckButton* self = (UICheckButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_Enable00
static int tolua_PX2_UICheckButton_Enable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICheckButton* self = (UICheckButton*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Enable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEvent of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_OnEvent00
static int tolua_PX2_UICheckButton_OnEvent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Event",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICheckButton* self = (UICheckButton*)  tolua_tousertype(tolua_S,1,0);
  Event* event = ((Event*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEvent'", NULL);
#endif
  {
   self->OnEvent(event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEvent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnCheck of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_OnCheck00
static int tolua_PX2_UICheckButton_OnCheck00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICheckButton* self = (UICheckButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnCheck'", NULL);
#endif
  {
   self->OnCheck();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnCheck'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnDisCheck of class  UICheckButton */
#ifndef TOLUA_DISABLE_tolua_PX2_UICheckButton_OnDisCheck00
static int tolua_PX2_UICheckButton_OnDisCheck00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UICheckButton",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UICheckButton* self = (UICheckButton*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnDisCheck'", NULL);
#endif
  {
   self->OnDisCheck();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnDisCheck'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_new00
static int tolua_PX2_UIProgressBar_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIProgressBar* tolua_ret = (UIProgressBar*)  Mtolua_new((UIProgressBar)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIProgressBar");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_new00_local
static int tolua_PX2_UIProgressBar_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIProgressBar* tolua_ret = (UIProgressBar*)  Mtolua_new((UIProgressBar)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIProgressBar");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_delete00
static int tolua_PX2_UIProgressBar_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBackPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetBackPicBox00
static int tolua_PX2_UIProgressBar_SetBackPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  UIPicBox* picBox = ((UIPicBox*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBackPicBox'", NULL);
#endif
  {
   self->SetBackPicBox(picBox);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBackPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProgressPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetProgressPicBox00
static int tolua_PX2_UIProgressBar_SetProgressPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  UIPicBox* picBox = ((UIPicBox*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProgressPicBox'", NULL);
#endif
  {
   self->SetProgressPicBox(picBox);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProgressPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOverPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetOverPicBox00
static int tolua_PX2_UIProgressBar_SetOverPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIPicBox",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  UIPicBox* picBox = ((UIPicBox*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOverPicBox'", NULL);
#endif
  {
   self->SetOverPicBox(picBox);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOverPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBackPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetBackPicBox00
static int tolua_PX2_UIProgressBar_GetBackPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBackPicBox'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->GetBackPicBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBackPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProgressPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetProgressPicBox00
static int tolua_PX2_UIProgressBar_GetProgressPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProgressPicBox'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->GetProgressPicBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProgressPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOverPicBox of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetOverPicBox00
static int tolua_PX2_UIProgressBar_GetOverPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOverPicBox'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->GetOverPicBox();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOverPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetSize00
static int tolua_PX2_UIProgressBar_SetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
  float height = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetSize01
static int tolua_PX2_UIProgressBar_SetSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(*size);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_UIProgressBar_SetSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetWidth00
static int tolua_PX2_UIProgressBar_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIProgressBar* self = (const UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetHeight00
static int tolua_PX2_UIProgressBar_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIProgressBar* self = (const UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSize of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetSize00
static int tolua_PX2_UIProgressBar_GetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIProgressBar* self = (const UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSize'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProgress of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetProgress00
static int tolua_PX2_UIProgressBar_SetProgress00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  float progress = ((float)  tolua_tonumber(tolua_S,2,0));
  bool useCallback = ((bool)  tolua_toboolean(tolua_S,3,true));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProgress'", NULL);
#endif
  {
   self->SetProgress(progress,useCallback);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProgress'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProgress of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetProgress00
static int tolua_PX2_UIProgressBar_GetProgress00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIProgressBar* self = (const UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProgress'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetProgress();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProgress'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProgressAnimInit of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetProgressAnimInit00
static int tolua_PX2_UIProgressBar_SetProgressAnimInit00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  float progress = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProgressAnimInit'", NULL);
#endif
  {
   self->SetProgressAnimInit(progress);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProgressAnimInit'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProgressAnim of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetProgressAnim00
static int tolua_PX2_UIProgressBar_SetProgressAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  float progress = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProgressAnim'", NULL);
#endif
  {
   self->SetProgressAnim(progress);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProgressAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProgressAnimSpeed of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_SetProgressAnimSpeed00
static int tolua_PX2_UIProgressBar_SetProgressAnimSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProgressAnimSpeed'", NULL);
#endif
  {
   self->SetProgressAnimSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProgressAnimSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProgressAnimSpeed of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetProgressAnimSpeed00
static int tolua_PX2_UIProgressBar_GetProgressAnimSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProgressAnimSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetProgressAnimSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProgressAnimSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProgressBarCtrl of class  UIProgressBar */
#ifndef TOLUA_DISABLE_tolua_PX2_UIProgressBar_GetProgressBarCtrl00
static int tolua_PX2_UIProgressBar_GetProgressBarCtrl00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIProgressBar",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIProgressBar* self = (UIProgressBar*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProgressBarCtrl'", NULL);
#endif
  {
   UIProgressBarCtrl* tolua_ret = (UIProgressBarCtrl*)  self->GetProgressBarCtrl();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIProgressBarCtrl");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProgressBarCtrl'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIRangeFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRangeFrame_new00
static int tolua_PX2_UIRangeFrame_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIRangeFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIRangeFrame* tolua_ret = (UIRangeFrame*)  Mtolua_new((UIRangeFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIRangeFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIRangeFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRangeFrame_new00_local
static int tolua_PX2_UIRangeFrame_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIRangeFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   UIRangeFrame* tolua_ret = (UIRangeFrame*)  Mtolua_new((UIRangeFrame)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIRangeFrame");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIRangeFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRangeFrame_delete00
static int tolua_PX2_UIRangeFrame_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIRangeFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIRangeFrame* self = (UIRangeFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIRangeFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRangeFrame_SetSize00
static int tolua_PX2_UIRangeFrame_SetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIRangeFrame",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIRangeFrame* self = (UIRangeFrame*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
  float height = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIRangeFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRangeFrame_SetSize01
static int tolua_PX2_UIRangeFrame_SetSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIRangeFrame",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIRangeFrame* self = (UIRangeFrame*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(*size);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_UIRangeFrame_SetSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  UIRangeFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRangeFrame_GetWidth00
static int tolua_PX2_UIRangeFrame_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIRangeFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIRangeFrame* self = (const UIRangeFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  UIRangeFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRangeFrame_GetHeight00
static int tolua_PX2_UIRangeFrame_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIRangeFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIRangeFrame* self = (const UIRangeFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSize of class  UIRangeFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRangeFrame_GetSize00
static int tolua_PX2_UIRangeFrame_GetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIRangeFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIRangeFrame* self = (const UIRangeFrame*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSize'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AttachChild of class  UIRangeFrame */
#ifndef TOLUA_DISABLE_tolua_PX2_UIRangeFrame_AttachChild00
static int tolua_PX2_UIRangeFrame_AttachChild00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIRangeFrame",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIRangeFrame* self = (UIRangeFrame*)  tolua_tousertype(tolua_S,1,0);
  Movable* child = ((Movable*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AttachChild'", NULL);
#endif
  {
   int tolua_ret = (int)  self->AttachChild(child);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AttachChild'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDefaultView of class  UIManager */
#ifndef TOLUA_DISABLE_tolua_PX2_UIManager_GetDefaultView00
static int tolua_PX2_UIManager_GetDefaultView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIManager* self = (UIManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDefaultView'", NULL);
#endif
  {
   UIView* tolua_ret = (UIView*)  self->GetDefaultView();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDefaultView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddUIView of class  UIManager */
#ifndef TOLUA_DISABLE_tolua_PX2_UIManager_AddUIView00
static int tolua_PX2_UIManager_AddUIView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIManager* self = (UIManager*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
  UIView* view = ((UIView*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddUIView'", NULL);
#endif
  {
   self->AddUIView(name,view);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddUIView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUIViews of class  UIManager */
#ifndef TOLUA_DISABLE_tolua_PX2_UIManager_GetUIViews00
static int tolua_PX2_UIManager_GetUIViews00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIManager* self = (UIManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUIViews'", NULL);
#endif
  {
   std::map<std::string,UIViewPtr>& tolua_ret = (std::map<std::string,UIViewPtr>&)  self->GetUIViews();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::map<std::string,UIViewPtr>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUIViews'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUIView of class  UIManager */
#ifndef TOLUA_DISABLE_tolua_PX2_UIManager_GetUIView00
static int tolua_PX2_UIManager_GetUIView00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIManager* self = (UIManager*)  tolua_tousertype(tolua_S,1,0);
  std::string name = ((std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUIView'", NULL);
#endif
  {
   UIView* tolua_ret = (UIView*)  self->GetUIView(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUIView'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIPicBox of class  UIManager */
#ifndef TOLUA_DISABLE_tolua_PX2_UIManager_CreateUIPicBox00
static int tolua_PX2_UIManager_CreateUIPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIManager",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIManager* self = (UIManager*)  tolua_tousertype(tolua_S,1,0);
  const APoint* localPos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIPicBox'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->CreateUIPicBox(*localPos);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIPicBox of class  UIManager */
#ifndef TOLUA_DISABLE_tolua_PX2_UIManager_CreateUIPicBox01
static int tolua_PX2_UIManager_CreateUIPicBox01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIManager",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIManager* self = (UIManager*)  tolua_tousertype(tolua_S,1,0);
  const APoint* localPos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  const std::string texPack = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIPicBox'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->CreateUIPicBox(*localPos,texPack);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
   tolua_pushcppstring(tolua_S,(const char*)texPack);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_UIManager_CreateUIPicBox00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIStaticText of class  UIManager */
#ifndef TOLUA_DISABLE_tolua_PX2_UIManager_CreateUIStaticText00
static int tolua_PX2_UIManager_CreateUIStaticText00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIManager",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIManager* self = (UIManager*)  tolua_tousertype(tolua_S,1,0);
  const APoint* localPos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIStaticText'", NULL);
#endif
  {
   UIStaticText* tolua_ret = (UIStaticText*)  self->CreateUIStaticText(*localPos);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIStaticText");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIStaticText'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIFrame of class  UIManager */
#ifndef TOLUA_DISABLE_tolua_PX2_UIManager_CreateUIFrame00
static int tolua_PX2_UIManager_CreateUIFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIManager",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIManager* self = (UIManager*)  tolua_tousertype(tolua_S,1,0);
  const APoint* localPos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIFrame'", NULL);
#endif
  {
   UIFrame* tolua_ret = (UIFrame*)  self->CreateUIFrame(*localPos);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateUIButton of class  UIManager */
#ifndef TOLUA_DISABLE_tolua_PX2_UIManager_CreateUIButton00
static int tolua_PX2_UIManager_CreateUIButton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIManager",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIManager* self = (UIManager*)  tolua_tousertype(tolua_S,1,0);
  const APoint* localPos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateUIButton'", NULL);
#endif
  {
   UIButton* tolua_ret = (UIButton*)  self->CreateUIButton(*localPos);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIButton");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateUIButton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: __EventHandler__ of class  UIManager */
#ifndef TOLUA_DISABLE_tolua_get_UIManager___EventHandler__
static int tolua_get_UIManager___EventHandler__(lua_State* tolua_S)
{
  UIManager* self = (UIManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable '__EventHandler__'",NULL);
#endif
#ifdef __cplusplus
   tolua_pushusertype(tolua_S,(void*)static_cast<EventHandler*>(self), "EventHandler");
#else
   tolua_pushusertype(tolua_S,(void*)((EventHandler*)self), "EventHandler");
#endif
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_new00
static int tolua_PX2_UIView_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   UIView* tolua_ret = (UIView*)  Mtolua_new((UIView)(id));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIView");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_new00_local
static int tolua_PX2_UIView_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
  {
   UIView* tolua_ret = (UIView*)  Mtolua_new((UIView)(id));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIView");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_delete00
static int tolua_PX2_UIView_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetID of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_GetID00
static int tolua_PX2_UIView_GetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_SetSize00
static int tolua_PX2_UIView_SetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
  float height = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSize of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_SetSize01
static int tolua_PX2_UIView_SetSize01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const Sizef",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
  const Sizef* size = ((const Sizef*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSize'", NULL);
#endif
  {
   self->SetSize(*size);
  }
 }
 return 0;
tolua_lerror:
 return tolua_PX2_UIView_SetSize00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSize of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_GetSize00
static int tolua_PX2_UIView_GetSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const UIView* self = (const UIView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSize'", NULL);
#endif
  {
   const Sizef& tolua_ret = (const Sizef&)  self->GetSize();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const Sizef");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWidth of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_SetWidth00
static int tolua_PX2_UIView_SetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
  float width = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWidth'", NULL);
#endif
  {
   self->SetWidth(width);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_GetWidth00
static int tolua_PX2_UIView_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHeight of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_SetHeight00
static int tolua_PX2_UIView_SetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
  float height = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHeight'", NULL);
#endif
  {
   self->SetHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_GetHeight00
static int tolua_PX2_UIView_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRenderer of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_SetRenderer00
static int tolua_PX2_UIView_SetRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Renderer",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
  Renderer* renderer = ((Renderer*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRenderer'", NULL);
#endif
  {
   self->SetRenderer(renderer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRenderer of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_GetRenderer00
static int tolua_PX2_UIView_GetRenderer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRenderer'", NULL);
#endif
  {
   Renderer* tolua_ret = (Renderer*)  self->GetRenderer();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Renderer");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRenderer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMainFrame of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_SetMainFrame00
static int tolua_PX2_UIView_SetMainFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"UIFrame",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
  UIFrame* frame = ((UIFrame*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMainFrame'", NULL);
#endif
  {
   self->SetMainFrame(frame);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMainFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMainFrame of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_GetMainFrame00
static int tolua_PX2_UIView_GetMainFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMainFrame'", NULL);
#endif
  {
   UIFrame* tolua_ret = (UIFrame*)  self->GetMainFrame();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMainFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCamera of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_GetCamera00
static int tolua_PX2_UIView_GetCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCamera'", NULL);
#endif
  {
   Camera* tolua_ret = (Camera*)  self->GetCamera();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCuller of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_GetCuller00
static int tolua_PX2_UIView_GetCuller00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCuller'", NULL);
#endif
  {
   Culler& tolua_ret = (Culler&)  self->GetCuller();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Culler");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCuller'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPickedPicBoxs of class  UIView */
#ifndef TOLUA_DISABLE_tolua_PX2_UIView_GetPickedPicBoxs00
static int tolua_PX2_UIView_GetPickedPicBoxs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"UIView",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  UIView* self = (UIView*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPickedPicBoxs'", NULL);
#endif
  {
   std::vector<Pointer0<UIPicBox> >& tolua_ret = (std::vector<Pointer0<UIPicBox> >&)  self->GetPickedPicBoxs();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::vector<Pointer0<UIPicBox> >");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPickedPicBoxs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSingleton of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetSingleton00
static int tolua_PX2_Project_GetSingleton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Project& tolua_ret = (Project&)  Project::GetSingleton();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"Project");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSingleton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSingletonPtr of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetSingletonPtr00
static int tolua_PX2_Project_GetSingletonPtr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Project* tolua_ret = (Project*)  Project::GetSingletonPtr();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Project");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSingletonPtr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetName of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetName00
static int tolua_PX2_Project_GetName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Project* self = (const Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWidth of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetWidth00
static int tolua_PX2_Project_GetWidth00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Project* self = (const Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWidth'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetWidth();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWidth'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHeight of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetHeight00
static int tolua_PX2_Project_GetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Project* self = (const Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHeight'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetHeight();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetColor of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_SetColor00
static int tolua_PX2_Project_SetColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Project",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"Float4",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Project* self = (Project*)  tolua_tousertype(tolua_S,1,0);
  Float4 color = *((Float4*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetColor'", NULL);
#endif
  {
   self->SetColor(color);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetColor of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetColor00
static int tolua_PX2_Project_GetColor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Project* self = (Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetColor'", NULL);
#endif
  {
   Float4 tolua_ret = (Float4)  self->GetColor();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((Float4)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"Float4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(Float4));
     tolua_pushusertype(tolua_S,tolua_obj,"Float4");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetColor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScene of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_SetScene00
static int tolua_PX2_Project_SetScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Project* self = (Project*)  tolua_tousertype(tolua_S,1,0);
  Scene* scene = ((Scene*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScene'", NULL);
#endif
  {
   self->SetScene(scene);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScene of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetScene00
static int tolua_PX2_Project_GetScene00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Project* self = (const Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScene'", NULL);
#endif
  {
   Scene* tolua_ret = (Scene*)  self->GetScene();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Scene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScene'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUI of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_GetUI00
static int tolua_PX2_Project_GetUI00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Project* self = (const Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUI'", NULL);
#endif
  {
   UIFrame* tolua_ret = (UIFrame*)  self->GetUI();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUI'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetShowProjectInfo of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_SetShowProjectInfo00
static int tolua_PX2_Project_SetShowProjectInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Project* self = (Project*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetShowProjectInfo'", NULL);
#endif
  {
   self->SetShowProjectInfo(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetShowProjectInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShowProjectInfo of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_IsShowProjectInfo00
static int tolua_PX2_Project_IsShowProjectInfo00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Project* self = (Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShowProjectInfo'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShowProjectInfo();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShowProjectInfo'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPublish of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_SetPublish00
static int tolua_PX2_Project_SetPublish00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Project",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Project* self = (Project*)  tolua_tousertype(tolua_S,1,0);
  bool pub = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPublish'", NULL);
#endif
  {
   self->SetPublish(pub);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPublish'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPublish of class  Project */
#ifndef TOLUA_DISABLE_tolua_PX2_Project_IsPublish00
static int tolua_PX2_Project_IsPublish00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Project",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Project* self = (const Project*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPublish'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPublish();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPublish'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CT_Movable of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_PX2_GameManager_CT_Movable00
static int tolua_PX2_GameManager_CT_Movable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CT_Movable'", NULL);
#endif
  {
   Movable* tolua_ret = (Movable*)  self->CT_Movable(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Movable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CT_Movable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CT_Node of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_PX2_GameManager_CT_Node00
static int tolua_PX2_GameManager_CT_Node00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CT_Node'", NULL);
#endif
  {
   Node* tolua_ret = (Node*)  self->CT_Node(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CT_Node'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CT_UIFrame of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_PX2_GameManager_CT_UIFrame00
static int tolua_PX2_GameManager_CT_UIFrame00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CT_UIFrame'", NULL);
#endif
  {
   UIFrame* tolua_ret = (UIFrame*)  self->CT_UIFrame(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIFrame");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CT_UIFrame'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CT_UIPicBox of class  GameManager */
#ifndef TOLUA_DISABLE_tolua_PX2_GameManager_CT_UIPicBox00
static int tolua_PX2_GameManager_CT_UIPicBox00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GameManager",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Object",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GameManager* self = (GameManager*)  tolua_tousertype(tolua_S,1,0);
  Object* obj = ((Object*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CT_UIPicBox'", NULL);
#endif
  {
   UIPicBox* tolua_ret = (UIPicBox*)  self->CT_UIPicBox(obj);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"UIPicBox");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CT_UIPicBox'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Netable */
#ifndef TOLUA_DISABLE_tolua_PX2_Netable_new00
static int tolua_PX2_Netable_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Netable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Netable* tolua_ret = (Netable*)  Mtolua_new((Netable)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Netable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Netable */
#ifndef TOLUA_DISABLE_tolua_PX2_Netable_new00_local
static int tolua_PX2_Netable_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Netable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Netable* tolua_ret = (Netable*)  Mtolua_new((Netable)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Netable");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Netable */
#ifndef TOLUA_DISABLE_tolua_PX2_Netable_delete00
static int tolua_PX2_Netable_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Netable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Netable* self = (Netable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ComeInToEventWorld of class  Netable */
#ifndef TOLUA_DISABLE_tolua_PX2_Netable_ComeInToEventWorld00
static int tolua_PX2_Netable_ComeInToEventWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Netable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Netable* self = (Netable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ComeInToEventWorld'", NULL);
#endif
  {
   self->ComeInToEventWorld();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ComeInToEventWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GoOutFromEventWorld of class  Netable */
#ifndef TOLUA_DISABLE_tolua_PX2_Netable_GoOutFromEventWorld00
static int tolua_PX2_Netable_GoOutFromEventWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Netable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Netable* self = (Netable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GoOutFromEventWorld'", NULL);
#endif
  {
   self->GoOutFromEventWorld();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GoOutFromEventWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInEventWorld of class  Netable */
#ifndef TOLUA_DISABLE_tolua_PX2_Netable_IsInEventWorld00
static int tolua_PX2_Netable_IsInEventWorld00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Netable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Netable* self = (Netable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsInEventWorld'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsInEventWorld();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInEventWorld'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_new00
static int tolua_PX2_Gameable_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Gameable* tolua_ret = (Gameable*)  Mtolua_new((Gameable)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Gameable");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_new00_local
static int tolua_PX2_Gameable_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Gameable* tolua_ret = (Gameable*)  Mtolua_new((Gameable)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Gameable");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_delete00
static int tolua_PX2_Gameable_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enable of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_Enable00
static int tolua_PX2_Gameable_Enable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enable'", NULL);
#endif
  {
   self->Enable(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Enable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsEnable of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_IsEnable00
static int tolua_PX2_Gameable_IsEnable00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Gameable* self = (const Gameable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsEnable'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsEnable();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsEnable'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetServerID of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_SetServerID00
static int tolua_PX2_Gameable_SetServerID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
  int serverID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetServerID'", NULL);
#endif
  {
   self->SetServerID(serverID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetServerID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetServerID of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_GetServerID00
static int tolua_PX2_Gameable_GetServerID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Gameable* self = (const Gameable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetServerID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetServerID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetServerID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetExtraDataInt of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_SetExtraDataInt00
static int tolua_PX2_Gameable_SetExtraDataInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int data = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetExtraDataInt'", NULL);
#endif
  {
   self->SetExtraDataInt(name,data);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetExtraDataInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetExtraDataInt of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_GetExtraDataInt00
static int tolua_PX2_Gameable_GetExtraDataInt00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Gameable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Gameable* self = (const Gameable*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetExtraDataInt'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetExtraDataInt(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetExtraDataInt'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetExtraDataFloat of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_SetExtraDataFloat00
static int tolua_PX2_Gameable_SetExtraDataFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float data = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetExtraDataFloat'", NULL);
#endif
  {
   self->SetExtraDataFloat(name,data);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetExtraDataFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetExtraDataFloat of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_GetExtraDataFloat00
static int tolua_PX2_Gameable_GetExtraDataFloat00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Gameable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Gameable* self = (const Gameable*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetExtraDataFloat'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetExtraDataFloat(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetExtraDataFloat'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_Init of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_SetScriptHandler_Init00
static int tolua_PX2_Gameable_SetScriptHandler_Init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_Init'", NULL);
#endif
  {
   self->SetScriptHandler_Init(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_Init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_Init of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_GetScriptHandler_Init00
static int tolua_PX2_Gameable_GetScriptHandler_Init00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Gameable* self = (const Gameable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_Init'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_Init();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_Init'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initlize of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_Initlize00
static int tolua_PX2_Gameable_Initlize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initlize'", NULL);
#endif
  {
   self->Initlize();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initlize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SaveToXML of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_SaveToXML00
static int tolua_PX2_Gameable_SaveToXML00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SaveToXML'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SaveToXML(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SaveToXML'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadFromXML of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_LoadFromXML00
static int tolua_PX2_Gameable_LoadFromXML00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadFromXML'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadFromXML(filename);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadFromXML'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadFromXML of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_LoadFromXML01
static int tolua_PX2_Gameable_LoadFromXML01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string classLayer = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadFromXML'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->LoadFromXML(filename,classLayer);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)filename);
   tolua_pushcppstring(tolua_S,(const char*)classLayer);
  }
 }
 return 3;
tolua_lerror:
 return tolua_PX2_Gameable_LoadFromXML00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUserScriptName of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_SetUserScriptName00
static int tolua_PX2_Gameable_SetUserScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
  const std::string scriptName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUserScriptName'", NULL);
#endif
  {
   self->SetUserScriptName(scriptName);
   tolua_pushcppstring(tolua_S,(const char*)scriptName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUserScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetUserScriptName of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_GetUserScriptName00
static int tolua_PX2_Gameable_GetUserScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Gameable* self = (const Gameable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetUserScriptName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetUserScriptName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetUserScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptName of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_GetScriptName00
static int tolua_PX2_Gameable_GetScriptName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Gameable* self = (const Gameable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RegistToScriptSystem of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_RegistToScriptSystem00
static int tolua_PX2_Gameable_RegistToScriptSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RegistToScriptSystem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RegistToScriptSystem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RegistToScriptSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnRegistToScriptSystem of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_UnRegistToScriptSystem00
static int tolua_PX2_Gameable_UnRegistToScriptSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UnRegistToScriptSystem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->UnRegistToScriptSystem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UnRegistToScriptSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsRegistedToScriptSystem of class  Gameable */
#ifndef TOLUA_DISABLE_tolua_PX2_Gameable_IsRegistedToScriptSystem00
static int tolua_PX2_Gameable_IsRegistedToScriptSystem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Gameable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Gameable* self = (Gameable*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsRegistedToScriptSystem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsRegistedToScriptSystem();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsRegistedToScriptSystem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_delete00
static int tolua_PX2_Animation_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnimType of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetAnimType00
static int tolua_PX2_Animation_GetAnimType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnimType'", NULL);
#endif
  {
   Animation::AnimType tolua_ret = (Animation::AnimType)  self->GetAnimType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnimType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNormalTime of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetNormalTime00
static int tolua_PX2_Animation_SetNormalTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNormalTime'", NULL);
#endif
  {
   self->SetNormalTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNormalTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNormalTime of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetNormalTime00
static int tolua_PX2_Animation_GetNormalTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNormalTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetNormalTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNormalTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTime of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetTime00
static int tolua_PX2_Animation_SetTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTime'", NULL);
#endif
  {
   self->SetTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTime of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetTime00
static int tolua_PX2_Animation_GetTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFilename of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetFilename00
static int tolua_PX2_Animation_SetFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFilename'", NULL);
#endif
  {
   self->SetFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFilename of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetFilename00
static int tolua_PX2_Animation_GetFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlayOnce of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_SetPlayOnce00
static int tolua_PX2_Animation_SetPlayOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  bool once = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlayOnce'", NULL);
#endif
  {
   self->SetPlayOnce(once);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlayOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlayOnce of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_IsPlayOnce00
static int tolua_PX2_Animation_IsPlayOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlayOnce'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlayOnce();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlayOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCharacter of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_GetCharacter00
static int tolua_PX2_Animation_GetCharacter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation* self = (const Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCharacter'", NULL);
#endif
  {
   const Character* tolua_ret = (const Character*)  self->GetCharacter();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"const Character");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCharacter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LetCharacterPlay of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_LetCharacterPlay00
static int tolua_PX2_Animation_LetCharacterPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LetCharacterPlay'", NULL);
#endif
  {
   self->LetCharacterPlay();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LetCharacterPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPlay of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_OnPlay00
static int tolua_PX2_Animation_OnPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  Character* character = ((Character*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPlay'", NULL);
#endif
  {
   self->OnPlay(character);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemove of class  Animation */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation_OnRemove00
static int tolua_PX2_Animation_OnRemove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation* self = (Animation*)  tolua_tousertype(tolua_S,1,0);
  Character* character = ((Character*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemove'", NULL);
#endif
  {
   self->OnRemove(character);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_new00
static int tolua_PX2_Animation2DFrames8_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Animation2DFrames8* tolua_ret = (Animation2DFrames8*)  Mtolua_new((Animation2DFrames8)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation2DFrames8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_new00_local
static int tolua_PX2_Animation2DFrames8_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Animation2DFrames8* tolua_ret = (Animation2DFrames8*)  Mtolua_new((Animation2DFrames8)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation2DFrames8");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_delete00
static int tolua_PX2_Animation2DFrames8_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation2DFrames8* self = (Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Stop of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_Stop00
static int tolua_PX2_Animation2DFrames8_Stop00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation2DFrames8* self = (Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Stop'", NULL);
#endif
  {
   self->Stop();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Stop'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPlaying of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_IsPlaying00
static int tolua_PX2_Animation2DFrames8_IsPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation2DFrames8* self = (const Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTime of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_SetTime00
static int tolua_PX2_Animation2DFrames8_SetTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation2DFrames8* self = (Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  float time = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTime'", NULL);
#endif
  {
   self->SetTime(time);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetInterval of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_SetInterval00
static int tolua_PX2_Animation2DFrames8_SetInterval00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation2DFrames8* self = (Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  float interval = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetInterval'", NULL);
#endif
  {
   self->SetInterval(interval);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetInterval'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetInterval of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_GetInterval00
static int tolua_PX2_Animation2DFrames8_GetInterval00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation2DFrames8* self = (const Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetInterval'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetInterval();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetInterval'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFilename of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_SetFilename00
static int tolua_PX2_Animation2DFrames8_SetFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation2DFrames8* self = (Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFilename'", NULL);
#endif
  {
   self->SetFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumFramesPerDir of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_GetNumFramesPerDir00
static int tolua_PX2_Animation2DFrames8_GetNumFramesPerDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation2DFrames8* self = (const Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumFramesPerDir'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumFramesPerDir();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumFramesPerDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPlayOnce of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_SetPlayOnce00
static int tolua_PX2_Animation2DFrames8_SetPlayOnce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation2DFrames8* self = (Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  bool once = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPlayOnce'", NULL);
#endif
  {
   self->SetPlayOnce(once);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPlayOnce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWorldRunDir of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_SetWorldRunDir00
static int tolua_PX2_Animation2DFrames8_SetWorldRunDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation2DFrames8* self = (Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  const AVector* vec = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWorldRunDir'", NULL);
#endif
  {
   self->SetWorldRunDir(*vec);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWorldRunDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWorldRunDir of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_GetWorldRunDir00
static int tolua_PX2_Animation2DFrames8_GetWorldRunDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Animation2DFrames8* self = (const Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWorldRunDir'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetWorldRunDir();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWorldRunDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnimSize of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_SetAnimSize00
static int tolua_PX2_Animation2DFrames8_SetAnimSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation2DFrames8* self = (Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  float size = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnimSize'", NULL);
#endif
  {
   self->SetAnimSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnimSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnPlay of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_OnPlay00
static int tolua_PX2_Animation2DFrames8_OnPlay00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation2DFrames8* self = (Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  Character* character = ((Character*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnPlay'", NULL);
#endif
  {
   self->OnPlay(character);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnPlay'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemove of class  Animation2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Animation2DFrames8_OnRemove00
static int tolua_PX2_Animation2DFrames8_OnRemove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Animation2DFrames8",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Animation2DFrames8* self = (Animation2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  Character* character = ((Character*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemove'", NULL);
#endif
  {
   self->OnRemove(character);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Actor */
#ifndef TOLUA_DISABLE_tolua_PX2_Actor_new00
static int tolua_PX2_Actor_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Actor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Actor* tolua_ret = (Actor*)  Mtolua_new((Actor)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Actor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Actor */
#ifndef TOLUA_DISABLE_tolua_PX2_Actor_new00_local
static int tolua_PX2_Actor_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Actor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Actor* tolua_ret = (Actor*)  Mtolua_new((Actor)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Actor");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Actor */
#ifndef TOLUA_DISABLE_tolua_PX2_Actor_delete00
static int tolua_PX2_Actor_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Actor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Actor* self = (Actor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Actor */
#ifndef TOLUA_DISABLE_tolua_PX2_Actor_Update00
static int tolua_PX2_Actor_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Actor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Actor* self = (Actor*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  EffectActor */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectActor_new00
static int tolua_PX2_EffectActor_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectActor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"EffectNode",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectNode* effect = ((EffectNode*)  tolua_tousertype(tolua_S,2,0));
  {
   EffectActor* tolua_ret = (EffectActor*)  Mtolua_new((EffectActor)(effect));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  EffectActor */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectActor_new00_local
static int tolua_PX2_EffectActor_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectActor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"EffectNode",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectNode* effect = ((EffectNode*)  tolua_tousertype(tolua_S,2,0));
  {
   EffectActor* tolua_ret = (EffectActor*)  Mtolua_new((EffectActor)(effect));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectActor");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  EffectActor */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectActor_delete00
static int tolua_PX2_EffectActor_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectActor* self = (EffectActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DoEnter of class  EffectActor */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectActor_DoEnter00
static int tolua_PX2_EffectActor_DoEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectActor* self = (EffectActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DoEnter'", NULL);
#endif
  {
   self->DoEnter();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DoEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DoExecute of class  EffectActor */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectActor_DoExecute00
static int tolua_PX2_EffectActor_DoExecute00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectActor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Event",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectActor* self = (EffectActor*)  tolua_tousertype(tolua_S,1,0);
  Event* event = ((Event*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DoExecute'", NULL);
#endif
  {
   self->DoExecute(event);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DoExecute'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DoLeave of class  EffectActor */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectActor_DoLeave00
static int tolua_PX2_EffectActor_DoLeave00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectActor* self = (EffectActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DoLeave'", NULL);
#endif
  {
   self->DoLeave();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DoLeave'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  CameraActor */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraActor_new00
static int tolua_PX2_CameraActor_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CameraActor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Camera",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* camera = ((Camera*)  tolua_tousertype(tolua_S,2,0));
  {
   CameraActor* tolua_ret = (CameraActor*)  Mtolua_new((CameraActor)(camera));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  CameraActor */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraActor_new00_local
static int tolua_PX2_CameraActor_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"CameraActor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Camera",1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Camera* camera = ((Camera*)  tolua_tousertype(tolua_S,2,0));
  {
   CameraActor* tolua_ret = (CameraActor*)  Mtolua_new((CameraActor)(camera));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraActor");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  CameraActor */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraActor_delete00
static int tolua_PX2_CameraActor_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraActor* self = (CameraActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCamera of class  CameraActor */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraActor_SetCamera00
static int tolua_PX2_CameraActor_SetCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraActor",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Camera",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraActor* self = (CameraActor*)  tolua_tousertype(tolua_S,1,0);
  Camera* camera = ((Camera*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCamera'", NULL);
#endif
  {
   self->SetCamera(camera);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCamera of class  CameraActor */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraActor_GetCamera00
static int tolua_PX2_CameraActor_GetCamera00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraActor* self = (CameraActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCamera'", NULL);
#endif
  {
   Camera* tolua_ret = (Camera*)  self->GetCamera();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Camera");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCamera'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCameraNode of class  CameraActor */
#ifndef TOLUA_DISABLE_tolua_PX2_CameraActor_GetCameraNode00
static int tolua_PX2_CameraActor_GetCameraNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"CameraActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  CameraActor* self = (CameraActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCameraNode'", NULL);
#endif
  {
   CameraNode* tolua_ret = (CameraNode*)  self->GetCameraNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraNode");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCameraNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_new00
static int tolua_PX2_Item_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Item* tolua_ret = (Item*)  Mtolua_new((Item)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Item");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_new00_local
static int tolua_PX2_Item_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Item* tolua_ret = (Item*)  Mtolua_new((Item)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Item");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_delete00
static int tolua_PX2_Item_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTypeString of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_SetTypeString00
static int tolua_PX2_Item_SetTypeString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  const std::string typeString = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTypeString'", NULL);
#endif
  {
   self->SetTypeString(typeString);
   tolua_pushcppstring(tolua_S,(const char*)typeString);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTypeString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTypeString of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_GetTypeString00
static int tolua_PX2_Item_GetTypeString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Item* self = (const Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTypeString'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTypeString();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTypeString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCanBeEquipped of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_SetCanBeEquipped00
static int tolua_PX2_Item_SetCanBeEquipped00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  bool can = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCanBeEquipped'", NULL);
#endif
  {
   self->SetCanBeEquipped(can);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCanBeEquipped'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsCanBeEquipped of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_IsCanBeEquipped00
static int tolua_PX2_Item_IsCanBeEquipped00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Item* self = (const Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsCanBeEquipped'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsCanBeEquipped();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsCanBeEquipped'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEquippedDoUse of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_SetEquippedDoUse00
static int tolua_PX2_Item_SetEquippedDoUse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEquippedDoUse'", NULL);
#endif
  {
   self->SetEquippedDoUse(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEquippedDoUse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsEquippedDoUse of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_IsEquippedDoUse00
static int tolua_PX2_Item_IsEquippedDoUse00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Item* self = (const Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsEquippedDoUse'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsEquippedDoUse();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsEquippedDoUse'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsEquipped of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_IsEquipped00
static int tolua_PX2_Item_IsEquipped00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Item* self = (const Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsEquipped'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsEquipped();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsEquipped'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLevel of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_SetLevel00
static int tolua_PX2_Item_SetLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  int level = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLevel'", NULL);
#endif
  {
   self->SetLevel(level);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLevel of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_GetLevel00
static int tolua_PX2_Item_GetLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Item* self = (const Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLevel'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetLevel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CanUseNow of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_CanUseNow00
static int tolua_PX2_Item_CanUseNow00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Item* self = (const Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CanUseNow'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->CanUseNow();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CanUseNow'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Use of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_Use00
static int tolua_PX2_Item_Use00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Use'", NULL);
#endif
  {
   self->Use(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Use'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUsing of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_IsUsing00
static int tolua_PX2_Item_IsUsing00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Item* self = (const Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUsing'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUsing();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUsing'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_Use of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_SetScriptHandler_Use00
static int tolua_PX2_Item_SetScriptHandler_Use00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_Use'", NULL);
#endif
  {
   self->SetScriptHandler_Use(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_Use'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_Use of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_GetScriptHandler_Use00
static int tolua_PX2_Item_GetScriptHandler_Use00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Item* self = (const Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_Use'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_Use();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_Use'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddScriptHandler_OnBeAffect of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_AddScriptHandler_OnBeAffect00
static int tolua_PX2_Item_AddScriptHandler_OnBeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddScriptHandler_OnBeAffect'", NULL);
#endif
  {
   self->AddScriptHandler_OnBeAffect(name,handler);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddScriptHandler_OnBeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveScriptHandler_OnBeAffect of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_RemoveScriptHandler_OnBeAffect00
static int tolua_PX2_Item_RemoveScriptHandler_OnBeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveScriptHandler_OnBeAffect'", NULL);
#endif
  {
   self->RemoveScriptHandler_OnBeAffect(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveScriptHandler_OnBeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddScriptHandler_OnSucAffect of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_AddScriptHandler_OnSucAffect00
static int tolua_PX2_Item_AddScriptHandler_OnSucAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddScriptHandler_OnSucAffect'", NULL);
#endif
  {
   self->AddScriptHandler_OnSucAffect(name,handler);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddScriptHandler_OnSucAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveScriptHandler_OnSucAffect of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_RemoveScriptHandler_OnSucAffect00
static int tolua_PX2_Item_RemoveScriptHandler_OnSucAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveScriptHandler_OnSucAffect'", NULL);
#endif
  {
   self->RemoveScriptHandler_OnSucAffect(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveScriptHandler_OnSucAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnBeAffect of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_OnBeAffect00
static int tolua_PX2_Item_OnBeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AffectObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  AffectObject* ao = ((AffectObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnBeAffect'", NULL);
#endif
  {
   self->OnBeAffect(ao);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnBeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnSucAffect of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_OnSucAffect00
static int tolua_PX2_Item_OnSucAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Item",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AffectObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Item* self = (Item*)  tolua_tousertype(tolua_S,1,0);
  AffectObject* ao = ((AffectObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnSucAffect'", NULL);
#endif
  {
   self->OnSucAffect(ao);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnSucAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCharacter of class  Item */
#ifndef TOLUA_DISABLE_tolua_PX2_Item_GetCharacter00
static int tolua_PX2_Item_GetCharacter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Item* self = (const Item*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCharacter'", NULL);
#endif
  {
   Character* tolua_ret = (Character*)  self->GetCharacter();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Character");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCharacter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_new00
static int tolua_PX2_Buf_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Buf* tolua_ret = (Buf*)  Mtolua_new((Buf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Buf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_new00_local
static int tolua_PX2_Buf_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Buf* tolua_ret = (Buf*)  Mtolua_new((Buf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Buf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_delete00
static int tolua_PX2_Buf_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_Update00
static int tolua_PX2_Buf_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetID of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetID00
static int tolua_PX2_Buf_SetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetID'", NULL);
#endif
  {
   self->SetID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetID of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetID00
static int tolua_PX2_Buf_GetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTypeID of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetTypeID00
static int tolua_PX2_Buf_SetTypeID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  int typeID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTypeID'", NULL);
#endif
  {
   self->SetTypeID(typeID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTypeID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTypeID of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetTypeID00
static int tolua_PX2_Buf_GetTypeID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTypeID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetTypeID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTypeID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClass of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetClass00
static int tolua_PX2_Buf_SetClass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  const std::string classStr = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClass'", NULL);
#endif
  {
   self->SetClass(classStr);
   tolua_pushcppstring(tolua_S,(const char*)classStr);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetClass of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetClass00
static int tolua_PX2_Buf_GetClass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetClass'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetClass();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetClass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetClassOnlyOne of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetClassOnlyOne00
static int tolua_PX2_Buf_SetClassOnlyOne00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  bool classOnlyOne = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetClassOnlyOne'", NULL);
#endif
  {
   self->SetClassOnlyOne(classOnlyOne);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetClassOnlyOne'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsClassOnlyOne of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_IsClassOnlyOne00
static int tolua_PX2_Buf_IsClassOnlyOne00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsClassOnlyOne'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsClassOnlyOne();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsClassOnlyOne'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTime of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetTime00
static int tolua_PX2_Buf_SetTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  float seconds = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTime'", NULL);
#endif
  {
   self->SetTime(seconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTime of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetTime00
static int tolua_PX2_Buf_GetTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetTimeAdded of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_ResetTimeAdded00
static int tolua_PX2_Buf_ResetTimeAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetTimeAdded'", NULL);
#endif
  {
   self->ResetTimeAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetTimeAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTimeAdded of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetTimeAdded00
static int tolua_PX2_Buf_GetTimeAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTimeAdded'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTimeAdded();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTimeAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseCenterIDAlive of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetUseCenterIDAlive00
static int tolua_PX2_Buf_SetUseCenterIDAlive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  bool use = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseCenterIDAlive'", NULL);
#endif
  {
   self->SetUseCenterIDAlive(use);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseCenterIDAlive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUseCenterIDAlive of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_IsUseCenterIDAlive00
static int tolua_PX2_Buf_IsUseCenterIDAlive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUseCenterIDAlive'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUseCenterIDAlive();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUseCenterIDAlive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetUseRange of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetUseRange00
static int tolua_PX2_Buf_SetUseRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  bool useRange = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetUseRange'", NULL);
#endif
  {
   self->SetUseRange(useRange);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetUseRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsUseRange of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_IsUseRange00
static int tolua_PX2_Buf_IsUseRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsUseRange'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsUseRange();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsUseRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCenter of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetCenter00
static int tolua_PX2_Buf_SetCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  const APoint* center = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCenter'", NULL);
#endif
  {
   self->SetCenter(*center);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCenter of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetCenter00
static int tolua_PX2_Buf_GetCenter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCenter'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetCenter();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCenter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCenterCharacterID of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetCenterCharacterID00
static int tolua_PX2_Buf_SetCenterCharacterID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCenterCharacterID'", NULL);
#endif
  {
   self->SetCenterCharacterID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCenterCharacterID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCenterCharacterID of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetCenterCharacterID00
static int tolua_PX2_Buf_GetCenterCharacterID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCenterCharacterID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCenterCharacterID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCenterCharacterID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRadius of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetRadius00
static int tolua_PX2_Buf_SetRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  float radius = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRadius'", NULL);
#endif
  {
   self->SetRadius(radius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRadius of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetRadius00
static int tolua_PX2_Buf_GetRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRadius'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetRadius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOver of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetOver00
static int tolua_PX2_Buf_SetOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  bool over = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOver'", NULL);
#endif
  {
   self->SetOver(over);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsOver of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_IsOver00
static int tolua_PX2_Buf_IsOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsOver'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsOver();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAdded of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_OnAdded00
static int tolua_PX2_Buf_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAdded'", NULL);
#endif
  {
   self->OnAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemoved of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_OnRemoved00
static int tolua_PX2_Buf_OnRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemoved'", NULL);
#endif
  {
   self->OnRemoved();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAddedIDString of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetAddedIDString00
static int tolua_PX2_Buf_GetAddedIDString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAddedIDString'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetAddedIDString();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAddedIDString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_OnAdded of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetScriptHandler_OnAdded00
static int tolua_PX2_Buf_SetScriptHandler_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_OnAdded'", NULL);
#endif
  {
   self->SetScriptHandler_OnAdded(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_OnAdded of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetScriptHandler_OnAdded00
static int tolua_PX2_Buf_GetScriptHandler_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_OnAdded'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_OnAdded();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_OnRemoved of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_SetScriptHandler_OnRemoved00
static int tolua_PX2_Buf_SetScriptHandler_OnRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_OnRemoved'", NULL);
#endif
  {
   self->SetScriptHandler_OnRemoved(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_OnRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScirptHandler_OnRemoved of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetScirptHandler_OnRemoved00
static int tolua_PX2_Buf_GetScirptHandler_OnRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Buf* self = (const Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScirptHandler_OnRemoved'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScirptHandler_OnRemoved();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScirptHandler_OnRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCharacter of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetCharacter00
static int tolua_PX2_Buf_GetCharacter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Buf* self = (Buf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCharacter'", NULL);
#endif
  {
   Character* tolua_ret = (Character*)  self->GetCharacter();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Character");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCharacter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNextID of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetNextID00
static int tolua_PX2_Buf_GetNextID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   int tolua_ret = (int)  Buf::GetNextID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNextID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNextIDStr of class  Buf */
#ifndef TOLUA_DISABLE_tolua_PX2_Buf_GetNextIDStr00
static int tolua_PX2_Buf_GetNextIDStr00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   std::string tolua_ret = (std::string)  Buf::GetNextIDStr();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNextIDStr'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  AimBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_AimBuf_Create00
static int tolua_PX2_AimBuf_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AimBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AimBuf* tolua_ret = (AimBuf*)  AimBuf::Create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AimBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMode of class  AimBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_AimBuf_SetMode00
static int tolua_PX2_AimBuf_SetMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AimBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AimBuf* self = (AimBuf*)  tolua_tousertype(tolua_S,1,0);
  AimBuf::Mode mode = ((AimBuf::Mode) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMode'", NULL);
#endif
  {
   self->SetMode(mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMode of class  AimBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_AimBuf_GetMode00
static int tolua_PX2_AimBuf_GetMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AimBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AimBuf* self = (const AimBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMode'", NULL);
#endif
  {
   AimBuf::Mode tolua_ret = (AimBuf::Mode)  self->GetMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetValue of class  AimBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_AimBuf_SetValue00
static int tolua_PX2_AimBuf_SetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AimBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AimBuf* self = (AimBuf*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetValue'", NULL);
#endif
  {
   self->SetValue(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  AimBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_AimBuf_GetValue00
static int tolua_PX2_AimBuf_GetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const AimBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const AimBuf* self = (const AimBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValue'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  FreezeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_FreezeBuf_new00
static int tolua_PX2_FreezeBuf_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FreezeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FreezeBuf* tolua_ret = (FreezeBuf*)  Mtolua_new((FreezeBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FreezeBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  FreezeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_FreezeBuf_new00_local
static int tolua_PX2_FreezeBuf_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FreezeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FreezeBuf* tolua_ret = (FreezeBuf*)  Mtolua_new((FreezeBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FreezeBuf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  FreezeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_FreezeBuf_delete00
static int tolua_PX2_FreezeBuf_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FreezeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FreezeBuf* self = (FreezeBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  FreezeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_FreezeBuf_Create00
static int tolua_PX2_FreezeBuf_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"FreezeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   FreezeBuf* tolua_ret = (FreezeBuf*)  FreezeBuf::Create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"FreezeBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  FreezeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_FreezeBuf_Update00
static int tolua_PX2_FreezeBuf_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FreezeBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FreezeBuf* self = (FreezeBuf*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAdded of class  FreezeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_FreezeBuf_OnAdded00
static int tolua_PX2_FreezeBuf_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FreezeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FreezeBuf* self = (FreezeBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAdded'", NULL);
#endif
  {
   self->OnAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemoved of class  FreezeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_FreezeBuf_OnRemoved00
static int tolua_PX2_FreezeBuf_OnRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"FreezeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  FreezeBuf* self = (FreezeBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemoved'", NULL);
#endif
  {
   self->OnRemoved();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  EffectBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectBuf_new00
static int tolua_PX2_EffectBuf_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EffectBuf* tolua_ret = (EffectBuf*)  Mtolua_new((EffectBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  EffectBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectBuf_new00_local
static int tolua_PX2_EffectBuf_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EffectBuf* tolua_ret = (EffectBuf*)  Mtolua_new((EffectBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectBuf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  EffectBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectBuf_delete00
static int tolua_PX2_EffectBuf_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectBuf* self = (EffectBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  EffectBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectBuf_Create00
static int tolua_PX2_EffectBuf_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"EffectBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   EffectBuf* tolua_ret = (EffectBuf*)  EffectBuf::Create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetEffectFilename of class  EffectBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectBuf_SetEffectFilename00
static int tolua_PX2_EffectBuf_SetEffectFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectBuf",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectBuf* self = (EffectBuf*)  tolua_tousertype(tolua_S,1,0);
  const std::string effectFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetEffectFilename'", NULL);
#endif
  {
   self->SetEffectFilename(effectFilename);
   tolua_pushcppstring(tolua_S,(const char*)effectFilename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetEffectFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEffectFilename of class  EffectBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectBuf_GetEffectFilename00
static int tolua_PX2_EffectBuf_GetEffectFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectBuf* self = (const EffectBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEffectFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetEffectFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEffectFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnchor of class  EffectBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectBuf_SetAnchor00
static int tolua_PX2_EffectBuf_SetAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectBuf",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectBuf* self = (EffectBuf*)  tolua_tousertype(tolua_S,1,0);
  const std::string anchor = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnchor'", NULL);
#endif
  {
   self->SetAnchor(anchor);
   tolua_pushcppstring(tolua_S,(const char*)anchor);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnchor of class  EffectBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectBuf_GetAnchor00
static int tolua_PX2_EffectBuf_GetAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const EffectBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const EffectBuf* self = (const EffectBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnchor'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetAnchor();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAdded of class  EffectBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectBuf_OnAdded00
static int tolua_PX2_EffectBuf_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectBuf* self = (EffectBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAdded'", NULL);
#endif
  {
   self->OnAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemoved of class  EffectBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_EffectBuf_OnRemoved00
static int tolua_PX2_EffectBuf_OnRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"EffectBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  EffectBuf* self = (EffectBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemoved'", NULL);
#endif
  {
   self->OnRemoved();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_new00
static int tolua_PX2_HPBuf_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HPBuf* tolua_ret = (HPBuf*)  Mtolua_new((HPBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_new00_local
static int tolua_PX2_HPBuf_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HPBuf* tolua_ret = (HPBuf*)  Mtolua_new((HPBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPBuf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_delete00
static int tolua_PX2_HPBuf_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPBuf* self = (HPBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_Create00
static int tolua_PX2_HPBuf_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"HPBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   HPBuf* tolua_ret = (HPBuf*)  HPBuf::Create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"HPBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_Update00
static int tolua_PX2_HPBuf_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPBuf* self = (HPBuf*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMode of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_SetMode00
static int tolua_PX2_HPBuf_SetMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPBuf* self = (HPBuf*)  tolua_tousertype(tolua_S,1,0);
  HPBuf::Mode mode = ((HPBuf::Mode) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMode'", NULL);
#endif
  {
   self->SetMode(mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMode of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_GetMode00
static int tolua_PX2_HPBuf_GetMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPBuf* self = (const HPBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMode'", NULL);
#endif
  {
   HPBuf::Mode tolua_ret = (HPBuf::Mode)  self->GetMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetValue of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_SetValue00
static int tolua_PX2_HPBuf_SetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPBuf* self = (HPBuf*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetValue'", NULL);
#endif
  {
   self->SetValue(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_GetValue00
static int tolua_PX2_HPBuf_GetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const HPBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const HPBuf* self = (const HPBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAdded of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_OnAdded00
static int tolua_PX2_HPBuf_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPBuf* self = (HPBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAdded'", NULL);
#endif
  {
   self->OnAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemoved of class  HPBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_HPBuf_OnRemoved00
static int tolua_PX2_HPBuf_OnRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"HPBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  HPBuf* self = (HPBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemoved'", NULL);
#endif
  {
   self->OnRemoved();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_new00
static int tolua_PX2_SpeedBuf_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SpeedBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SpeedBuf* tolua_ret = (SpeedBuf*)  Mtolua_new((SpeedBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SpeedBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_new00_local
static int tolua_PX2_SpeedBuf_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SpeedBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SpeedBuf* tolua_ret = (SpeedBuf*)  Mtolua_new((SpeedBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SpeedBuf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_delete00
static int tolua_PX2_SpeedBuf_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpeedBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpeedBuf* self = (SpeedBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_Create00
static int tolua_PX2_SpeedBuf_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SpeedBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SpeedBuf* tolua_ret = (SpeedBuf*)  SpeedBuf::Create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SpeedBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_Update00
static int tolua_PX2_SpeedBuf_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpeedBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpeedBuf* self = (SpeedBuf*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMode of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_SetMode00
static int tolua_PX2_SpeedBuf_SetMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpeedBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpeedBuf* self = (SpeedBuf*)  tolua_tousertype(tolua_S,1,0);
  SpeedBuf::Mode mode = ((SpeedBuf::Mode) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMode'", NULL);
#endif
  {
   self->SetMode(mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMode of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_GetMode00
static int tolua_PX2_SpeedBuf_GetMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SpeedBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SpeedBuf* self = (const SpeedBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMode'", NULL);
#endif
  {
   SpeedBuf::Mode tolua_ret = (SpeedBuf::Mode)  self->GetMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetValue of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_SetValue00
static int tolua_PX2_SpeedBuf_SetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpeedBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpeedBuf* self = (SpeedBuf*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetValue'", NULL);
#endif
  {
   self->SetValue(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_GetValue00
static int tolua_PX2_SpeedBuf_GetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SpeedBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SpeedBuf* self = (const SpeedBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLastingMaxTime of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_SetLastingMaxTime00
static int tolua_PX2_SpeedBuf_SetLastingMaxTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpeedBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpeedBuf* self = (SpeedBuf*)  tolua_tousertype(tolua_S,1,0);
  float lastingMaxTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLastingMaxTime'", NULL);
#endif
  {
   self->SetLastingMaxTime(lastingMaxTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLastingMaxTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLastingMaxTime of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_GetLastingMaxTime00
static int tolua_PX2_SpeedBuf_GetLastingMaxTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SpeedBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SpeedBuf* self = (const SpeedBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLastingMaxTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetLastingMaxTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLastingMaxTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAdded of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_OnAdded00
static int tolua_PX2_SpeedBuf_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpeedBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpeedBuf* self = (SpeedBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAdded'", NULL);
#endif
  {
   self->OnAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemoved of class  SpeedBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SpeedBuf_OnRemoved00
static int tolua_PX2_SpeedBuf_OnRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SpeedBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SpeedBuf* self = (SpeedBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemoved'", NULL);
#endif
  {
   self->OnRemoved();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  GroupBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_GroupBuf_new00
static int tolua_PX2_GroupBuf_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GroupBuf* tolua_ret = (GroupBuf*)  Mtolua_new((GroupBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  GroupBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_GroupBuf_new00_local
static int tolua_PX2_GroupBuf_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GroupBuf* tolua_ret = (GroupBuf*)  Mtolua_new((GroupBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupBuf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  GroupBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_GroupBuf_delete00
static int tolua_PX2_GroupBuf_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupBuf* self = (GroupBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  GroupBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_GroupBuf_Create00
static int tolua_PX2_GroupBuf_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"GroupBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   GroupBuf* tolua_ret = (GroupBuf*)  GroupBuf::Create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"GroupBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  GroupBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_GroupBuf_Update00
static int tolua_PX2_GroupBuf_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupBuf* self = (GroupBuf*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetToGroupCharacterID of class  GroupBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_GroupBuf_SetToGroupCharacterID00
static int tolua_PX2_GroupBuf_SetToGroupCharacterID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupBuf* self = (GroupBuf*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetToGroupCharacterID'", NULL);
#endif
  {
   self->SetToGroupCharacterID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetToGroupCharacterID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBeforeGroup of class  GroupBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_GroupBuf_GetBeforeGroup00
static int tolua_PX2_GroupBuf_GetBeforeGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const GroupBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const GroupBuf* self = (const GroupBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBeforeGroup'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetBeforeGroup();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBeforeGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAdded of class  GroupBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_GroupBuf_OnAdded00
static int tolua_PX2_GroupBuf_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupBuf* self = (GroupBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAdded'", NULL);
#endif
  {
   self->OnAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemoved of class  GroupBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_GroupBuf_OnRemoved00
static int tolua_PX2_GroupBuf_OnRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"GroupBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  GroupBuf* self = (GroupBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemoved'", NULL);
#endif
  {
   self->OnRemoved();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_new00
static int tolua_PX2_SkillCDTimeBuf_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillCDTimeBuf* tolua_ret = (SkillCDTimeBuf*)  Mtolua_new((SkillCDTimeBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillCDTimeBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_new00_local
static int tolua_PX2_SkillCDTimeBuf_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillCDTimeBuf* tolua_ret = (SkillCDTimeBuf*)  Mtolua_new((SkillCDTimeBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillCDTimeBuf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_delete00
static int tolua_PX2_SkillCDTimeBuf_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCDTimeBuf* self = (SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_Create00
static int tolua_PX2_SkillCDTimeBuf_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillCDTimeBuf* tolua_ret = (SkillCDTimeBuf*)  SkillCDTimeBuf::Create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillCDTimeBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_Update00
static int tolua_PX2_SkillCDTimeBuf_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCDTimeBuf* self = (SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMode of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_SetMode00
static int tolua_PX2_SkillCDTimeBuf_SetMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCDTimeBuf* self = (SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
  SkillCDTimeBuf::Mode mode = ((SkillCDTimeBuf::Mode) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMode'", NULL);
#endif
  {
   self->SetMode(mode);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMode of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_GetMode00
static int tolua_PX2_SkillCDTimeBuf_GetMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillCDTimeBuf* self = (const SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMode'", NULL);
#endif
  {
   SkillCDTimeBuf::Mode tolua_ret = (SkillCDTimeBuf::Mode)  self->GetMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetValue of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_SetValue00
static int tolua_PX2_SkillCDTimeBuf_SetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCDTimeBuf* self = (SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetValue'", NULL);
#endif
  {
   self->SetValue(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_GetValue00
static int tolua_PX2_SkillCDTimeBuf_GetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillCDTimeBuf* self = (const SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLastingMaxTime of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_SetLastingMaxTime00
static int tolua_PX2_SkillCDTimeBuf_SetLastingMaxTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCDTimeBuf* self = (SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
  float lastingMaxTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLastingMaxTime'", NULL);
#endif
  {
   self->SetLastingMaxTime(lastingMaxTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLastingMaxTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLastingMaxTime of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_GetLastingMaxTime00
static int tolua_PX2_SkillCDTimeBuf_GetLastingMaxTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillCDTimeBuf* self = (const SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLastingMaxTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetLastingMaxTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLastingMaxTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSkillName of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_SetSkillName00
static int tolua_PX2_SkillCDTimeBuf_SetSkillName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCDTimeBuf* self = (SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
  const std::string skillName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSkillName'", NULL);
#endif
  {
   self->SetSkillName(skillName);
   tolua_pushcppstring(tolua_S,(const char*)skillName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSkillName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillName of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_GetSkillName00
static int tolua_PX2_SkillCDTimeBuf_GetSkillName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillCDTimeBuf* self = (const SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetSkillName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAdded of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_OnAdded00
static int tolua_PX2_SkillCDTimeBuf_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCDTimeBuf* self = (SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAdded'", NULL);
#endif
  {
   self->OnAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemoved of class  SkillCDTimeBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCDTimeBuf_OnRemoved00
static int tolua_PX2_SkillCDTimeBuf_OnRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCDTimeBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCDTimeBuf* self = (SkillCDTimeBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemoved'", NULL);
#endif
  {
   self->OnRemoved();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_new00
static int tolua_PX2_SkillCriticalBuf_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillCriticalBuf* tolua_ret = (SkillCriticalBuf*)  Mtolua_new((SkillCriticalBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillCriticalBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_new00_local
static int tolua_PX2_SkillCriticalBuf_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillCriticalBuf* tolua_ret = (SkillCriticalBuf*)  Mtolua_new((SkillCriticalBuf)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillCriticalBuf");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_delete00
static int tolua_PX2_SkillCriticalBuf_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCriticalBuf* self = (SkillCriticalBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Create of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_Create00
static int tolua_PX2_SkillCriticalBuf_Create00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillCriticalBuf* tolua_ret = (SkillCriticalBuf*)  SkillCriticalBuf::Create();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillCriticalBuf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Create'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSkillName of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_SetSkillName00
static int tolua_PX2_SkillCriticalBuf_SetSkillName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCriticalBuf",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCriticalBuf* self = (SkillCriticalBuf*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSkillName'", NULL);
#endif
  {
   self->SetSkillName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSkillName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillName of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_GetSkillName00
static int tolua_PX2_SkillCriticalBuf_GetSkillName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillCriticalBuf* self = (const SkillCriticalBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetSkillName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPercent of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_SetPercent00
static int tolua_PX2_SkillCriticalBuf_SetPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCriticalBuf* self = (SkillCriticalBuf*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPercent'", NULL);
#endif
  {
   self->SetPercent(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPercent of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_GetPercent00
static int tolua_PX2_SkillCriticalBuf_GetPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillCriticalBuf* self = (const SkillCriticalBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPercent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetPercent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProbability of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_SetProbability00
static int tolua_PX2_SkillCriticalBuf_SetProbability00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCriticalBuf* self = (SkillCriticalBuf*)  tolua_tousertype(tolua_S,1,0);
  float prob = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProbability'", NULL);
#endif
  {
   self->SetProbability(prob);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProbability'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProbability of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_GetProbability00
static int tolua_PX2_SkillCriticalBuf_GetProbability00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillCriticalBuf* self = (const SkillCriticalBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProbability'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetProbability();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProbability'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAdded of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_OnAdded00
static int tolua_PX2_SkillCriticalBuf_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCriticalBuf* self = (SkillCriticalBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAdded'", NULL);
#endif
  {
   self->OnAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemoved of class  SkillCriticalBuf */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillCriticalBuf_OnRemoved00
static int tolua_PX2_SkillCriticalBuf_OnRemoved00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillCriticalBuf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillCriticalBuf* self = (SkillCriticalBuf*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemoved'", NULL);
#endif
  {
   self->OnRemoved();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemoved'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_new00
static int tolua_PX2_Skill_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Skill* tolua_ret = (Skill*)  Mtolua_new((Skill)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Skill");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_new00_local
static int tolua_PX2_Skill_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Skill* tolua_ret = (Skill*)  Mtolua_new((Skill)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Skill");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_delete00
static int tolua_PX2_Skill_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCharacter of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetCharacter00
static int tolua_PX2_Skill_GetCharacter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCharacter'", NULL);
#endif
  {
   Character* tolua_ret = (Character*)  self->GetCharacter();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Character");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCharacter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAdded of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_OnAdded00
static int tolua_PX2_Skill_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAdded'", NULL);
#endif
  {
   self->OnAdded();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnRemove of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_OnRemove00
static int tolua_PX2_Skill_OnRemove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnRemove'", NULL);
#endif
  {
   self->OnRemove();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnRemove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initlize of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_Initlize00
static int tolua_PX2_Skill_Initlize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initlize'", NULL);
#endif
  {
   self->Initlize();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initlize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_Update00
static int tolua_PX2_Skill_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetID of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetID00
static int tolua_PX2_Skill_SetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetID'", NULL);
#endif
  {
   self->SetID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetID of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetID00
static int tolua_PX2_Skill_GetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTypeID of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetTypeID00
static int tolua_PX2_Skill_SetTypeID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int typeID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTypeID'", NULL);
#endif
  {
   self->SetTypeID(typeID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTypeID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTypeID of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetTypeID00
static int tolua_PX2_Skill_GetTypeID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTypeID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetTypeID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTypeID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTypeString of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetTypeString00
static int tolua_PX2_Skill_SetTypeString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  const std::string typeString = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTypeString'", NULL);
#endif
  {
   self->SetTypeString(typeString);
   tolua_pushcppstring(tolua_S,(const char*)typeString);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTypeString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTypeString of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetTypeString00
static int tolua_PX2_Skill_GetTypeString00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTypeString'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTypeString();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTypeString'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDefPointer of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetDefPointer00
static int tolua_PX2_Skill_SetDefPointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isuserdata(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  void* pointer = ((void*)  tolua_touserdata(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDefPointer'", NULL);
#endif
  {
   self->SetDefPointer(pointer);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDefPointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDefPointer of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetDefPointer00
static int tolua_PX2_Skill_GetDefPointer00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDefPointer'", NULL);
#endif
  {
   void* tolua_ret = (void*)  self->GetDefPointer();
   tolua_pushuserdata(tolua_S,(void*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDefPointer'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActivateProbability of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetActivateProbability00
static int tolua_PX2_Skill_SetActivateProbability00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  float prob = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActivateProbability'", NULL);
#endif
  {
   self->SetActivateProbability(prob);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActivateProbability'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActivateProbability of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetActivateProbability00
static int tolua_PX2_Skill_GetActivateProbability00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActivateProbability'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetActivateProbability();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActivateProbability'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPriority of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetPriority00
static int tolua_PX2_Skill_SetPriority00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int priority = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPriority'", NULL);
#endif
  {
   self->SetPriority(priority);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPriority'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPriority of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetPriority00
static int tolua_PX2_Skill_GetPriority00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPriority'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetPriority();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPriority'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPositive of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetPositive00
static int tolua_PX2_Skill_SetPositive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  bool passive = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPositive'", NULL);
#endif
  {
   self->SetPositive(passive);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPositive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsPositive of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsPositive00
static int tolua_PX2_Skill_IsPositive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsPositive'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsPositive();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsPositive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDieActivate of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetDieActivate00
static int tolua_PX2_Skill_SetDieActivate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  bool dieAct = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDieActivate'", NULL);
#endif
  {
   self->SetDieActivate(dieAct);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDieActivate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDieActivate of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsDieActivate00
static int tolua_PX2_Skill_IsDieActivate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDieActivate'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDieActivate();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDieActivate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBeRangeAffect of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetBeRangeAffect00
static int tolua_PX2_Skill_SetBeRangeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  bool rangeAffect = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBeRangeAffect'", NULL);
#endif
  {
   self->SetBeRangeAffect(rangeAffect);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBeRangeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsRangeAffect of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsRangeAffect00
static int tolua_PX2_Skill_IsRangeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsRangeAffect'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsRangeAffect();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsRangeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNumTargetsLock of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetNumTargetsLock00
static int tolua_PX2_Skill_SetNumTargetsLock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int num = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNumTargetsLock'", NULL);
#endif
  {
   self->SetNumTargetsLock(num);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNumTargetsLock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumTargetsLock of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetNumTargetsLock00
static int tolua_PX2_Skill_GetNumTargetsLock00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumTargetsLock'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumTargetsLock();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumTargetsLock'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRangeType of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetRangeType00
static int tolua_PX2_Skill_SetRangeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  Skill::RangeType type = ((Skill::RangeType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRangeType'", NULL);
#endif
  {
   self->SetRangeType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRangeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRangeType of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetRangeType00
static int tolua_PX2_Skill_GetRangeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRangeType'", NULL);
#endif
  {
   Skill::RangeType tolua_ret = (Skill::RangeType)  self->GetRangeType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRangeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetShapeType of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetShapeType00
static int tolua_PX2_Skill_SetShapeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  Skill::ShapeType type = ((Skill::ShapeType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetShapeType'", NULL);
#endif
  {
   self->SetShapeType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetShapeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetShapeType of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetShapeType00
static int tolua_PX2_Skill_GetShapeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetShapeType'", NULL);
#endif
  {
   Skill::ShapeType tolua_ret = (Skill::ShapeType)  self->GetShapeType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetShapeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHasTrack of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetHasTrack00
static int tolua_PX2_Skill_SetHasTrack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  bool hasTrack = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHasTrack'", NULL);
#endif
  {
   self->SetHasTrack(hasTrack);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHasTrack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasTrack of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsHasTrack00
static int tolua_PX2_Skill_IsHasTrack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasTrack'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasTrack();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasTrack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAbleToBuilding of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetAbleToBuilding00
static int tolua_PX2_Skill_SetAbleToBuilding00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  bool ableToBuilding = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAbleToBuilding'", NULL);
#endif
  {
   self->SetAbleToBuilding(ableToBuilding);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAbleToBuilding'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAbleToBuilding of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsAbleToBuilding00
static int tolua_PX2_Skill_IsAbleToBuilding00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAbleToBuilding'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAbleToBuilding();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAbleToBuilding'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNumMultiInstance of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetNumMultiInstance00
static int tolua_PX2_Skill_SetNumMultiInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int numMulti = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNumMultiInstance'", NULL);
#endif
  {
   self->SetNumMultiInstance(numMulti);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNumMultiInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumMultiInstance of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetNumMultiInstance00
static int tolua_PX2_Skill_GetNumMultiInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumMultiInstance'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumMultiInstance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumMultiInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLevel of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetLevel00
static int tolua_PX2_Skill_SetLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int level = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLevel'", NULL);
#endif
  {
   self->SetLevel(level);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLevel of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetLevel00
static int tolua_PX2_Skill_GetLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLevel'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetLevel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMaxLevel of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetMaxLevel00
static int tolua_PX2_Skill_SetMaxLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int level = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMaxLevel'", NULL);
#endif
  {
   self->SetMaxLevel(level);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMaxLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMaxLevel of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetMaxLevel00
static int tolua_PX2_Skill_GetMaxLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMaxLevel'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetMaxLevel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMaxLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_OnAdded of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetScriptHandler_OnAdded00
static int tolua_PX2_Skill_SetScriptHandler_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_OnAdded'", NULL);
#endif
  {
   self->SetScriptHandler_OnAdded(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_OnAdded of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetScriptHandler_OnAdded00
static int tolua_PX2_Skill_GetScriptHandler_OnAdded00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_OnAdded'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_OnAdded();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_OnAdded'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_OnRemove of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetScriptHandler_OnRemove00
static int tolua_PX2_Skill_SetScriptHandler_OnRemove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_OnRemove'", NULL);
#endif
  {
   self->SetScriptHandler_OnRemove(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_OnRemove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_OnRemove of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetScriptHandler_OnRemove00
static int tolua_PX2_Skill_GetScriptHandler_OnRemove00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_OnRemove'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_OnRemove();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_OnRemove'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActivateNeedCharacterAimTarget of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetActivateNeedCharacterAimTarget00
static int tolua_PX2_Skill_SetActivateNeedCharacterAimTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  bool need = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActivateNeedCharacterAimTarget'", NULL);
#endif
  {
   self->SetActivateNeedCharacterAimTarget(need);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActivateNeedCharacterAimTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsActivateNeedCharacterAnimTarget of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsActivateNeedCharacterAnimTarget00
static int tolua_PX2_Skill_IsActivateNeedCharacterAnimTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsActivateNeedCharacterAnimTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsActivateNeedCharacterAnimTarget();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsActivateNeedCharacterAnimTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActivateAllowTimes of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetActivateAllowTimes00
static int tolua_PX2_Skill_SetActivateAllowTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int times = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActivateAllowTimes'", NULL);
#endif
  {
   self->SetActivateAllowTimes(times);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActivateAllowTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActivateAllowTimes of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetActivateAllowTimes00
static int tolua_PX2_Skill_GetActivateAllowTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActivateAllowTimes'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetActivateAllowTimes();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActivateAllowTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetActivatedTimes of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetActivatedTimes00
static int tolua_PX2_Skill_SetActivatedTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int times = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetActivatedTimes'", NULL);
#endif
  {
   self->SetActivatedTimes(times);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetActivatedTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActivatedTimes of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetActivatedTimes00
static int tolua_PX2_Skill_GetActivatedTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActivatedTimes'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetActivatedTimes();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActivatedTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsActivateHasTimes of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsActivateHasTimes00
static int tolua_PX2_Skill_IsActivateHasTimes00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsActivateHasTimes'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsActivateHasTimes();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsActivateHasTimes'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillQueryBitSet of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetSkillQueryBitSet00
static int tolua_PX2_Skill_GetSkillQueryBitSet00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillQueryBitSet'", NULL);
#endif
  {
   std::bitset<PX2_ACTOR_BS_SIZE> tolua_ret = (std::bitset<PX2_ACTOR_BS_SIZE>)  self->GetSkillQueryBitSet();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::bitset<PX2_ACTOR_BS_SIZE>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::bitset<PX2_ACTOR_BS_SIZE>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::bitset<PX2_ACTOR_BS_SIZE>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::bitset<PX2_ACTOR_BS_SIZE>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillQueryBitSet'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsCallOver of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsCallOver00
static int tolua_PX2_Skill_IsCallOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsCallOver'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsCallOver();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsCallOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Activate of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_Activate00
static int tolua_PX2_Skill_Activate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Activate'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->Activate();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Activate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: DisActivate of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_DisActivate00
static int tolua_PX2_Skill_DisActivate00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'DisActivate'", NULL);
#endif
  {
   self->DisActivate();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'DisActivate'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsActivatting of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsActivatting00
static int tolua_PX2_Skill_IsActivatting00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsActivatting'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsActivatting();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsActivatting'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetCD of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_ResetCD00
static int tolua_PX2_Skill_ResetCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetCD'", NULL);
#endif
  {
   self->ResetCD();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOnCD of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetOnCD00
static int tolua_PX2_Skill_SetOnCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  bool cd = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOnCD'", NULL);
#endif
  {
   self->SetOnCD(cd);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOnCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsOnCD of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsOnCD00
static int tolua_PX2_Skill_IsOnCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsOnCD'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsOnCD();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsOnCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOnCDTime of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetOnCDTime00
static int tolua_PX2_Skill_SetOnCDTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  float onCDTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOnCDTime'", NULL);
#endif
  {
   self->SetOnCDTime(onCDTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOnCDTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOnCDTime of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetOnCDTime00
static int tolua_PX2_Skill_GetOnCDTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOnCDTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetOnCDTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOnCDTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumInstances of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetNumInstances00
static int tolua_PX2_Skill_GetNumInstances00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumInstances'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumInstances();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumInstances'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ClearSkillInstance of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_ClearSkillInstance00
static int tolua_PX2_Skill_ClearSkillInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ClearSkillInstance'", NULL);
#endif
  {
   self->ClearSkillInstance();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ClearSkillInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFirstSkillStep of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetFirstSkillStep00
static int tolua_PX2_Skill_SetFirstSkillStep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  SkillStep* step = ((SkillStep*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFirstSkillStep'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SetFirstSkillStep(step);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFirstSkillStep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFirstSkillStep of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetFirstSkillStep00
static int tolua_PX2_Skill_GetFirstSkillStep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFirstSkillStep'", NULL);
#endif
  {
   SkillStep* tolua_ret = (SkillStep*)  self->GetFirstSkillStep();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillStep");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFirstSkillStep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillStepByName of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetSkillStepByName00
static int tolua_PX2_Skill_GetSkillStepByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillStepByName'", NULL);
#endif
  {
   SkillStep* tolua_ret = (SkillStep*)  self->GetSkillStepByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillStep");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillStepByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLastSkillStep of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetLastSkillStep00
static int tolua_PX2_Skill_GetLastSkillStep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLastSkillStep'", NULL);
#endif
  {
   SkillStep* tolua_ret = (SkillStep*)  self->GetLastSkillStep();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillStep");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLastSkillStep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAffectGroupType of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetAffectGroupType00
static int tolua_PX2_Skill_SetAffectGroupType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  Skill::AffectGroupType type = ((Skill::AffectGroupType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAffectGroupType'", NULL);
#endif
  {
   self->SetAffectGroupType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAffectGroupType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAffectGroupType of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetAffectGroupType00
static int tolua_PX2_Skill_GetAffectGroupType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAffectGroupType'", NULL);
#endif
  {
   Skill::AffectGroupType tolua_ret = (Skill::AffectGroupType)  self->GetAffectGroupType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAffectGroupType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetPhysicsAP of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetPhysicsAP00
static int tolua_PX2_Skill_SetPhysicsAP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetPhysicsAP'", NULL);
#endif
  {
   self->SetPhysicsAP(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetPhysicsAP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPhysicsAP of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetPhysicsAP00
static int tolua_PX2_Skill_GetPhysicsAP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPhysicsAP'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetPhysicsAP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPhysicsAP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMagicAP of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetMagicAP00
static int tolua_PX2_Skill_SetMagicAP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  int val = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMagicAP'", NULL);
#endif
  {
   self->SetMagicAP(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMagicAP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMagicAP of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetMagicAP00
static int tolua_PX2_Skill_GetMagicAP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMagicAP'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetMagicAP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMagicAP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCriticalPercent of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetCriticalPercent00
static int tolua_PX2_Skill_SetCriticalPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  float percent = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCriticalPercent'", NULL);
#endif
  {
   self->SetCriticalPercent(percent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCriticalPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCriticalPercent of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetCriticalPercent00
static int tolua_PX2_Skill_GetCriticalPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCriticalPercent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetCriticalPercent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCriticalPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCriticalProbability of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_SetCriticalProbability00
static int tolua_PX2_Skill_SetCriticalProbability00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  float prob = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCriticalProbability'", NULL);
#endif
  {
   self->SetCriticalProbability(prob);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCriticalProbability'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCriticalProbability of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetCriticalProbability00
static int tolua_PX2_Skill_GetCriticalProbability00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCriticalProbability'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetCriticalProbability();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCriticalProbability'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPhysicsAPLast of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetPhysicsAPLast00
static int tolua_PX2_Skill_GetPhysicsAPLast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPhysicsAPLast'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetPhysicsAPLast();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPhysicsAPLast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMagicAPLast of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetMagicAPLast00
static int tolua_PX2_Skill_GetMagicAPLast00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Skill* self = (const Skill*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMagicAPLast'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetMagicAPLast();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMagicAPLast'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddAffectParam of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_AddAffectParam00
static int tolua_PX2_Skill_AddAffectParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float val = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddAffectParam'", NULL);
#endif
  {
   self->AddAffectParam(name,val);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddAffectParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAffectParam of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_RemoveAffectParam00
static int tolua_PX2_Skill_RemoveAffectParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAffectParam'", NULL);
#endif
  {
   self->RemoveAffectParam(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAffectParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasAffectParam of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsHasAffectParam00
static int tolua_PX2_Skill_IsHasAffectParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasAffectParam'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasAffectParam(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasAffectParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAffectParam of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_GetAffectParam00
static int tolua_PX2_Skill_GetAffectParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAffectParam'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetAffectParam(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAffectParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInRadiusLength of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsInRadiusLength00
static int tolua_PX2_Skill_IsInRadiusLength00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  const Character* target = ((const Character*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsInRadiusLength'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsInRadiusLength(target);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInRadiusLength'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInTrigerDistance of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsInTrigerDistance00
static int tolua_PX2_Skill_IsInTrigerDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Skill",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* self = (Skill*)  tolua_tousertype(tolua_S,1,0);
  const Character* target = ((const Character*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsInTrigerDistance'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsInTrigerDistance(target);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInTrigerDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInRange of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsInRange00
static int tolua_PX2_Skill_IsInRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Skill",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const AVector",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,7,&tolua_err) || !tolua_isusertype(tolua_S,7,"const APoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,8,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,9,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,10,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,11,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const APoint* fromPos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  float fromLength = ((float)  tolua_tonumber(tolua_S,3,0));
  float fromWidth = ((float)  tolua_tonumber(tolua_S,4,0));
  const AVector* fromFaceDir = ((const AVector*)  tolua_tousertype(tolua_S,5,0));
  float fromDegree = ((float)  tolua_tonumber(tolua_S,6,0));
  const APoint* targetPos = ((const APoint*)  tolua_tousertype(tolua_S,7,0));
  float targetRadius = ((float)  tolua_tonumber(tolua_S,8,0));
  Skill::ShapeType type = ((Skill::ShapeType) (int)  tolua_tonumber(tolua_S,9,0));
  bool doBoxRolate = ((bool)  tolua_toboolean(tolua_S,10,0));
  {
   bool tolua_ret = (bool)  Skill::IsInRange(*fromPos,fromLength,fromWidth,*fromFaceDir,fromDegree,*targetPos,targetRadius,type,doBoxRolate);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInBoxRange of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsInBoxRange00
static int tolua_PX2_Skill_IsInBoxRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Skill",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,6,&tolua_err) || !tolua_isusertype(tolua_S,6,"const APoint",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,7,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,8,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const APoint* center = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  const AVector* dir = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
  float length = ((float)  tolua_tonumber(tolua_S,4,0));
  float width = ((float)  tolua_tonumber(tolua_S,5,0));
  const APoint* point = ((const APoint*)  tolua_tousertype(tolua_S,6,0));
  float targetRadius = ((float)  tolua_tonumber(tolua_S,7,0));
  {
   bool tolua_ret = (bool)  Skill::IsInBoxRange(*center,*dir,length,width,*point,targetRadius);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInBoxRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsInFanRange of class  Skill */
#ifndef TOLUA_DISABLE_tolua_PX2_Skill_IsInFanRange00
static int tolua_PX2_Skill_IsInFanRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Skill",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     (tolua_isvaluenil(tolua_S,3,&tolua_err) || !tolua_isusertype(tolua_S,3,"const AVector",0,&tolua_err)) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,5,&tolua_err) || !tolua_isusertype(tolua_S,5,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const APoint* center = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
  const AVector* dir = ((const AVector*)  tolua_tousertype(tolua_S,3,0));
  float radian = ((float)  tolua_tonumber(tolua_S,4,0));
  const APoint* point = ((const APoint*)  tolua_tousertype(tolua_S,5,0));
  {
   bool tolua_ret = (bool)  Skill::IsInFanRange(*center,*dir,radian,*point);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsInFanRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_delete00
static int tolua_PX2_SkillStep_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkill of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetSkill00
static int tolua_PX2_SkillStep_GetSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkill'", NULL);
#endif
  {
   Skill* tolua_ret = (Skill*)  self->GetSkill();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Skill");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurEnteredSkillInstance of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetCurEnteredSkillInstance00
static int tolua_PX2_SkillStep_GetCurEnteredSkillInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurEnteredSkillInstance'", NULL);
#endif
  {
   SkillInstance* tolua_ret = (SkillInstance*)  self->GetCurEnteredSkillInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillInstance");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurEnteredSkillInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetProbability of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetProbability00
static int tolua_PX2_SkillStep_SetProbability00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  float pro = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetProbability'", NULL);
#endif
  {
   self->SetProbability(pro);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetProbability'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetProbability of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetProbability00
static int tolua_PX2_SkillStep_GetProbability00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetProbability'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetProbability();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetProbability'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMode of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetMode00
static int tolua_PX2_SkillStep_GetMode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMode'", NULL);
#endif
  {
   SkillStep::Mode tolua_ret = (SkillStep::Mode)  self->GetMode();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSkillCallOverAtThisStep of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetSkillCallOverAtThisStep00
static int tolua_PX2_SkillStep_SetSkillCallOverAtThisStep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  bool callOver = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSkillCallOverAtThisStep'", NULL);
#endif
  {
   self->SetSkillCallOverAtThisStep(callOver);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSkillCallOverAtThisStep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsSkillCallOverAtThisStep of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_IsSkillCallOverAtThisStep00
static int tolua_PX2_SkillStep_IsSkillCallOverAtThisStep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsSkillCallOverAtThisStep'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsSkillCallOverAtThisStep();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsSkillCallOverAtThisStep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSkillCallOverTimeType of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetSkillCallOverTimeType00
static int tolua_PX2_SkillStep_SetSkillCallOverTimeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  SkillStep::TimeType type = ((SkillStep::TimeType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSkillCallOverTimeType'", NULL);
#endif
  {
   self->SetSkillCallOverTimeType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSkillCallOverTimeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillCallOverTimeType of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetSkillCallOverTimeType00
static int tolua_PX2_SkillStep_GetSkillCallOverTimeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillCallOverTimeType'", NULL);
#endif
  {
   SkillStep::TimeType tolua_ret = (SkillStep::TimeType)  self->GetSkillCallOverTimeType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillCallOverTimeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSkillCallOverValue of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetSkillCallOverValue00
static int tolua_PX2_SkillStep_SetSkillCallOverValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  float val = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSkillCallOverValue'", NULL);
#endif
  {
   self->SetSkillCallOverValue(val);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSkillCallOverValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillCallOverValue of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetSkillCallOverValue00
static int tolua_PX2_SkillStep_GetSkillCallOverValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillCallOverValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSkillCallOverValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillCallOverValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillCallOverTime of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetSkillCallOverTime00
static int tolua_PX2_SkillStep_GetSkillCallOverTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillCallOverTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSkillCallOverTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillCallOverTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnimName of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetAnimName00
static int tolua_PX2_SkillStep_SetAnimName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  const std::string animName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnimName'", NULL);
#endif
  {
   self->SetAnimName(animName);
   tolua_pushcppstring(tolua_S,(const char*)animName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnimName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnimName of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetAnimName00
static int tolua_PX2_SkillStep_GetAnimName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnimName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetAnimName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnimName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSelfEffectFilename of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetSelfEffectFilename00
static int tolua_PX2_SkillStep_SetSelfEffectFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  const std::string selfEffectFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSelfEffectFilename'", NULL);
#endif
  {
   self->SetSelfEffectFilename(selfEffectFilename);
   tolua_pushcppstring(tolua_S,(const char*)selfEffectFilename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSelfEffectFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelfEffectFilename of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetSelfEffectFilename00
static int tolua_PX2_SkillStep_GetSelfEffectFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelfEffectFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetSelfEffectFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelfEffectFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSelfEffectAnchor of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetSelfEffectAnchor00
static int tolua_PX2_SkillStep_SetSelfEffectAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  const std::string selfAnchor = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSelfEffectAnchor'", NULL);
#endif
  {
   self->SetSelfEffectAnchor(selfAnchor);
   tolua_pushcppstring(tolua_S,(const char*)selfAnchor);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSelfEffectAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelfEffectAnchor of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetSelfEffectAnchor00
static int tolua_PX2_SkillStep_GetSelfEffectAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelfEffectAnchor'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetSelfEffectAnchor();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelfEffectAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSelfEffectTime of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetSelfEffectTime00
static int tolua_PX2_SkillStep_SetSelfEffectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  float seconds = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSelfEffectTime'", NULL);
#endif
  {
   self->SetSelfEffectTime(seconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSelfEffectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelfEffectTime of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetSelfEffectTime00
static int tolua_PX2_SkillStep_GetSelfEffectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelfEffectTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSelfEffectTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelfEffectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSelfPosEffectFilename of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetSelfPosEffectFilename00
static int tolua_PX2_SkillStep_SetSelfPosEffectFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  const std::string posEffectFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSelfPosEffectFilename'", NULL);
#endif
  {
   self->SetSelfPosEffectFilename(posEffectFilename);
   tolua_pushcppstring(tolua_S,(const char*)posEffectFilename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSelfPosEffectFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelfPosEffectFilename of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetSelfPosEffectFilename00
static int tolua_PX2_SkillStep_GetSelfPosEffectFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelfPosEffectFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetSelfPosEffectFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelfPosEffectFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSelfPosEffectAnchor of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetSelfPosEffectAnchor00
static int tolua_PX2_SkillStep_SetSelfPosEffectAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  const std::string selfAnchor = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSelfPosEffectAnchor'", NULL);
#endif
  {
   self->SetSelfPosEffectAnchor(selfAnchor);
   tolua_pushcppstring(tolua_S,(const char*)selfAnchor);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSelfPosEffectAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelfPosEffectAnchor of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetSelfPosEffectAnchor00
static int tolua_PX2_SkillStep_GetSelfPosEffectAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelfPosEffectAnchor'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetSelfPosEffectAnchor();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelfPosEffectAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSelfPosEffectTime of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetSelfPosEffectTime00
static int tolua_PX2_SkillStep_SetSelfPosEffectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  float seconds = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSelfPosEffectTime'", NULL);
#endif
  {
   self->SetSelfPosEffectTime(seconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSelfPosEffectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSelfPosEffectTime of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetSelfPosEffectTime00
static int tolua_PX2_SkillStep_GetSelfPosEffectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSelfPosEffectTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSelfPosEffectTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSelfPosEffectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTargetEffectFilename of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetTargetEffectFilename00
static int tolua_PX2_SkillStep_SetTargetEffectFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  const std::string targetEffectFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTargetEffectFilename'", NULL);
#endif
  {
   self->SetTargetEffectFilename(targetEffectFilename);
   tolua_pushcppstring(tolua_S,(const char*)targetEffectFilename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTargetEffectFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetEffectFilename of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetTargetEffectFilename00
static int tolua_PX2_SkillStep_GetTargetEffectFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetEffectFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTargetEffectFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetEffectFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTargetEffectAnchor of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetTargetEffectAnchor00
static int tolua_PX2_SkillStep_SetTargetEffectAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  const std::string targetAnchor = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTargetEffectAnchor'", NULL);
#endif
  {
   self->SetTargetEffectAnchor(targetAnchor);
   tolua_pushcppstring(tolua_S,(const char*)targetAnchor);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTargetEffectAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetEffectAnchor of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetTargetEffectAnchor00
static int tolua_PX2_SkillStep_GetTargetEffectAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetEffectAnchor'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTargetEffectAnchor();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetEffectAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTargetEffectTime of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetTargetEffectTime00
static int tolua_PX2_SkillStep_SetTargetEffectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  float seconds = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTargetEffectTime'", NULL);
#endif
  {
   self->SetTargetEffectTime(seconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTargetEffectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetEffectTime of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetTargetEffectTime00
static int tolua_PX2_SkillStep_GetTargetEffectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetEffectTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTargetEffectTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetEffectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTargetPosEffectFilename of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetTargetPosEffectFilename00
static int tolua_PX2_SkillStep_SetTargetPosEffectFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  const std::string posEffectFilename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTargetPosEffectFilename'", NULL);
#endif
  {
   self->SetTargetPosEffectFilename(posEffectFilename);
   tolua_pushcppstring(tolua_S,(const char*)posEffectFilename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTargetPosEffectFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetPosEffectFilename of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetTargetPosEffectFilename00
static int tolua_PX2_SkillStep_GetTargetPosEffectFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetPosEffectFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetTargetPosEffectFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetPosEffectFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTargetPosEffectTime of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetTargetPosEffectTime00
static int tolua_PX2_SkillStep_SetTargetPosEffectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  float seconds = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTargetPosEffectTime'", NULL);
#endif
  {
   self->SetTargetPosEffectTime(seconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTargetPosEffectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetPosEffectTime of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetTargetPosEffectTime00
static int tolua_PX2_SkillStep_GetTargetPosEffectTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetPosEffectTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTargetPosEffectTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetPosEffectTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_Enter of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetScriptHandler_Enter00
static int tolua_PX2_SkillStep_SetScriptHandler_Enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_Enter'", NULL);
#endif
  {
   self->SetScriptHandler_Enter(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_Enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_Enter of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetScriptHandler_Enter00
static int tolua_PX2_SkillStep_GetScriptHandler_Enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_Enter'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_Enter();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_Enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_Leave of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetScriptHandler_Leave00
static int tolua_PX2_SkillStep_SetScriptHandler_Leave00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_Leave'", NULL);
#endif
  {
   self->SetScriptHandler_Leave(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_Leave'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_Leave of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetScriptHandler_Leave00
static int tolua_PX2_SkillStep_GetScriptHandler_Leave00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStep* self = (const SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_Leave'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_Leave();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_Leave'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEnter of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_OnEnter00
static int tolua_PX2_SkillStep_OnEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  SkillInstance* instance = ((SkillInstance*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEnter'", NULL);
#endif
  {
   self->OnEnter(instance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnLeave of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_OnLeave00
static int tolua_PX2_SkillStep_OnLeave00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  SkillInstance* instance = ((SkillInstance*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnLeave'", NULL);
#endif
  {
   self->OnLeave(instance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnLeave'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetNextStep of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_SetNextStep00
static int tolua_PX2_SkillStep_SetNextStep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
  SkillStep* next = ((SkillStep*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetNextStep'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->SetNextStep(next);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetNextStep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNextStep of class  SkillStep */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStep_GetNextStep00
static int tolua_PX2_SkillStep_GetNextStep00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStep* self = (SkillStep*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNextStep'", NULL);
#endif
  {
   SkillStep* tolua_ret = (SkillStep*)  self->GetNextStep();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillStep");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNextStep'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SkillStepRangeTime */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepRangeTime_new00
static int tolua_PX2_SkillStepRangeTime_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillStepRangeTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillStepRangeTime* tolua_ret = (SkillStepRangeTime*)  Mtolua_new((SkillStepRangeTime)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillStepRangeTime");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SkillStepRangeTime */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepRangeTime_new00_local
static int tolua_PX2_SkillStepRangeTime_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillStepRangeTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillStepRangeTime* tolua_ret = (SkillStepRangeTime*)  Mtolua_new((SkillStepRangeTime)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillStepRangeTime");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SkillStepRangeTime */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepRangeTime_delete00
static int tolua_PX2_SkillStepRangeTime_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepRangeTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepRangeTime* self = (SkillStepRangeTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTimeType of class  SkillStepRangeTime */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepRangeTime_SetTimeType00
static int tolua_PX2_SkillStepRangeTime_SetTimeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepRangeTime",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepRangeTime* self = (SkillStepRangeTime*)  tolua_tousertype(tolua_S,1,0);
  SkillStepRangeTime::TimeType type = ((SkillStepRangeTime::TimeType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTimeType'", NULL);
#endif
  {
   self->SetTimeType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTimeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTimeType of class  SkillStepRangeTime */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepRangeTime_GetTimeType00
static int tolua_PX2_SkillStepRangeTime_GetTimeType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepRangeTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepRangeTime* self = (const SkillStepRangeTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTimeType'", NULL);
#endif
  {
   SkillStepRangeTime::TimeType tolua_ret = (SkillStepRangeTime::TimeType)  self->GetTimeType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTimeType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetValue of class  SkillStepRangeTime */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepRangeTime_SetValue00
static int tolua_PX2_SkillStepRangeTime_SetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepRangeTime",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepRangeTime* self = (SkillStepRangeTime*)  tolua_tousertype(tolua_S,1,0);
  float seconds = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetValue'", NULL);
#endif
  {
   self->SetValue(seconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValue of class  SkillStepRangeTime */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepRangeTime_GetValue00
static int tolua_PX2_SkillStepRangeTime_GetValue00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepRangeTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepRangeTime* self = (const SkillStepRangeTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValue'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetValue();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValue'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTime of class  SkillStepRangeTime */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepRangeTime_GetTime00
static int tolua_PX2_SkillStepRangeTime_GetTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepRangeTime",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepRangeTime* self = (SkillStepRangeTime*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_new00
static int tolua_PX2_SkillStepFarTrack_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillStepFarTrack* tolua_ret = (SkillStepFarTrack*)  Mtolua_new((SkillStepFarTrack)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillStepFarTrack");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_new00_local
static int tolua_PX2_SkillStepFarTrack_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillStepFarTrack* tolua_ret = (SkillStepFarTrack*)  Mtolua_new((SkillStepFarTrack)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillStepFarTrack");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_delete00
static int tolua_PX2_SkillStepFarTrack_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRangeRadius of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetRangeRadius00
static int tolua_PX2_SkillStepFarTrack_SetRangeRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  float rangeRadius = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRangeRadius'", NULL);
#endif
  {
   self->SetRangeRadius(rangeRadius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRangeRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRangeRadius of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_GetRangeRadius00
static int tolua_PX2_SkillStepFarTrack_GetRangeRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRangeRadius'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetRangeRadius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRangeRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBeTrackToActor of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetBeTrackToActor00
static int tolua_PX2_SkillStepFarTrack_SetBeTrackToActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  bool isToActor = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBeTrackToActor'", NULL);
#endif
  {
   self->SetBeTrackToActor(isToActor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBeTrackToActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsTrackToActor of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_IsTrackToActor00
static int tolua_PX2_SkillStepFarTrack_IsTrackToActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsTrackToActor'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsTrackToActor();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsTrackToActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTrackDir of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetTrackDir00
static int tolua_PX2_SkillStepFarTrack_SetTrackDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  const AVector* dir = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTrackDir'", NULL);
#endif
  {
   self->SetTrackDir(*dir);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTrackDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTrackDir of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_GetTrackDir00
static int tolua_PX2_SkillStepFarTrack_GetTrackDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTrackDir'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetTrackDir();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTrackDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSpeed of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetSpeed00
static int tolua_PX2_SkillStepFarTrack_SetSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSpeed'", NULL);
#endif
  {
   self->SetSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSpeed of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_GetSpeed00
static int tolua_PX2_SkillStepFarTrack_GetSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTrackTime of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetTrackTime00
static int tolua_PX2_SkillStepFarTrack_SetTrackTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  float seconds = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTrackTime'", NULL);
#endif
  {
   self->SetTrackTime(seconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTrackTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTrackTime of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_GetTrackTime00
static int tolua_PX2_SkillStepFarTrack_GetTrackTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTrackTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetTrackTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTrackTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDegree of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetDegree00
static int tolua_PX2_SkillStepFarTrack_SetDegree00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  float degree = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDegree'", NULL);
#endif
  {
   self->SetDegree(degree);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDegree'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDegree of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_GetDegree00
static int tolua_PX2_SkillStepFarTrack_GetDegree00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDegree'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDegree();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDegree'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSideDegree of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetSideDegree00
static int tolua_PX2_SkillStepFarTrack_SetSideDegree00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  float degree = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSideDegree'", NULL);
#endif
  {
   self->SetSideDegree(degree);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSideDegree'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSideDegree of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_GetSideDegree00
static int tolua_PX2_SkillStepFarTrack_GetSideDegree00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSideDegree'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSideDegree();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSideDegree'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAlignTrace of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetAlignTrace00
static int tolua_PX2_SkillStepFarTrack_SetAlignTrace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  bool alignTrace = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAlignTrace'", NULL);
#endif
  {
   self->SetAlignTrace(alignTrace);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAlignTrace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAlignTrace of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_IsAlignTrace00
static int tolua_PX2_SkillStepFarTrack_IsAlignTrace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAlignTrace'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAlignTrace();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAlignTrace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDoDamageOnTrack of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetDoDamageOnTrack00
static int tolua_PX2_SkillStepFarTrack_SetDoDamageOnTrack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  bool doDamgeOnTrack = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDoDamageOnTrack'", NULL);
#endif
  {
   self->SetDoDamageOnTrack(doDamgeOnTrack);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDoDamageOnTrack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDoDamageOnTrack of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_IsDoDamageOnTrack00
static int tolua_PX2_SkillStepFarTrack_IsDoDamageOnTrack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDoDamageOnTrack'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDoDamageOnTrack();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDoDamageOnTrack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDamageOnTrackFrequency of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetDamageOnTrackFrequency00
static int tolua_PX2_SkillStepFarTrack_SetDamageOnTrackFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  float fre = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDamageOnTrackFrequency'", NULL);
#endif
  {
   self->SetDamageOnTrackFrequency(fre);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDamageOnTrackFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDamageOnTrackFrequency of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_GetDamageOnTrackFrequency00
static int tolua_PX2_SkillStepFarTrack_GetDamageOnTrackFrequency00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDamageOnTrackFrequency'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDamageOnTrackFrequency();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDamageOnTrackFrequency'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCurTrackSkillInstance of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetCurTrackSkillInstance00
static int tolua_PX2_SkillStepFarTrack_SetCurTrackSkillInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  SkillInstance* si = ((SkillInstance*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCurTrackSkillInstance'", NULL);
#endif
  {
   self->SetCurTrackSkillInstance(si);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCurTrackSkillInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurTrackSkillInstance of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_GetCurTrackSkillInstance00
static int tolua_PX2_SkillStepFarTrack_GetCurTrackSkillInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurTrackSkillInstance'", NULL);
#endif
  {
   SkillInstance* tolua_ret = (SkillInstance*)  self->GetCurTrackSkillInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillInstance");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurTrackSkillInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_OnTrack of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_SetScriptHandler_OnTrack00
static int tolua_PX2_SkillStepFarTrack_SetScriptHandler_OnTrack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_OnTrack'", NULL);
#endif
  {
   self->SetScriptHandler_OnTrack(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_OnTrack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_OnTrack of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_GetScriptHandler_OnTrack00
static int tolua_PX2_SkillStepFarTrack_GetScriptHandler_OnTrack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepFarTrack* self = (const SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_OnTrack'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_OnTrack();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_OnTrack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEnter of class  SkillStepFarTrack */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepFarTrack_OnEnter00
static int tolua_PX2_SkillStepFarTrack_OnEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepFarTrack",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepFarTrack* self = (SkillStepFarTrack*)  tolua_tousertype(tolua_S,1,0);
  SkillInstance* instance = ((SkillInstance*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEnter'", NULL);
#endif
  {
   self->OnEnter(instance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_new00
static int tolua_PX2_SkillStepLink_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillStepLink* tolua_ret = (SkillStepLink*)  Mtolua_new((SkillStepLink)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillStepLink");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_new00_local
static int tolua_PX2_SkillStepLink_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillStepLink* tolua_ret = (SkillStepLink*)  Mtolua_new((SkillStepLink)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillStepLink");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_delete00
static int tolua_PX2_SkillStepLink_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepLink* self = (SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLinkToActor of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_SetLinkToActor00
static int tolua_PX2_SkillStepLink_SetLinkToActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepLink* self = (SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
  bool toActor = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLinkToActor'", NULL);
#endif
  {
   self->SetLinkToActor(toActor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLinkToActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsLinkToActor of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_IsLinkToActor00
static int tolua_PX2_SkillStepLink_IsLinkToActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepLink* self = (const SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsLinkToActor'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsLinkToActor();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsLinkToActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLinkDir of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_SetLinkDir00
static int tolua_PX2_SkillStepLink_SetLinkDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepLink* self = (SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
  const AVector* dir = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLinkDir'", NULL);
#endif
  {
   self->SetLinkDir(*dir);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLinkDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLinkDir of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_GetLinkDir00
static int tolua_PX2_SkillStepLink_GetLinkDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepLink* self = (const SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLinkDir'", NULL);
#endif
  {
   const AVector& tolua_ret = (const AVector&)  self->GetLinkDir();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const AVector");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLinkDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSpeed of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_SetSpeed00
static int tolua_PX2_SkillStepLink_SetSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepLink* self = (SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSpeed'", NULL);
#endif
  {
   self->SetSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSpeed of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_GetSpeed00
static int tolua_PX2_SkillStepLink_GetSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepLink* self = (const SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLinkToTime of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_SetLinkToTime00
static int tolua_PX2_SkillStepLink_SetLinkToTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepLink* self = (SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
  float linkToTime = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLinkToTime'", NULL);
#endif
  {
   self->SetLinkToTime(linkToTime);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLinkToTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLinkToTime of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_GetLinkToTime00
static int tolua_PX2_SkillStepLink_GetLinkToTime00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepLink* self = (const SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLinkToTime'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetLinkToTime();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLinkToTime'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLinkedDoOver of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_SetLinkedDoOver00
static int tolua_PX2_SkillStepLink_SetLinkedDoOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepLink* self = (SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
  bool linkedOver = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLinkedDoOver'", NULL);
#endif
  {
   self->SetLinkedDoOver(linkedOver);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLinkedDoOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsLinkedDoOver of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_IsLinkedDoOver00
static int tolua_PX2_SkillStepLink_IsLinkedDoOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepLink* self = (const SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsLinkedDoOver'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsLinkedDoOver();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsLinkedDoOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCurLinkedSkillInstance of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_SetCurLinkedSkillInstance00
static int tolua_PX2_SkillStepLink_SetCurLinkedSkillInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepLink* self = (SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
  SkillInstance* si = ((SkillInstance*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCurLinkedSkillInstance'", NULL);
#endif
  {
   self->SetCurLinkedSkillInstance(si);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCurLinkedSkillInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurLinkedSkillInstance of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_GetCurLinkedSkillInstance00
static int tolua_PX2_SkillStepLink_GetCurLinkedSkillInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepLink* self = (const SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurLinkedSkillInstance'", NULL);
#endif
  {
   SkillInstance* tolua_ret = (SkillInstance*)  self->GetCurLinkedSkillInstance();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillInstance");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurLinkedSkillInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_OnLinked of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_SetScriptHandler_OnLinked00
static int tolua_PX2_SkillStepLink_SetScriptHandler_OnLinked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepLink* self = (SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_OnLinked'", NULL);
#endif
  {
   self->SetScriptHandler_OnLinked(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_OnLinked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_OnLinked of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_GetScriptHandler_OnLinked00
static int tolua_PX2_SkillStepLink_GetScriptHandler_OnLinked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillStepLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillStepLink* self = (const SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_OnLinked'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_OnLinked();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_OnLinked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEnter of class  SkillStepLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillStepLink_OnEnter00
static int tolua_PX2_SkillStepLink_OnEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillStepLink",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillStepLink* self = (SkillStepLink*)  tolua_tousertype(tolua_S,1,0);
  SkillInstance* instance = ((SkillInstance*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEnter'", NULL);
#endif
  {
   self->OnEnter(instance);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_new00
static int tolua_PX2_SkillInstance_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* skill = ((Skill*)  tolua_tousertype(tolua_S,2,0));
  {
   SkillInstance* tolua_ret = (SkillInstance*)  Mtolua_new((SkillInstance)(skill));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillInstance");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_new00_local
static int tolua_PX2_SkillInstance_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Skill* skill = ((Skill*)  tolua_tousertype(tolua_S,2,0));
  {
   SkillInstance* tolua_ret = (SkillInstance*)  Mtolua_new((SkillInstance)(skill));
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillInstance");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_delete00
static int tolua_PX2_SkillInstance_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBeShared of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_SetBeShared00
static int tolua_PX2_SkillInstance_SetBeShared00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  bool shared = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBeShared'", NULL);
#endif
  {
   self->SetBeShared(shared);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBeShared'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsBeShared of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_IsBeShared00
static int tolua_PX2_SkillInstance_IsBeShared00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillInstance* self = (const SkillInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsBeShared'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsBeShared();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsBeShared'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_Update00
static int tolua_PX2_SkillInstance_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsOver of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_IsOver00
static int tolua_PX2_SkillInstance_IsOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillInstance* self = (const SkillInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsOver'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsOver();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsSkillCallOver of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_IsSkillCallOver00
static int tolua_PX2_SkillInstance_IsSkillCallOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillInstance* self = (const SkillInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsSkillCallOver'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsSkillCallOver();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsSkillCallOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Enter of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_Enter00
static int tolua_PX2_SkillInstance_Enter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  SkillStep* step = ((SkillStep*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Enter'", NULL);
#endif
  {
   self->Enter(step);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Enter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnLeave of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_OnLeave00
static int tolua_PX2_SkillInstance_OnLeave00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  SkillStep* step = ((SkillStep*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnLeave'", NULL);
#endif
  {
   self->OnLeave(step);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnLeave'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnEnter of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_OnEnter00
static int tolua_PX2_SkillInstance_OnEnter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"SkillStep",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  SkillStep* step = ((SkillStep*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnEnter'", NULL);
#endif
  {
   self->OnEnter(step);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnEnter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddSkillActor of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_AddSkillActor00
static int tolua_PX2_SkillInstance_AddSkillActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isusertype(tolua_S,3,"EffectActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  int aimTargetID = ((int)  tolua_tonumber(tolua_S,2,0));
  EffectActor* skillActor = ((EffectActor*)  tolua_tousertype(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddSkillActor'", NULL);
#endif
  {
   self->AddSkillActor(aimTargetID,skillActor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddSkillActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillActor of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_GetSkillActor00
static int tolua_PX2_SkillInstance_GetSkillActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  int aimTargetID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillActor'", NULL);
#endif
  {
   EffectActor* tolua_ret = (EffectActor*)  self->GetSkillActor(aimTargetID);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"EffectActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAimTarget of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_SetAimTarget00
static int tolua_PX2_SkillInstance_SetAimTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAimTarget'", NULL);
#endif
  {
   self->SetAimTarget(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAimTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAimTarget of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_GetAimTarget00
static int tolua_PX2_SkillInstance_GetAimTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillInstance* self = (const SkillInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAimTarget'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetAimTarget();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAimTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddTarget of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_AddTarget00
static int tolua_PX2_SkillInstance_AddTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddTarget(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasTarget of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_HasTarget00
static int tolua_PX2_SkillInstance_HasTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasTarget(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumTargets of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_GetNumTargets00
static int tolua_PX2_SkillInstance_GetNumTargets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillInstance* self = (const SkillInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumTargets'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumTargets();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumTargets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTarget of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_GetTarget00
static int tolua_PX2_SkillInstance_GetTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTarget'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetTarget(i);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetCharacter of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_GetTargetCharacter00
static int tolua_PX2_SkillInstance_GetTargetCharacter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetCharacter'", NULL);
#endif
  {
   Character* tolua_ret = (Character*)  self->GetTargetCharacter(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Character");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetCharacter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveTarget of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_RemoveTarget00
static int tolua_PX2_SkillInstance_RemoveTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveTarget'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveTarget(id);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllTargets of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_RemoveAllTargets00
static int tolua_PX2_SkillInstance_RemoveAllTargets00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllTargets'", NULL);
#endif
  {
   self->RemoveAllTargets();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllTargets'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkill of class  SkillInstance */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillInstance_GetSkill00
static int tolua_PX2_SkillInstance_GetSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillInstance",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillInstance* self = (SkillInstance*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkill'", NULL);
#endif
  {
   Skill* tolua_ret = (Skill*)  self->GetSkill();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Skill");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_new00
static int tolua_PX2_SkillActor_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillActor* tolua_ret = (SkillActor*)  Mtolua_new((SkillActor)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_new00_local
static int tolua_PX2_SkillActor_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillActor* tolua_ret = (SkillActor*)  Mtolua_new((SkillActor)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillActor");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_delete00
static int tolua_PX2_SkillActor_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_Update00
static int tolua_PX2_SkillActor_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTargetType of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetTargetType00
static int tolua_PX2_SkillActor_SetTargetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  SkillActor::TargetType type = ((SkillActor::TargetType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTargetType'", NULL);
#endif
  {
   self->SetTargetType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTargetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetType of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_GetTargetType00
static int tolua_PX2_SkillActor_GetTargetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetType'", NULL);
#endif
  {
   SkillActor::TargetType tolua_ret = (SkillActor::TargetType)  self->GetTargetType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAttackSpeed of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetAttackSpeed00
static int tolua_PX2_SkillActor_SetAttackSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAttackSpeed'", NULL);
#endif
  {
   self->SetAttackSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAttackSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAttackSpeed of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_GetAttackSpeed00
static int tolua_PX2_SkillActor_GetAttackSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAttackSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetAttackSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAttackSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBeginPos of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetBeginPos00
static int tolua_PX2_SkillActor_SetBeginPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBeginPos'", NULL);
#endif
  {
   self->SetBeginPos(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBeginPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBeginPos of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_GetBeginPos00
static int tolua_PX2_SkillActor_GetBeginPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBeginPos'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetBeginPos();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBeginPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCharacterGroup of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetCharacterGroup00
static int tolua_PX2_SkillActor_SetCharacterGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  int group = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCharacterGroup'", NULL);
#endif
  {
   self->SetCharacterGroup(group);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCharacterGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCharacterGroup of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_GetCharacterGroup00
static int tolua_PX2_SkillActor_GetCharacterGroup00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCharacterGroup'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCharacterGroup();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCharacterGroup'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSkillTypeID of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetSkillTypeID00
static int tolua_PX2_SkillActor_SetSkillTypeID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  int ID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSkillTypeID'", NULL);
#endif
  {
   self->SetSkillTypeID(ID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSkillTypeID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillITypeID of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_GetSkillITypeID00
static int tolua_PX2_SkillActor_GetSkillITypeID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillITypeID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetSkillITypeID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillITypeID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTargetID of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetTargetID00
static int tolua_PX2_SkillActor_SetTargetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  int ID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTargetID'", NULL);
#endif
  {
   self->SetTargetID(ID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTargetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetID of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_GetTargetID00
static int tolua_PX2_SkillActor_GetTargetID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetTargetID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTargetPos of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetTargetPos00
static int tolua_PX2_SkillActor_SetTargetPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTargetPos'", NULL);
#endif
  {
   self->SetTargetPos(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTargetPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetPos of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_GetTargetPos00
static int tolua_PX2_SkillActor_GetTargetPos00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetPos'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetTargetPos();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetPos'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDegree of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetDegree00
static int tolua_PX2_SkillActor_SetDegree00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  float degree = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDegree'", NULL);
#endif
  {
   self->SetDegree(degree);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDegree'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDegree of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_GetDegree00
static int tolua_PX2_SkillActor_GetDegree00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDegree'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetDegree();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDegree'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSideDegree of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetSideDegree00
static int tolua_PX2_SkillActor_SetSideDegree00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  float sideDegree = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSideDegree'", NULL);
#endif
  {
   self->SetSideDegree(sideDegree);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSideDegree'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSideDegree of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_GetSideDegree00
static int tolua_PX2_SkillActor_GetSideDegree00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSideDegree'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetSideDegree();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSideDegree'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAlignTrace of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetAlignTrace00
static int tolua_PX2_SkillActor_SetAlignTrace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  bool alignTrace = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAlignTrace'", NULL);
#endif
  {
   self->SetAlignTrace(alignTrace);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAlignTrace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAlignTrace of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_IsAlignTrace00
static int tolua_PX2_SkillActor_IsAlignTrace00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAlignTrace'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAlignTrace();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAlignTrace'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetRangeRadius of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetRangeRadius00
static int tolua_PX2_SkillActor_SetRangeRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  float radius = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetRangeRadius'", NULL);
#endif
  {
   self->SetRangeRadius(radius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetRangeRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetRangeRadius of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_GetRangeRadius00
static int tolua_PX2_SkillActor_GetRangeRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetRangeRadius'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetRangeRadius();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetRangeRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDoDamageOnTrack of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_SetDoDamageOnTrack00
static int tolua_PX2_SkillActor_SetDoDamageOnTrack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
  bool damage = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDoDamageOnTrack'", NULL);
#endif
  {
   self->SetDoDamageOnTrack(damage);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDoDamageOnTrack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDoDamageOnTrack of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_IsDoDamageOnTrack00
static int tolua_PX2_SkillActor_IsDoDamageOnTrack00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDoDamageOnTrack'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDoDamageOnTrack();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDoDamageOnTrack'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Start of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_Start00
static int tolua_PX2_SkillActor_Start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Start'", NULL);
#endif
  {
   self->Start();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnStart of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_OnStart00
static int tolua_PX2_SkillActor_OnStart00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActor* self = (SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnStart'", NULL);
#endif
  {
   self->OnStart();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnStart'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsOver of class  SkillActor */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActor_IsOver00
static int tolua_PX2_SkillActor_IsOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActor* self = (const SkillActor*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsOver'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsOver();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_new00
static int tolua_PX2_SkillActorLink_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillActorLink* tolua_ret = (SkillActorLink*)  Mtolua_new((SkillActorLink)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillActorLink");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_new00_local
static int tolua_PX2_SkillActorLink_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SkillActorLink* tolua_ret = (SkillActorLink*)  Mtolua_new((SkillActorLink)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"SkillActorLink");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_delete00
static int tolua_PX2_SkillActorLink_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_Update00
static int tolua_PX2_SkillActorLink_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetTargetType of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_SetTargetType00
static int tolua_PX2_SkillActorLink_SetTargetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
  SkillActorLink::TargetType type = ((SkillActorLink::TargetType) (int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetTargetType'", NULL);
#endif
  {
   self->SetTargetType(type);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetTargetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTargetType of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_GetTargetType00
static int tolua_PX2_SkillActorLink_GetTargetType00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActorLink* self = (const SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTargetType'", NULL);
#endif
  {
   SkillActorLink::TargetType tolua_ret = (SkillActorLink::TargetType)  self->GetTargetType();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTargetType'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFromActorID of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_SetFromActorID00
static int tolua_PX2_SkillActorLink_SetFromActorID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
  int ID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFromActorID'", NULL);
#endif
  {
   self->SetFromActorID(ID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFromActorID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFromActorID of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_GetFromActorID00
static int tolua_PX2_SkillActorLink_GetFromActorID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActorLink* self = (const SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFromActorID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetFromActorID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFromActorID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetFromActorAnchor of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_SetFromActorAnchor00
static int tolua_PX2_SkillActorLink_SetFromActorAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
  const std::string anchor = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetFromActorAnchor'", NULL);
#endif
  {
   self->SetFromActorAnchor(anchor);
   tolua_pushcppstring(tolua_S,(const char*)anchor);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetFromActorAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetFromActorAnchor of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_GetFromActorAnchor00
static int tolua_PX2_SkillActorLink_GetFromActorAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActorLink* self = (const SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetFromActorAnchor'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetFromActorAnchor();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetFromActorAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetToActorID of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_SetToActorID00
static int tolua_PX2_SkillActorLink_SetToActorID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
  int ID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetToActorID'", NULL);
#endif
  {
   self->SetToActorID(ID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetToActorID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetToActorID of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_GetToActorID00
static int tolua_PX2_SkillActorLink_GetToActorID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActorLink* self = (const SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetToActorID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetToActorID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetToActorID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetToActorAnchor of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_SetToActorAnchor00
static int tolua_PX2_SkillActorLink_SetToActorAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
  const std::string anchor = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetToActorAnchor'", NULL);
#endif
  {
   self->SetToActorAnchor(anchor);
   tolua_pushcppstring(tolua_S,(const char*)anchor);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetToActorAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetToActorAnchor of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_GetToActorAnchor00
static int tolua_PX2_SkillActorLink_GetToActorAnchor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActorLink* self = (const SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetToActorAnchor'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetToActorAnchor();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetToActorAnchor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetToPosition of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_SetToPosition00
static int tolua_PX2_SkillActorLink_SetToPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
  const APoint* pos = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetToPosition'", NULL);
#endif
  {
   self->SetToPosition(*pos);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetToPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetToPosition of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_GetToPosition00
static int tolua_PX2_SkillActorLink_GetToPosition00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActorLink* self = (const SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetToPosition'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetToPosition();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetToPosition'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLinkSpeed of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_SetLinkSpeed00
static int tolua_PX2_SkillActorLink_SetLinkSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
  float speed = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLinkSpeed'", NULL);
#endif
  {
   self->SetLinkSpeed(speed);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLinkSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLinkSpeed of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_GetLinkSpeed00
static int tolua_PX2_SkillActorLink_GetLinkSpeed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActorLink* self = (const SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLinkSpeed'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetLinkSpeed();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLinkSpeed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Start of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_Start00
static int tolua_PX2_SkillActorLink_Start00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Start'", NULL);
#endif
  {
   self->Start();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Start'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnStart of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_OnStart00
static int tolua_PX2_SkillActorLink_OnStart00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnStart'", NULL);
#endif
  {
   self->OnStart();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnStart'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsLinked of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_IsLinked00
static int tolua_PX2_SkillActorLink_IsLinked00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActorLink* self = (const SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsLinked'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsLinked();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsLinked'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOver of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_SetOver00
static int tolua_PX2_SkillActorLink_SetOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SkillActorLink",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SkillActorLink* self = (SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
  bool over = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOver'", NULL);
#endif
  {
   self->SetOver(over);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsOver of class  SkillActorLink */
#ifndef TOLUA_DISABLE_tolua_PX2_SkillActorLink_IsOver00
static int tolua_PX2_SkillActorLink_IsOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const SkillActorLink",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const SkillActorLink* self = (const SkillActorLink*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsOver'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsOver();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_PX2_AffectObject_new00
static int tolua_PX2_AffectObject_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AffectObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AffectObject* tolua_ret = (AffectObject*)  Mtolua_new((AffectObject)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AffectObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_PX2_AffectObject_new00_local
static int tolua_PX2_AffectObject_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"AffectObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   AffectObject* tolua_ret = (AffectObject*)  Mtolua_new((AffectObject)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AffectObject");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_PX2_AffectObject_delete00
static int tolua_PX2_AffectObject_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"AffectObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AffectCharacter of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_get_AffectObject_AffectCharacter_ptr
static int tolua_get_AffectObject_AffectCharacter_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectCharacter'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->AffectCharacter,"Character");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AffectCharacter of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_set_AffectObject_AffectCharacter_ptr
static int tolua_set_AffectObject_AffectCharacter_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectCharacter'",NULL);
  if (!tolua_isusertype(tolua_S,2,"Character",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AffectCharacter = ((Character*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AffectSkill of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_get_AffectObject_AffectSkill_ptr
static int tolua_get_AffectObject_AffectSkill_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectSkill'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->AffectSkill,"Skill");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AffectSkill of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_set_AffectObject_AffectSkill_ptr
static int tolua_set_AffectObject_AffectSkill_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectSkill'",NULL);
  if (!tolua_isusertype(tolua_S,2,"Skill",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AffectSkill = ((Skill*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AffectSkillInstance of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_get_AffectObject_AffectSkillInstance_ptr
static int tolua_get_AffectObject_AffectSkillInstance_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectSkillInstance'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->AffectSkillInstance,"SkillInstance");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AffectSkillInstance of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_set_AffectObject_AffectSkillInstance_ptr
static int tolua_set_AffectObject_AffectSkillInstance_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectSkillInstance'",NULL);
  if (!tolua_isusertype(tolua_S,2,"SkillInstance",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AffectSkillInstance = ((SkillInstance*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AffectItem of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_get_AffectObject_AffectItem_ptr
static int tolua_get_AffectObject_AffectItem_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectItem'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->AffectItem,"Item");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AffectItem of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_set_AffectObject_AffectItem_ptr
static int tolua_set_AffectObject_AffectItem_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectItem'",NULL);
  if (!tolua_isusertype(tolua_S,2,"Item",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AffectItem = ((Item*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AffectBuf of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_get_AffectObject_AffectBuf_ptr
static int tolua_get_AffectObject_AffectBuf_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectBuf'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->AffectBuf,"Buf");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AffectBuf of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_set_AffectObject_AffectBuf_ptr
static int tolua_set_AffectObject_AffectBuf_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectBuf'",NULL);
  if (!tolua_isusertype(tolua_S,2,"Buf",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AffectBuf = ((Buf*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: AffectType of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_get_AffectObject_AffectType
static int tolua_get_AffectObject_AffectType(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->AffectType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: AffectType of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_set_AffectObject_AffectType
static int tolua_set_AffectObject_AffectType(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'AffectType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->AffectType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: Value of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_get_AffectObject_Value
static int tolua_get_AffectObject_Value(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Value'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->Value);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: Value of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_set_AffectObject_Value
static int tolua_set_AffectObject_Value(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'Value'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->Value = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LastAffectDoType of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_get_AffectObject_LastAffectDoType
static int tolua_get_AffectObject_LastAffectDoType(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LastAffectDoType'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LastAffectDoType);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LastAffectDoType of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_set_AffectObject_LastAffectDoType
static int tolua_set_AffectObject_LastAffectDoType(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LastAffectDoType'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LastAffectDoType = ((int)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: LastAffectDoTypeValue of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_get_AffectObject_LastAffectDoTypeValue
static int tolua_get_AffectObject_LastAffectDoTypeValue(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LastAffectDoTypeValue'",NULL);
#endif
  tolua_pushnumber(tolua_S,(lua_Number)self->LastAffectDoTypeValue);
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: LastAffectDoTypeValue of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_set_AffectObject_LastAffectDoTypeValue
static int tolua_set_AffectObject_LastAffectDoTypeValue(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'LastAffectDoTypeValue'",NULL);
  if (!tolua_isnumber(tolua_S,2,0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->LastAffectDoTypeValue = ((float)  tolua_tonumber(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* get function: BeAffectCharacter of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_get_AffectObject_BeAffectCharacter_ptr
static int tolua_get_AffectObject_BeAffectCharacter_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BeAffectCharacter'",NULL);
#endif
   tolua_pushusertype(tolua_S,(void*)self->BeAffectCharacter,"Character");
 return 1;
}
#endif //#ifndef TOLUA_DISABLE

/* set function: BeAffectCharacter of class  AffectObject */
#ifndef TOLUA_DISABLE_tolua_set_AffectObject_BeAffectCharacter_ptr
static int tolua_set_AffectObject_BeAffectCharacter_ptr(lua_State* tolua_S)
{
  AffectObject* self = (AffectObject*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  tolua_Error tolua_err;
  if (!self) tolua_error(tolua_S,"invalid 'self' in accessing variable 'BeAffectCharacter'",NULL);
  if (!tolua_isusertype(tolua_S,2,"Character",0,&tolua_err))
   tolua_error(tolua_S,"#vinvalid type in variable assignment.",&tolua_err);
#endif
  self->BeAffectCharacter = ((Character*)  tolua_tousertype(tolua_S,2,0))
;
 return 0;
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_new00
static int tolua_PX2_Character_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Character* tolua_ret = (Character*)  Mtolua_new((Character)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Character");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_new00_local
static int tolua_PX2_Character_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Character* tolua_ret = (Character*)  Mtolua_new((Character)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Character");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_delete00
static int tolua_PX2_Character_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Initlize of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_Initlize00
static int tolua_PX2_Character_Initlize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Initlize'", NULL);
#endif
  {
   self->Initlize();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Initlize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetMovableFilename of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetMovableFilename00
static int tolua_PX2_Character_SetMovableFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  bool shareVIM = ((bool)  tolua_toboolean(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetMovableFilename'", NULL);
#endif
  {
   self->SetMovableFilename(filename,shareVIM);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetMovableFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetLevel of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetLevel00
static int tolua_PX2_Character_SetLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int level = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetLevel'", NULL);
#endif
  {
   self->SetLevel(level);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetLevel of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetLevel00
static int tolua_PX2_Character_GetLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetLevel'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetLevel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetExp of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetExp00
static int tolua_PX2_Character_SetExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int exp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetExp'", NULL);
#endif
  {
   self->SetExp(exp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetExp of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetExp00
static int tolua_PX2_Character_GetExp00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetExp'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetExp();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetExp'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetExpCurLevel of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetExpCurLevel00
static int tolua_PX2_Character_GetExpCurLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetExpCurLevel'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetExpCurLevel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetExpCurLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBaseHPCurLevel of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetBaseHPCurLevel00
static int tolua_PX2_Character_SetBaseHPCurLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int hp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBaseHPCurLevel'", NULL);
#endif
  {
   self->SetBaseHPCurLevel(hp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBaseHPCurLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBaseHPCurLevel of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetBaseHPCurLevel00
static int tolua_PX2_Character_GetBaseHPCurLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBaseHPCurLevel'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetBaseHPCurLevel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBaseHPCurLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCurHPNoReduce of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetCurHPNoReduce00
static int tolua_PX2_Character_SetCurHPNoReduce00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  bool de = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCurHPNoReduce'", NULL);
#endif
  {
   self->SetCurHPNoReduce(de);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCurHPNoReduce'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsCurHPNoRecline of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_IsCurHPNoRecline00
static int tolua_PX2_Character_IsCurHPNoRecline00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsCurHPNoRecline'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsCurHPNoRecline();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsCurHPNoRecline'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCurHP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetCurHP00
static int tolua_PX2_Character_SetCurHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int hp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCurHP'", NULL);
#endif
  {
   self->SetCurHP(hp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCurHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddCurHP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddCurHP00
static int tolua_PX2_Character_AddCurHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int hp = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddCurHP'", NULL);
#endif
  {
   self->AddCurHP(hp);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddCurHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurHP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetCurHP00
static int tolua_PX2_Character_GetCurHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurHP'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCurHP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddMHP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddMHP00
static int tolua_PX2_Character_AddMHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string factorName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int modHP = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddMHP'", NULL);
#endif
  {
   self->AddMHP(factorName,modHP);
   tolua_pushcppstring(tolua_S,(const char*)factorName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddMHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveMHP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveMHP00
static int tolua_PX2_Character_RemoveMHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string factorName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveMHP'", NULL);
#endif
  {
   self->RemoveMHP(factorName);
   tolua_pushcppstring(tolua_S,(const char*)factorName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveMHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMMapHPs of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetMMapHPs00
static int tolua_PX2_Character_GetMMapHPs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMMapHPs'", NULL);
#endif
  {
   std::map<std::string,int> tolua_ret = (std::map<std::string,int>)  self->GetMMapHPs();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::map<std::string,int>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::map<std::string,int>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::map<std::string,int>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::map<std::string,int>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMMapHPs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CalMHP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_CalMHP00
static int tolua_PX2_Character_CalMHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CalMHP'", NULL);
#endif
  {
   self->CalMHP();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CalMHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMHP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetMHP00
static int tolua_PX2_Character_GetMHP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMHP'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetMHP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMHP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetHPPercent of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetHPPercent00
static int tolua_PX2_Character_GetHPPercent00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetHPPercent'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetHPPercent();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetHPPercent'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetBaseAPCurLevel of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetBaseAPCurLevel00
static int tolua_PX2_Character_SetBaseAPCurLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int ap = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetBaseAPCurLevel'", NULL);
#endif
  {
   self->SetBaseAPCurLevel(ap);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetBaseAPCurLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBaseAPCurLevel of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetBaseAPCurLevel00
static int tolua_PX2_Character_GetBaseAPCurLevel00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBaseAPCurLevel'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetBaseAPCurLevel();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBaseAPCurLevel'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCurAP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetCurAP00
static int tolua_PX2_Character_SetCurAP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int ap = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCurAP'", NULL);
#endif
  {
   self->SetCurAP(ap);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCurAP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurAP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetCurAP00
static int tolua_PX2_Character_GetCurAP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurAP'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetCurAP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurAP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddMAP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddMAP00
static int tolua_PX2_Character_AddMAP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string factorName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  int modAP = ((int)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddMAP'", NULL);
#endif
  {
   self->AddMAP(factorName,modAP);
   tolua_pushcppstring(tolua_S,(const char*)factorName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddMAP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveMAP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveMAP00
static int tolua_PX2_Character_RemoveMAP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string factorName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveMAP'", NULL);
#endif
  {
   self->RemoveMAP(factorName);
   tolua_pushcppstring(tolua_S,(const char*)factorName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveMAP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMMapAPs of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetMMapAPs00
static int tolua_PX2_Character_GetMMapAPs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMMapAPs'", NULL);
#endif
  {
   std::map<std::string,int> tolua_ret = (std::map<std::string,int>)  self->GetMMapAPs();
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::map<std::string,int>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::map<std::string,int>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::map<std::string,int>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::map<std::string,int>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMMapAPs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CalMAP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_CalMAP00
static int tolua_PX2_Character_CalMAP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CalMAP'", NULL);
#endif
  {
   self->CalMAP();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CalMAP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMAP of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetMAP00
static int tolua_PX2_Character_GetMAP00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMAP'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetMAP();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMAP'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetDead of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetDead00
static int tolua_PX2_Character_SetDead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  bool dead = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetDead'", NULL);
#endif
  {
   self->SetDead(dead);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetDead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Die of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_Die00
static int tolua_PX2_Character_Die00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Die'", NULL);
#endif
  {
   self->Die();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Die'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsDead of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_IsDead00
static int tolua_PX2_Character_IsDead00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsDead'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsDead();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsDead'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_OnDie of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetScriptHandler_OnDie00
static int tolua_PX2_Character_SetScriptHandler_OnDie00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_OnDie'", NULL);
#endif
  {
   self->SetScriptHandler_OnDie(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_OnDie'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_OnDie of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetScriptHandler_OnDie00
static int tolua_PX2_Character_GetScriptHandler_OnDie00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_OnDie'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_OnDie();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_OnDie'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddScriptHandler_OnDie of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddScriptHandler_OnDie00
static int tolua_PX2_Character_AddScriptHandler_OnDie00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddScriptHandler_OnDie'", NULL);
#endif
  {
   self->AddScriptHandler_OnDie(name,handler);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddScriptHandler_OnDie'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveScriptHandler_OnDie of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveScriptHandler_OnDie00
static int tolua_PX2_Character_RemoveScriptHandler_OnDie00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveScriptHandler_OnDie'", NULL);
#endif
  {
   self->RemoveScriptHandler_OnDie(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveScriptHandler_OnDie'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddAnim of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddAnim00
static int tolua_PX2_Character_AddAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Animation* anim = ((Animation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddAnim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddAnim(anim);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasAnim of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_HasAnim00
static int tolua_PX2_Character_HasAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Animation* anim = ((Animation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasAnim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasAnim(anim);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAnim of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveAnim00
static int tolua_PX2_Character_RemoveAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Animation* anim = ((Animation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAnim'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveAnim(anim);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllAnims of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveAllAnims00
static int tolua_PX2_Character_RemoveAllAnims00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllAnims'", NULL);
#endif
  {
   self->RemoveAllAnims();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllAnims'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumAnims of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetNumAnims00
static int tolua_PX2_Character_GetNumAnims00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumAnims'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumAnims();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumAnims'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnim of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetAnim00
static int tolua_PX2_Character_GetAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnim'", NULL);
#endif
  {
   Animation* tolua_ret = (Animation*)  self->GetAnim(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnimByName of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetAnimByName00
static int tolua_PX2_Character_GetAnimByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnimByName'", NULL);
#endif
  {
   Animation* tolua_ret = (Animation*)  self->GetAnimByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnimByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetStandAnim of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetStandAnim00
static int tolua_PX2_Character_GetStandAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetStandAnim'", NULL);
#endif
  {
   Animation* tolua_ret = (Animation*)  self->GetStandAnim();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetStandAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlayAnim of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_PlayAnim00
static int tolua_PX2_Character_PlayAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Animation* anim = ((Animation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlayAnim'", NULL);
#endif
  {
   self->PlayAnim(anim);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlayAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StopAnim of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_StopAnim00
static int tolua_PX2_Character_StopAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Animation",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Animation* anim = ((Animation*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'StopAnim'", NULL);
#endif
  {
   self->StopAnim(anim);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StopAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StopCurAnim of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_StopCurAnim00
static int tolua_PX2_Character_StopCurAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'StopCurAnim'", NULL);
#endif
  {
   self->StopCurAnim();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StopCurAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlayCurAnim of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_PlayCurAnim00
static int tolua_PX2_Character_PlayCurAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlayCurAnim'", NULL);
#endif
  {
   self->PlayCurAnim();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlayCurAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlayAnimByName of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_PlayAnimByName00
static int tolua_PX2_Character_PlayAnimByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlayAnimByName'", NULL);
#endif
  {
   self->PlayAnimByName(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlayAnimByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurPlayingAnim of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetCurPlayingAnim00
static int tolua_PX2_Character_GetCurPlayingAnim00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurPlayingAnim'", NULL);
#endif
  {
   Animation* tolua_ret = (Animation*)  self->GetCurPlayingAnim();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Animation");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurPlayingAnim'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsHasAnimPlaying of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_IsHasAnimPlaying00
static int tolua_PX2_Character_IsHasAnimPlaying00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsHasAnimPlaying'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsHasAnimPlaying();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsHasAnimPlaying'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetModelTagName of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetModelTagName00
static int tolua_PX2_Character_SetModelTagName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string modelTagName = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetModelTagName'", NULL);
#endif
  {
   self->SetModelTagName(modelTagName);
   tolua_pushcppstring(tolua_S,(const char*)modelTagName);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetModelTagName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetModelTagName of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetModelTagName00
static int tolua_PX2_Character_GetModelTagName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetModelTagName'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetModelTagName();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetModelTagName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkinCtrls of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetSkinCtrls00
static int tolua_PX2_Character_GetSkinCtrls00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkinCtrls'", NULL);
#endif
  {
   std::list<SkinControllerPtr>& tolua_ret = (std::list<SkinControllerPtr>&)  self->GetSkinCtrls();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"std::list<SkinControllerPtr>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkinCtrls'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddItem of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddItem00
static int tolua_PX2_Character_AddItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Item* item = ((Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddItem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddItem(item);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasItem of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_HasItem00
static int tolua_PX2_Character_HasItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Item* item = ((Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasItem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasItem(item);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumItems of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetNumItems00
static int tolua_PX2_Character_GetNumItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumItems'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumItems();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetItemByID of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetItemByID00
static int tolua_PX2_Character_GetItemByID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetItemByID'", NULL);
#endif
  {
   Item* tolua_ret = (Item*)  self->GetItemByID(id);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Item");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetItemByID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetItem of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetItem00
static int tolua_PX2_Character_GetItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetItem'", NULL);
#endif
  {
   Item* tolua_ret = (Item*)  self->GetItem(index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Item");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveItem of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveItem00
static int tolua_PX2_Character_RemoveItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Item* item = ((Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveItem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveItem(item);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllItems of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveAllItems00
static int tolua_PX2_Character_RemoveAllItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllItems'", NULL);
#endif
  {
   self->RemoveAllItems();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: EquipItem of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_EquipItem00
static int tolua_PX2_Character_EquipItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Item* item = ((Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'EquipItem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->EquipItem(item);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'EquipItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumItemsEquipped of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetNumItemsEquipped00
static int tolua_PX2_Character_GetNumItemsEquipped00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumItemsEquipped'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumItemsEquipped();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumItemsEquipped'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetEquippedItem of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetEquippedItem00
static int tolua_PX2_Character_GetEquippedItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int index = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetEquippedItem'", NULL);
#endif
  {
   Item* tolua_ret = (Item*)  self->GetEquippedItem(index);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Item");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetEquippedItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnEquipItem of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_UnEquipItem00
static int tolua_PX2_Character_UnEquipItem00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Item",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Item* item = ((Item*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UnEquipItem'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->UnEquipItem(item);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UnEquipItem'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: UnEquipAllItems of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_UnEquipAllItems00
static int tolua_PX2_Character_UnEquipAllItems00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'UnEquipAllItems'", NULL);
#endif
  {
   self->UnEquipAllItems();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'UnEquipAllItems'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddSkill of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddSkill00
static int tolua_PX2_Character_AddSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Skill* skill = ((Skill*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddSkill'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddSkill(skill);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasSkill of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_HasSkill00
static int tolua_PX2_Character_HasSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Skill* skill = ((Skill*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasSkill'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasSkill(skill);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumSkills of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetNumSkills00
static int tolua_PX2_Character_GetNumSkills00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumSkills'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumSkills();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumSkills'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillByID of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetSkillByID00
static int tolua_PX2_Character_GetSkillByID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillByID'", NULL);
#endif
  {
   Skill* tolua_ret = (Skill*)  self->GetSkillByID(id);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Skill");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillByID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillByTypeID of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetSkillByTypeID00
static int tolua_PX2_Character_GetSkillByTypeID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int typeID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillByTypeID'", NULL);
#endif
  {
   Skill* tolua_ret = (Skill*)  self->GetSkillByTypeID(typeID);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Skill");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillByTypeID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkillByName of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetSkillByName00
static int tolua_PX2_Character_GetSkillByName00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkillByName'", NULL);
#endif
  {
   Skill* tolua_ret = (Skill*)  self->GetSkillByName(name);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Skill");
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkillByName'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDefSkill of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetDefSkill00
static int tolua_PX2_Character_GetDefSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDefSkill'", NULL);
#endif
  {
   Skill* tolua_ret = (Skill*)  self->GetDefSkill();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Skill");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDefSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSkill of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetSkill00
static int tolua_PX2_Character_GetSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSkill'", NULL);
#endif
  {
   Skill* tolua_ret = (Skill*)  self->GetSkill(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Skill");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveSkill of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveSkill00
static int tolua_PX2_Character_RemoveSkill00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Skill",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Skill* skill = ((Skill*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveSkill'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveSkill(skill);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveSkill'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllSkills of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveAllSkills00
static int tolua_PX2_Character_RemoveAllSkills00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllSkills'", NULL);
#endif
  {
   self->RemoveAllSkills();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllSkills'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAnySkillHasInstance of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_IsAnySkillHasInstance00
static int tolua_PX2_Character_IsAnySkillHasInstance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAnySkillHasInstance'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAnySkillHasInstance();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAnySkillHasInstance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsAllSkillCallOver of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_IsAllSkillCallOver00
static int tolua_PX2_Character_IsAllSkillCallOver00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsAllSkillCallOver'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsAllSkillCallOver();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsAllSkillCallOver'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ResetAllSkillsCD of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_ResetAllSkillsCD00
static int tolua_PX2_Character_ResetAllSkillsCD00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ResetAllSkillsCD'", NULL);
#endif
  {
   self->ResetAllSkillsCD();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ResetAllSkillsCD'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetValidSkills of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetValidSkills00
static int tolua_PX2_Character_GetValidSkills00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"const Character",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,6,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,7,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const Character* target = ((const Character*)  tolua_tousertype(tolua_S,2,0));
  bool useTrigerDis = ((bool)  tolua_toboolean(tolua_S,3,0));
  int positive = ((int)  tolua_tonumber(tolua_S,4,0));
  int needTarget = ((int)  tolua_tonumber(tolua_S,5,0));
  int cdOK = ((int)  tolua_tonumber(tolua_S,6,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetValidSkills'", NULL);
#endif
  {
   std::list<Skill*> tolua_ret = (std::list<Skill*>)  self->GetValidSkills(target,useTrigerDis,positive,needTarget,cdOK);
   {
#ifdef __cplusplus
    void* tolua_obj = Mtolua_new((std::list<Skill*>)(tolua_ret));
     tolua_pushusertype(tolua_S,tolua_obj,"std::list<Skill*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#else
    void* tolua_obj = tolua_copy(tolua_S,(void*)&tolua_ret,sizeof(std::list<Skill*>));
     tolua_pushusertype(tolua_S,tolua_obj,"std::list<Skill*>");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
#endif
   }
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetValidSkills'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddBufClassExcept of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddBufClassExcept00
static int tolua_PX2_Character_AddBufClassExcept00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string except = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddBufClassExcept'", NULL);
#endif
  {
   self->AddBufClassExcept(name,except);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)except);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddBufClassExcept'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveBufClassExcept of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveBufClassExcept00
static int tolua_PX2_Character_RemoveBufClassExcept00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveBufClassExcept'", NULL);
#endif
  {
   self->RemoveBufClassExcept(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveBufClassExcept'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllBufClassExcepts of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveAllBufClassExcepts00
static int tolua_PX2_Character_RemoveAllBufClassExcepts00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllBufClassExcepts'", NULL);
#endif
  {
   self->RemoveAllBufClassExcepts();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllBufClassExcepts'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasBufClassExcept of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_HasBufClassExcept00
static int tolua_PX2_Character_HasBufClassExcept00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string except = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasBufClassExcept'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasBufClassExcept(except);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)except);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasBufClassExcept'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddBuf of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddBuf00
static int tolua_PX2_Character_AddBuf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Buf* buf = ((Buf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddBuf'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->AddBuf(buf);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddBuf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasBuf of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_HasBuf00
static int tolua_PX2_Character_HasBuf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Buf* buf = ((Buf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasBuf'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasBuf(buf);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasBuf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasBuf of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_HasBuf01
static int tolua_PX2_Character_HasBuf01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasBuf'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasBuf(name);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
tolua_lerror:
 return tolua_PX2_Character_HasBuf00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasBufClass of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_HasBufClass00
static int tolua_PX2_Character_HasBufClass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string classStr = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasBufClass'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasBufClass(classStr);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)classStr);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'HasBufClass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: HasBufClass of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_HasBufClass01
static int tolua_PX2_Character_HasBufClass01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Buf* buf = ((Buf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'HasBufClass'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->HasBufClass(buf);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Character_HasBufClass00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBufByClass of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetBufByClass00
static int tolua_PX2_Character_GetBufByClass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBufByClass'", NULL);
#endif
  {
   Buf* tolua_ret = (Buf*)  self->GetBufByClass(className);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Buf");
   tolua_pushcppstring(tolua_S,(const char*)className);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBufByClass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumBufsOfClass of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetNumBufsOfClass00
static int tolua_PX2_Character_GetNumBufsOfClass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumBufsOfClass'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumBufsOfClass(className);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)className);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumBufsOfClass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveBufsOfClass of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveBufsOfClass00
static int tolua_PX2_Character_RemoveBufsOfClass00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string className = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveBufsOfClass'", NULL);
#endif
  {
   self->RemoveBufsOfClass(className);
   tolua_pushcppstring(tolua_S,(const char*)className);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveBufsOfClass'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumBufs of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetNumBufs00
static int tolua_PX2_Character_GetNumBufs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumBufs'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumBufs();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumBufs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetBufs of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetBufs00
static int tolua_PX2_Character_GetBufs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetBufs'", NULL);
#endif
  {
   Buf* tolua_ret = (Buf*)  self->GetBufs(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Buf");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetBufs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveBuf of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveBuf00
static int tolua_PX2_Character_RemoveBuf00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Buf",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  Buf* buf = ((Buf*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveBuf'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveBuf(buf);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveBuf'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveAllBufs of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveAllBufs00
static int tolua_PX2_Character_RemoveAllBufs00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveAllBufs'", NULL);
#endif
  {
   self->RemoveAllBufs();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveAllBufs'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Freeze of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_Freeze00
static int tolua_PX2_Character_Freeze00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  bool enable = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Freeze'", NULL);
#endif
  {
   self->Freeze(enable);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Freeze'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsFreezed of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_IsFreezed00
static int tolua_PX2_Character_IsFreezed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsFreezed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsFreezed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsFreezed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetWatchDistance of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetWatchDistance00
static int tolua_PX2_Character_SetWatchDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  float dist = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetWatchDistance'", NULL);
#endif
  {
   self->SetWatchDistance(dist);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetWatchDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetWatchDistance of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetWatchDistance00
static int tolua_PX2_Character_GetWatchDistance00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetWatchDistance'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetWatchDistance();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetWatchDistance'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCanBeAimed of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetCanBeAimed00
static int tolua_PX2_Character_SetCanBeAimed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  bool can = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCanBeAimed'", NULL);
#endif
  {
   self->SetCanBeAimed(can);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCanBeAimed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsCanBeAimed of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_IsCanBeAimed00
static int tolua_PX2_Character_IsCanBeAimed00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsCanBeAimed'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsCanBeAimed();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsCanBeAimed'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAimTarget of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetAimTarget00
static int tolua_PX2_Character_SetAimTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  int targetID = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAimTarget'", NULL);
#endif
  {
   self->SetAimTarget(targetID);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAimTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAimTarget of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetAimTarget00
static int tolua_PX2_Character_GetAimTarget00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAimTarget'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetAimTarget();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAimTarget'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAimTargetCharacter of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetAimTargetCharacter00
static int tolua_PX2_Character_GetAimTargetCharacter00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAimTargetCharacter'", NULL);
#endif
  {
   Character* tolua_ret = (Character*)  self->GetAimTargetCharacter();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Character");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAimTargetCharacter'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAimTargetCharacterAlive of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetAimTargetCharacterAlive00
static int tolua_PX2_Character_GetAimTargetCharacterAlive00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAimTargetCharacterAlive'", NULL);
#endif
  {
   Character* tolua_ret = (Character*)  self->GetAimTargetCharacterAlive();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Character");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAimTargetCharacterAlive'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumAimingMe of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetNumAimingMe00
static int tolua_PX2_Character_GetNumAimingMe00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumAimingMe'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumAimingMe();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumAimingMe'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: BeAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_BeAffect00
static int tolua_PX2_Character_BeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AffectObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  AffectObject* ao = ((AffectObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'BeAffect'", NULL);
#endif
  {
   self->BeAffect(ao);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'BeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnBeAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_OnBeAffect00
static int tolua_PX2_Character_OnBeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AffectObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  AffectObject* ao = ((AffectObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnBeAffect'", NULL);
#endif
  {
   self->OnBeAffect(ao);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnBeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnSucAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_OnSucAffect00
static int tolua_PX2_Character_OnSucAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AffectObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  AffectObject* ao = ((AffectObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnSucAffect'", NULL);
#endif
  {
   self->OnSucAffect(ao);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnSucAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCurAffectMeObject of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetCurAffectMeObject00
static int tolua_PX2_Character_SetCurAffectMeObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AffectObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  AffectObject* ao = ((AffectObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCurAffectMeObject'", NULL);
#endif
  {
   self->SetCurAffectMeObject(ao);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCurAffectMeObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurAffectMeObject of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetCurAffectMeObject00
static int tolua_PX2_Character_GetCurAffectMeObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurAffectMeObject'", NULL);
#endif
  {
   AffectObject* tolua_ret = (AffectObject*)  self->GetCurAffectMeObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AffectObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurAffectMeObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCurSucAffectObject of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetCurSucAffectObject00
static int tolua_PX2_Character_SetCurSucAffectObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"AffectObject",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  AffectObject* ao = ((AffectObject*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCurSucAffectObject'", NULL);
#endif
  {
   self->SetCurSucAffectObject(ao);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCurSucAffectObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCurSucAffectObject of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetCurSucAffectObject00
static int tolua_PX2_Character_GetCurSucAffectObject00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCurSucAffectObject'", NULL);
#endif
  {
   AffectObject* tolua_ret = (AffectObject*)  self->GetCurSucAffectObject();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AffectObject");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCurSucAffectObject'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_OnBeAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetScriptHandler_OnBeAffect00
static int tolua_PX2_Character_SetScriptHandler_OnBeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_OnBeAffect'", NULL);
#endif
  {
   self->SetScriptHandler_OnBeAffect(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_OnBeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_OnBeAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetScriptHandler_OnBeAffect00
static int tolua_PX2_Character_GetScriptHandler_OnBeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_OnBeAffect'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_OnBeAffect();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_OnBeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddScriptHandler_OnBeAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddScriptHandler_OnBeAffect00
static int tolua_PX2_Character_AddScriptHandler_OnBeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddScriptHandler_OnBeAffect'", NULL);
#endif
  {
   self->AddScriptHandler_OnBeAffect(name,handler);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddScriptHandler_OnBeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveScriptHandler_OnBeAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveScriptHandler_OnBeAffect00
static int tolua_PX2_Character_RemoveScriptHandler_OnBeAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveScriptHandler_OnBeAffect'", NULL);
#endif
  {
   self->RemoveScriptHandler_OnBeAffect(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveScriptHandler_OnBeAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_OnSucAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetScriptHandler_OnSucAffect00
static int tolua_PX2_Character_SetScriptHandler_OnSucAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_OnSucAffect'", NULL);
#endif
  {
   self->SetScriptHandler_OnSucAffect(handler);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_OnSucAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_OnSucAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetScriptHandler_OnSucAffect00
static int tolua_PX2_Character_GetScriptHandler_OnSucAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_OnSucAffect'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetScriptHandler_OnSucAffect();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_OnSucAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddScriptHandler_OnSucAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_AddScriptHandler_OnSucAffect00
static int tolua_PX2_Character_AddScriptHandler_OnSucAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string handler = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddScriptHandler_OnSucAffect'", NULL);
#endif
  {
   self->AddScriptHandler_OnSucAffect(name,handler);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)handler);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddScriptHandler_OnSucAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveScriptHandler_OnSucAffect of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_RemoveScriptHandler_OnSucAffect00
static int tolua_PX2_Character_RemoveScriptHandler_OnSucAffect00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveScriptHandler_OnSucAffect'", NULL);
#endif
  {
   self->RemoveScriptHandler_OnSucAffect(name);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveScriptHandler_OnSucAffect'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetScriptHandler_OnSucAffectParam of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_SetScriptHandler_OnSucAffectParam00
static int tolua_PX2_Character_SetScriptHandler_OnSucAffectParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float param = ((float)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetScriptHandler_OnSucAffectParam'", NULL);
#endif
  {
   self->SetScriptHandler_OnSucAffectParam(name,param);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetScriptHandler_OnSucAffectParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetScriptHandler_OnSucAffectParam of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetScriptHandler_OnSucAffectParam00
static int tolua_PX2_Character_GetScriptHandler_OnSucAffectParam00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetScriptHandler_OnSucAffectParam'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetScriptHandler_OnSucAffectParam(name);
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetScriptHandler_OnSucAffectParam'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CreateStateMachines of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_CreateStateMachines00
static int tolua_PX2_Character_CreateStateMachines00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character* self = (Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CreateStateMachines'", NULL);
#endif
  {
   self->CreateStateMachines();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CreateStateMachines'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActionSM of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetActionSM00
static int tolua_PX2_Character_GetActionSM00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActionSM'", NULL);
#endif
  {
   StateMachine<Character>* tolua_ret = (StateMachine<Character>*)  self->GetActionSM();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StateMachine<Character>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActionSM'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetMovementSM of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetMovementSM00
static int tolua_PX2_Character_GetMovementSM00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetMovementSM'", NULL);
#endif
  {
   StateMachine<Character>* tolua_ret = (StateMachine<Character>*)  self->GetMovementSM();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StateMachine<Character>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetMovementSM'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetPostureSM of class  Character */
#ifndef TOLUA_DISABLE_tolua_PX2_Character_GetPostureSM00
static int tolua_PX2_Character_GetPostureSM00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character* self = (const Character*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetPostureSM'", NULL);
#endif
  {
   StateMachine<Character>* tolua_ret = (StateMachine<Character>*)  self->GetPostureSM();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"StateMachine<Character>");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetPostureSM'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_new00
static int tolua_PX2_Character2DFrames8_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Character2DFrames8* tolua_ret = (Character2DFrames8*)  Mtolua_new((Character2DFrames8)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Character2DFrames8");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_new00_local
static int tolua_PX2_Character2DFrames8_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Character2DFrames8* tolua_ret = (Character2DFrames8*)  Mtolua_new((Character2DFrames8)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Character2DFrames8");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_delete00
static int tolua_PX2_Character2DFrames8_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_Update00
static int tolua_PX2_Character2DFrames8_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActorNode of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_GetActorNode00
static int tolua_PX2_Character2DFrames8_GetActorNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActorNode'", NULL);
#endif
  {
   Node* tolua_ret = (Node*)  self->GetActorNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActorNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnimNode of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_GetAnimNode00
static int tolua_PX2_Character2DFrames8_GetAnimNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnimNode'", NULL);
#endif
  {
   Node* tolua_ret = (Node*)  self->GetAnimNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Node");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnimNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShowSelfRadiusRange of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_ShowSelfRadiusRange00
static int tolua_PX2_Character2DFrames8_ShowSelfRadiusRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShowSelfRadiusRange'", NULL);
#endif
  {
   self->ShowSelfRadiusRange(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShowSelfRadiusRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShowSelfRadiusRange of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_IsShowSelfRadiusRange00
static int tolua_PX2_Character2DFrames8_IsShowSelfRadiusRange00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character2DFrames8* self = (const Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShowSelfRadiusRange'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShowSelfRadiusRange();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShowSelfRadiusRange'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShowHeadingDir of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_ShowHeadingDir00
static int tolua_PX2_Character2DFrames8_ShowHeadingDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShowHeadingDir'", NULL);
#endif
  {
   self->ShowHeadingDir(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShowHeadingDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsShowHeadingDir of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_IsShowHeadingDir00
static int tolua_PX2_Character2DFrames8_IsShowHeadingDir00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character2DFrames8* self = (const Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsShowHeadingDir'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsShowHeadingDir();
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsShowHeadingDir'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSelfRadius of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_SetSelfRadius00
static int tolua_PX2_Character2DFrames8_SetSelfRadius00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  float radius = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSelfRadius'", NULL);
#endif
  {
   self->SetSelfRadius(radius);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSelfRadius'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHeight of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_SetHeight00
static int tolua_PX2_Character2DFrames8_SetHeight00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  float height = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHeight'", NULL);
#endif
  {
   self->SetHeight(height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHeight'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetOffset of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_SetOffset00
static int tolua_PX2_Character2DFrames8_SetOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  const APoint* off = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetOffset'", NULL);
#endif
  {
   self->SetOffset(*off);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetOffset of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_GetOffset00
static int tolua_PX2_Character2DFrames8_GetOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character2DFrames8* self = (const Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetOffset'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetOffset();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAnimSize of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_SetAnimSize00
static int tolua_PX2_Character2DFrames8_SetAnimSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  float size = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAnimSize'", NULL);
#endif
  {
   self->SetAnimSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAnimSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAnimSize of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_GetAnimSize00
static int tolua_PX2_Character2DFrames8_GetAnimSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character2DFrames8* self = (const Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAnimSize'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetAnimSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAnimSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetShadowFilename of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_SetShadowFilename00
static int tolua_PX2_Character2DFrames8_SetShadowFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetShadowFilename'", NULL);
#endif
  {
   self->SetShadowFilename(filename);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetShadowFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetShadowFilename of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_GetShadowFilename00
static int tolua_PX2_Character2DFrames8_GetShadowFilename00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character2DFrames8* self = (const Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetShadowFilename'", NULL);
#endif
  {
   const std::string tolua_ret = (const std::string)  self->GetShadowFilename();
   tolua_pushcppstring(tolua_S,(const char*)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetShadowFilename'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetShadowSize of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_SetShadowSize00
static int tolua_PX2_Character2DFrames8_SetShadowSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  float size = ((float)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetShadowSize'", NULL);
#endif
  {
   self->SetShadowSize(size);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetShadowSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetShadowSize of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_GetShadowSize00
static int tolua_PX2_Character2DFrames8_GetShadowSize00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetShadowSize'", NULL);
#endif
  {
   float tolua_ret = (float)  self->GetShadowSize();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetShadowSize'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetAttackFrontNodeOffset of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_SetAttackFrontNodeOffset00
static int tolua_PX2_Character2DFrames8_SetAttackFrontNodeOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const APoint",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  const APoint* off = ((const APoint*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetAttackFrontNodeOffset'", NULL);
#endif
  {
   self->SetAttackFrontNodeOffset(*off);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetAttackFrontNodeOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetAttackFrontNodeOffset of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_GetAttackFrontNodeOffset00
static int tolua_PX2_Character2DFrames8_GetAttackFrontNodeOffset00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Character2DFrames8* self = (const Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetAttackFrontNodeOffset'", NULL);
#endif
  {
   const APoint& tolua_ret = (const APoint&)  self->GetAttackFrontNodeOffset();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"const APoint");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetAttackFrontNodeOffset'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetHeading of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_SetHeading00
static int tolua_PX2_Character2DFrames8_SetHeading00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"const AVector",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  const AVector* heading = ((const AVector*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetHeading'", NULL);
#endif
  {
   self->SetHeading(*heading);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetHeading'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Die of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_Die00
static int tolua_PX2_Character2DFrames8_Die00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Die'", NULL);
#endif
  {
   self->Die();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Die'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SaveToXMLNode of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_SaveToXMLNode00
static int tolua_PX2_Character2DFrames8_SaveToXMLNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"XMLNode",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  XMLNode nodeParent = *((XMLNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SaveToXMLNode'", NULL);
#endif
  {
   self->SaveToXMLNode(nodeParent);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SaveToXMLNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: LoadFromXMLNode of class  Character2DFrames8 */
#ifndef TOLUA_DISABLE_tolua_PX2_Character2DFrames8_LoadFromXMLNode00
static int tolua_PX2_Character2DFrames8_LoadFromXMLNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Character2DFrames8",0,&tolua_err) ||
     (tolua_isvaluenil(tolua_S,2,&tolua_err) || !tolua_isusertype(tolua_S,2,"XMLNode",0,&tolua_err)) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Character2DFrames8* self = (Character2DFrames8*)  tolua_tousertype(tolua_S,1,0);
  XMLNode node = *((XMLNode*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'LoadFromXMLNode'", NULL);
#endif
  {
   self->LoadFromXMLNode(node);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'LoadFromXMLNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_new00
static int tolua_PX2_Scene_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Scene* tolua_ret = (Scene*)  Mtolua_new((Scene)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Scene");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_new00_local
static int tolua_PX2_Scene_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Scene* tolua_ret = (Scene*)  Mtolua_new((Scene)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Scene");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_delete00
static int tolua_PX2_Scene_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_Update00
static int tolua_PX2_Scene_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetCameraActor of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_SetCameraActor00
static int tolua_PX2_Scene_SetCameraActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"CameraActor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
  CameraActor* camActor = ((CameraActor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetCameraActor'", NULL);
#endif
  {
   self->SetCameraActor(camActor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetCameraActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetCameraActor of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_GetCameraActor00
static int tolua_PX2_Scene_GetCameraActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetCameraActor'", NULL);
#endif
  {
   CameraActor* tolua_ret = (CameraActor*)  self->GetCameraActor();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"CameraActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetCameraActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetSceneID of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_SetSceneID00
static int tolua_PX2_Scene_SetSceneID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
  int id = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetSceneID'", NULL);
#endif
  {
   self->SetSceneID(id);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetSceneID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSceneID of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_GetSceneID00
static int tolua_PX2_Scene_GetSceneID00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSceneID'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetSceneID();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSceneID'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSceneNode of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_GetSceneNode00
static int tolua_PX2_Scene_GetSceneNode00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetSceneNode'", NULL);
#endif
  {
   PX2::Node* tolua_ret = (PX2::Node*)  self->GetSceneNode();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"PX2::Node");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSceneNode'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: SetViewPort of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_SetViewPort00
static int tolua_PX2_Scene_SetViewPort00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
  int xPosition = ((int)  tolua_tonumber(tolua_S,2,0));
  int yPosition = ((int)  tolua_tonumber(tolua_S,3,0));
  int width = ((int)  tolua_tonumber(tolua_S,4,0));
  int height = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'SetViewPort'", NULL);
#endif
  {
   self->SetViewPort(xPosition,yPosition,width,height);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'SetViewPort'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetViewport of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_GetViewport00
static int tolua_PX2_Scene_GetViewport00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"const Scene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,5,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  const Scene* self = (const Scene*)  tolua_tousertype(tolua_S,1,0);
  int xPosition = ((int)  tolua_tonumber(tolua_S,2,0));
  int yPosition = ((int)  tolua_tonumber(tolua_S,3,0));
  int width = ((int)  tolua_tonumber(tolua_S,4,0));
  int height = ((int)  tolua_tonumber(tolua_S,5,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetViewport'", NULL);
#endif
  {
   self->GetViewport(xPosition,yPosition,width,height);
   tolua_pushnumber(tolua_S,(lua_Number)xPosition);
   tolua_pushnumber(tolua_S,(lua_Number)yPosition);
   tolua_pushnumber(tolua_S,(lua_Number)width);
   tolua_pushnumber(tolua_S,(lua_Number)height);
  }
 }
 return 4;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetViewport'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: CallRendererSetViewport of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_CallRendererSetViewport00
static int tolua_PX2_Scene_CallRendererSetViewport00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'CallRendererSetViewport'", NULL);
#endif
  {
   self->CallRendererSetViewport();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'CallRendererSetViewport'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: AddActor of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_AddActor00
static int tolua_PX2_Scene_AddActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Actor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
  Actor* actor = ((Actor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'AddActor'", NULL);
#endif
  {
   self->AddActor(actor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'AddActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: RemoveActor of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_RemoveActor00
static int tolua_PX2_Scene_RemoveActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Actor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
  Actor* actor = ((Actor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'RemoveActor'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->RemoveActor(actor);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'RemoveActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: IsActorIn of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_IsActorIn00
static int tolua_PX2_Scene_IsActorIn00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Actor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
  Actor* actor = ((Actor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'IsActorIn'", NULL);
#endif
  {
   bool tolua_ret = (bool)  self->IsActorIn(actor);
   tolua_pushboolean(tolua_S,(bool)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'IsActorIn'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetNumActors of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_GetNumActors00
static int tolua_PX2_Scene_GetNumActors00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetNumActors'", NULL);
#endif
  {
   int tolua_ret = (int)  self->GetNumActors();
   tolua_pushnumber(tolua_S,(lua_Number)tolua_ret);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetNumActors'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActor of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_GetActor00
static int tolua_PX2_Scene_GetActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
  int i = ((int)  tolua_tonumber(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActor'", NULL);
#endif
  {
   Actor* tolua_ret = (Actor*)  self->GetActor(i);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Actor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetActor of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_GetActor01
static int tolua_PX2_Scene_GetActor01(lua_State* tolua_S)
{
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"PX2::Movable",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
  PX2::Movable* object = ((PX2::Movable*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetActor'", NULL);
#endif
  {
   Actor* tolua_ret = (Actor*)  self->GetActor(object);
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Actor");
  }
 }
 return 1;
tolua_lerror:
 return tolua_PX2_Scene_GetActor00(tolua_S);
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShowHelpMovables of class  Scene */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene_ShowHelpMovables00
static int tolua_PX2_Scene_ShowHelpMovables00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene* self = (Scene*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShowHelpMovables'", NULL);
#endif
  {
   self->ShowHelpMovables(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShowHelpMovables'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new of class  Scene3D */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene3D_new00
static int tolua_PX2_Scene3D_new00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Scene3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Scene3D* tolua_ret = (Scene3D*)  Mtolua_new((Scene3D)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Scene3D");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: new_local of class  Scene3D */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene3D_new00_local
static int tolua_PX2_Scene3D_new00_local(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"Scene3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   Scene3D* tolua_ret = (Scene3D*)  Mtolua_new((Scene3D)());
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"Scene3D");
    tolua_register_gc(tolua_S,lua_gettop(tolua_S));
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'new'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: delete of class  Scene3D */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene3D_delete00
static int tolua_PX2_Scene3D_delete00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene3D* self = (Scene3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'delete'", NULL);
#endif
  Mtolua_delete(self);
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'delete'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  Scene3D */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene3D_Update00
static int tolua_PX2_Scene3D_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene3D",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene3D* self = (Scene3D*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: OnAddedActor of class  Scene3D */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene3D_OnAddedActor00
static int tolua_PX2_Scene3D_OnAddedActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene3D",0,&tolua_err) ||
     !tolua_isusertype(tolua_S,2,"Actor",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene3D* self = (Scene3D*)  tolua_tousertype(tolua_S,1,0);
  Actor* actor = ((Actor*)  tolua_tousertype(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'OnAddedActor'", NULL);
#endif
  {
   self->OnAddedActor(actor);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'OnAddedActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: ShowHelpMovables of class  Scene3D */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene3D_ShowHelpMovables00
static int tolua_PX2_Scene3D_ShowHelpMovables00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene3D",0,&tolua_err) ||
     !tolua_isboolean(tolua_S,2,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,3,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene3D* self = (Scene3D*)  tolua_tousertype(tolua_S,1,0);
  bool show = ((bool)  tolua_toboolean(tolua_S,2,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'ShowHelpMovables'", NULL);
#endif
  {
   self->ShowHelpMovables(show);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'ShowHelpMovables'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetTerrainActor of class  Scene3D */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene3D_GetTerrainActor00
static int tolua_PX2_Scene3D_GetTerrainActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene3D* self = (Scene3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetTerrainActor'", NULL);
#endif
  {
   TerrainActor* tolua_ret = (TerrainActor*)  self->GetTerrainActor();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"TerrainActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetTerrainActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetDefaultARActor of class  Scene3D */
#ifndef TOLUA_DISABLE_tolua_PX2_Scene3D_GetDefaultARActor00
static int tolua_PX2_Scene3D_GetDefaultARActor00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"Scene3D",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  Scene3D* self = (Scene3D*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'GetDefaultARActor'", NULL);
#endif
  {
   AmbientRegionActor* tolua_ret = (AmbientRegionActor*)  self->GetDefaultARActor();
    tolua_pushusertype(tolua_S,(void*)tolua_ret,"AmbientRegionActor");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetDefaultARActor'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: GetSingleton of class  SoundManager */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundManager_GetSingleton00
static int tolua_PX2_SoundManager_GetSingleton00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertable(tolua_S,1,"SoundManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  {
   SoundManager& tolua_ret = (SoundManager&)  SoundManager::GetSingleton();
    tolua_pushusertype(tolua_S,(void*)&tolua_ret,"SoundManager");
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'GetSingleton'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Clear of class  SoundManager */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundManager_Clear00
static int tolua_PX2_SoundManager_Clear00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,2,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundManager* self = (SoundManager*)  tolua_tousertype(tolua_S,1,0);
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Clear'", NULL);
#endif
  {
   self->Clear();
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Clear'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: Update of class  SoundManager */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundManager_Update00
static int tolua_PX2_SoundManager_Update00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err) ||
     !tolua_isnumber(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,0,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundManager* self = (SoundManager*)  tolua_tousertype(tolua_S,1,0);
  double appSeconds = ((double)  tolua_tonumber(tolua_S,2,0));
  double elapsedSeconds = ((double)  tolua_tonumber(tolua_S,3,0));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'Update'", NULL);
#endif
  {
   self->Update(appSeconds,elapsedSeconds);
  }
 }
 return 0;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'Update'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: PlaySound of class  SoundManager */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundManager_PlaySound00
static int tolua_PX2_SoundManager_PlaySound00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,3,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,4,0,&tolua_err) ||
     !tolua_isboolean(tolua_S,5,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,6,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundManager* self = (SoundManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  const std::string filename = ((const std::string)  tolua_tocppstring(tolua_S,3,0));
  float volume = ((float)  tolua_tonumber(tolua_S,4,0));
  bool isLoop = ((bool)  tolua_toboolean(tolua_S,5,false));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'PlaySound'", NULL);
#endif
  {
   self->PlaySound(name,filename,volume,isLoop);
   tolua_pushcppstring(tolua_S,(const char*)name);
   tolua_pushcppstring(tolua_S,(const char*)filename);
  }
 }
 return 2;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'PlaySound'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* method: StopSound of class  SoundManager */
#ifndef TOLUA_DISABLE_tolua_PX2_SoundManager_StopSound00
static int tolua_PX2_SoundManager_StopSound00(lua_State* tolua_S)
{
#ifndef TOLUA_RELEASE
 tolua_Error tolua_err;
 if (
     !tolua_isusertype(tolua_S,1,"SoundManager",0,&tolua_err) ||
     !tolua_iscppstring(tolua_S,2,0,&tolua_err) ||
     !tolua_isnumber(tolua_S,3,1,&tolua_err) ||
     !tolua_isnoobj(tolua_S,4,&tolua_err)
 )
  goto tolua_lerror;
 else
#endif
 {
  SoundManager* self = (SoundManager*)  tolua_tousertype(tolua_S,1,0);
  const std::string name = ((const std::string)  tolua_tocppstring(tolua_S,2,0));
  float disTime = ((float)  tolua_tonumber(tolua_S,3,0.0f));
#ifndef TOLUA_RELEASE
  if (!self) tolua_error(tolua_S,"invalid 'self' in function 'StopSound'", NULL);
#endif
  {
   self->StopSound(name,disTime);
   tolua_pushcppstring(tolua_S,(const char*)name);
  }
 }
 return 1;
#ifndef TOLUA_RELEASE
 tolua_lerror:
 tolua_error(tolua_S,"#ferror in function 'StopSound'.",&tolua_err);
 return 0;
#endif
}
#endif //#ifndef TOLUA_DISABLE

/* Open function */
TOLUA_API int tolua_PX2_open (lua_State* tolua_S)
{
 tolua_open(tolua_S);
 tolua_reg_types(tolua_S);
 tolua_module(tolua_S,NULL,0);
 tolua_beginmodule(tolua_S,NULL);
  tolua_cclass(tolua_S,"Object","Object","",NULL);
  tolua_beginmodule(tolua_S,"Object");
   tolua_function(tolua_S,"GetResourcePath",tolua_PX2_Object_GetResourcePath00);
   tolua_function(tolua_S,"SetName",tolua_PX2_Object_SetName00);
   tolua_function(tolua_S,"GetName",tolua_PX2_Object_GetName00);
   tolua_function(tolua_S,"GetObjectByName",tolua_PX2_Object_GetObjectByName00);
  tolua_endmodule(tolua_S);
  tolua_function(tolua_S,"GetTimeInMicroseconds",tolua_PX2_GetTimeInMicroseconds00);
  tolua_function(tolua_S,"GetTimeInSeconds",tolua_PX2_GetTimeInSeconds00);
  tolua_cclass(tolua_S,"Logger","Logger","",NULL);
  tolua_beginmodule(tolua_S,"Logger");
   tolua_function(tolua_S,"GetSingleton",tolua_PX2_Logger_GetSingleton00);
   tolua_function(tolua_S,"LogInfo",tolua_PX2_Logger_LogInfo00);
   tolua_function(tolua_S,"LogError",tolua_PX2_Logger_LogError00);
   tolua_function(tolua_S,"LogUser",tolua_PX2_Logger_LogUser00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"APoint","APoint","HPoint",tolua_collect_APoint);
  #else
  tolua_cclass(tolua_S,"APoint","APoint","HPoint",NULL);
  #endif
  tolua_beginmodule(tolua_S,"APoint");
   tolua_function(tolua_S,"new",tolua_PX2_APoint_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_APoint_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_APoint_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_APoint_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_APoint_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_APoint_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_APoint_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_APoint_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_APoint_new02_local);
   tolua_function(tolua_S,"delete",tolua_PX2_APoint_delete00);
   tolua_function(tolua_S,".sub",tolua_PX2_APoint__sub00);
   tolua_function(tolua_S,".add",tolua_PX2_APoint__add00);
   tolua_function(tolua_S,".sub",tolua_PX2_APoint__sub01);
   tolua_function(tolua_S,".add",tolua_PX2_APoint__add01);
   tolua_function(tolua_S,".mul",tolua_PX2_APoint__mul00);
   tolua_function(tolua_S,".div",tolua_PX2_APoint__div00);
   tolua_function(tolua_S,".sub",tolua_PX2_APoint__sub02);
   tolua_function(tolua_S,"Dot",tolua_PX2_APoint_Dot00);
   tolua_variable(tolua_S,"ORIGIN",tolua_get_APoint_ORIGIN,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AVector","AVector","HPoint",tolua_collect_AVector);
  #else
  tolua_cclass(tolua_S,"AVector","AVector","HPoint",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AVector");
   tolua_function(tolua_S,"new",tolua_PX2_AVector_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_AVector_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_AVector_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_AVector_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_AVector_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_AVector_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_AVector_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_AVector_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_AVector_new02_local);
   tolua_function(tolua_S,"new",tolua_PX2_AVector_new03);
   tolua_function(tolua_S,"new_local",tolua_PX2_AVector_new03_local);
   tolua_function(tolua_S,".call",tolua_PX2_AVector_new03_local);
   tolua_function(tolua_S,"new",tolua_PX2_AVector_new04);
   tolua_function(tolua_S,"new_local",tolua_PX2_AVector_new04_local);
   tolua_function(tolua_S,".call",tolua_PX2_AVector_new04_local);
   tolua_function(tolua_S,"delete",tolua_PX2_AVector_delete00);
   tolua_function(tolua_S,".add",tolua_PX2_AVector__add00);
   tolua_function(tolua_S,".sub",tolua_PX2_AVector__sub00);
   tolua_function(tolua_S,".mul",tolua_PX2_AVector__mul00);
   tolua_function(tolua_S,".div",tolua_PX2_AVector__div00);
   tolua_function(tolua_S,".sub",tolua_PX2_AVector__sub01);
   tolua_function(tolua_S,"Length",tolua_PX2_AVector_Length00);
   tolua_function(tolua_S,"SquaredLength",tolua_PX2_AVector_SquaredLength00);
   tolua_function(tolua_S,"Dot",tolua_PX2_AVector_Dot00);
   tolua_function(tolua_S,"Normalize",tolua_PX2_AVector_Normalize00);
   tolua_function(tolua_S,"Cross",tolua_PX2_AVector_Cross00);
   tolua_function(tolua_S,"UnitCross",tolua_PX2_AVector_UnitCross00);
   tolua_function(tolua_S,"Orthonormalize",tolua_PX2_AVector_Orthonormalize00);
   tolua_function(tolua_S,"Orthonormalize",tolua_PX2_AVector_Orthonormalize01);
   tolua_function(tolua_S,"GenerateOrthonormalBasis",tolua_PX2_AVector_GenerateOrthonormalBasis00);
   tolua_function(tolua_S,"GenerateComplementBasis",tolua_PX2_AVector_GenerateComplementBasis00);
   tolua_variable(tolua_S,"ZERO",tolua_get_AVector_ZERO,NULL);
   tolua_variable(tolua_S,"UNIT_X",tolua_get_AVector_UNIT_X,NULL);
   tolua_variable(tolua_S,"UNIT_Y",tolua_get_AVector_UNIT_Y,NULL);
   tolua_variable(tolua_S,"UNIT_Z",tolua_get_AVector_UNIT_Z,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"HPoint","HPoint","",tolua_collect_HPoint);
  #else
  tolua_cclass(tolua_S,"HPoint","HPoint","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"HPoint");
   tolua_function(tolua_S,"new",tolua_PX2_HPoint_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPoint_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPoint_new00_local);
   tolua_function(tolua_S,"new",tolua_PX2_HPoint_new01);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPoint_new01_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPoint_new01_local);
   tolua_function(tolua_S,"new",tolua_PX2_HPoint_new02);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPoint_new02_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPoint_new02_local);
   tolua_function(tolua_S,"delete",tolua_PX2_HPoint_delete00);
   tolua_function(tolua_S,".geti",tolua_PX2_HPoint__geti00);
   tolua_function(tolua_S,".seti",tolua_PX2_HPoint__seti00);
   tolua_function(tolua_S,".geti",tolua_PX2_HPoint__geti01);
   tolua_function(tolua_S,"X",tolua_PX2_HPoint_X00);
   tolua_function(tolua_S,"X",tolua_PX2_HPoint_X01);
   tolua_function(tolua_S,"Y",tolua_PX2_HPoint_Y00);
   tolua_function(tolua_S,"Y",tolua_PX2_HPoint_Y01);
   tolua_function(tolua_S,"Z",tolua_PX2_HPoint_Z00);
   tolua_function(tolua_S,"Z",tolua_PX2_HPoint_Z01);
   tolua_function(tolua_S,"W",tolua_PX2_HPoint_W00);
   tolua_function(tolua_S,"W",tolua_PX2_HPoint_W01);
   tolua_function(tolua_S,".eq",tolua_PX2_HPoint__eq00);
   tolua_function(tolua_S,".lt",tolua_PX2_HPoint__lt00);
   tolua_function(tolua_S,".le",tolua_PX2_HPoint__le00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Transform","Transform","",tolua_collect_Transform);
  #else
  tolua_cclass(tolua_S,"Transform","Transform","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Transform");
   tolua_function(tolua_S,"new",tolua_PX2_Transform_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Transform_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Transform_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Transform_delete00);
   tolua_function(tolua_S,"MakeIdentity",tolua_PX2_Transform_MakeIdentity00);
   tolua_function(tolua_S,"MakeUnitScale",tolua_PX2_Transform_MakeUnitScale00);
   tolua_function(tolua_S,"IsIdentity",tolua_PX2_Transform_IsIdentity00);
   tolua_function(tolua_S,"IsRSMatrix",tolua_PX2_Transform_IsRSMatrix00);
   tolua_function(tolua_S,"IsUniformScale",tolua_PX2_Transform_IsUniformScale00);
   tolua_function(tolua_S,"SetRotate",tolua_PX2_Transform_SetRotate00);
   tolua_function(tolua_S,"SetMatrix",tolua_PX2_Transform_SetMatrix00);
   tolua_function(tolua_S,"SetTranslate",tolua_PX2_Transform_SetTranslate00);
   tolua_function(tolua_S,"SetScale",tolua_PX2_Transform_SetScale00);
   tolua_function(tolua_S,"SetUniformScale",tolua_PX2_Transform_SetUniformScale00);
   tolua_function(tolua_S,"GetRotate",tolua_PX2_Transform_GetRotate00);
   tolua_function(tolua_S,"GetMatrix",tolua_PX2_Transform_GetMatrix00);
   tolua_function(tolua_S,"GetTranslate",tolua_PX2_Transform_GetTranslate00);
   tolua_function(tolua_S,"GetScale",tolua_PX2_Transform_GetScale00);
   tolua_function(tolua_S,"GetUniformScale",tolua_PX2_Transform_GetUniformScale00);
   tolua_function(tolua_S,"GetNorm",tolua_PX2_Transform_GetNorm00);
   tolua_function(tolua_S,".mul",tolua_PX2_Transform__mul00);
   tolua_function(tolua_S,".mul",tolua_PX2_Transform__mul01);
   tolua_function(tolua_S,".mul",tolua_PX2_Transform__mul02);
   tolua_function(tolua_S,"Matrix",tolua_PX2_Transform_Matrix00);
   tolua_function(tolua_S,"Inverse",tolua_PX2_Transform_Inverse00);
   tolua_function(tolua_S,"InverseTransform",tolua_PX2_Transform_InverseTransform00);
   tolua_variable(tolua_S,"IDENTITY",tolua_get_Transform_IDENTITY,NULL);
   tolua_function(tolua_S,"GetStreamingSize",tolua_PX2_Transform_GetStreamingSize00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Controlledable","Controlledable","Object",tolua_collect_Controlledable);
  #else
  tolua_cclass(tolua_S,"Controlledable","Controlledable","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Controlledable");
   tolua_function(tolua_S,"delete",tolua_PX2_Controlledable_delete00);
   tolua_function(tolua_S,"GetNumControllers",tolua_PX2_Controlledable_GetNumControllers00);
   tolua_function(tolua_S,"GetController",tolua_PX2_Controlledable_GetController00);
   tolua_function(tolua_S,"AttachController",tolua_PX2_Controlledable_AttachController00);
   tolua_function(tolua_S,"DetachController",tolua_PX2_Controlledable_DetachController00);
   tolua_function(tolua_S,"DetachAllControllers",tolua_PX2_Controlledable_DetachAllControllers00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Movable","Movable","Controlledable",tolua_collect_Movable);
  #else
  tolua_cclass(tolua_S,"Movable","Movable","Controlledable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Movable");
   tolua_function(tolua_S,"delete",tolua_PX2_Movable_delete00);
   tolua_variable(tolua_S,"LocalTransform",tolua_get_Movable_LocalTransform,tolua_set_Movable_LocalTransform);
   tolua_variable(tolua_S,"WorldTransform",tolua_get_Movable_WorldTransform,tolua_set_Movable_WorldTransform);
   tolua_variable(tolua_S,"WorldTransformIsCurrent",tolua_get_Movable_WorldTransformIsCurrent,tolua_set_Movable_WorldTransformIsCurrent);
   tolua_variable(tolua_S,"WorldBound",tolua_get_Movable_WorldBound,tolua_set_Movable_WorldBound);
   tolua_variable(tolua_S,"WorldBoundIsCurrent",tolua_get_Movable_WorldBoundIsCurrent,tolua_set_Movable_WorldBoundIsCurrent);
   tolua_constant(tolua_S,"CULL_DYNAMIC",Movable::CULL_DYNAMIC);
   tolua_constant(tolua_S,"CULL_ALWAYS",Movable::CULL_ALWAYS);
   tolua_constant(tolua_S,"CULL_NEVER",Movable::CULL_NEVER);
   tolua_variable(tolua_S,"Culling",tolua_get_Movable_Culling,tolua_set_Movable_Culling);
   tolua_function(tolua_S,"Show",tolua_PX2_Movable_Show00);
   tolua_function(tolua_S,"IsShow",tolua_PX2_Movable_IsShow00);
   tolua_function(tolua_S,"Update",tolua_PX2_Movable_Update00);
   tolua_function(tolua_S,"GetParent",tolua_PX2_Movable_GetParent00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Renderable","Renderable","Movable",tolua_collect_Renderable);
  #else
  tolua_cclass(tolua_S,"Renderable","Renderable","Movable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Renderable");
   tolua_constant(tolua_S,"PT_NONE",Renderable::PT_NONE);
   tolua_constant(tolua_S,"PT_POLYPOINT",Renderable::PT_POLYPOINT);
   tolua_constant(tolua_S,"PT_POLYSEGMENTS_DISJOINT",Renderable::PT_POLYSEGMENTS_DISJOINT);
   tolua_constant(tolua_S,"PT_POLYSEGMENTS_CONTIGUOUS",Renderable::PT_POLYSEGMENTS_CONTIGUOUS);
   tolua_constant(tolua_S,"PT_TRIANGLES",Renderable::PT_TRIANGLES);
   tolua_constant(tolua_S,"PT_TRIMESH",Renderable::PT_TRIMESH);
   tolua_constant(tolua_S,"PT_TRISTRIP",Renderable::PT_TRISTRIP);
   tolua_constant(tolua_S,"PT_TRIFAN",Renderable::PT_TRIFAN);
   tolua_constant(tolua_S,"PT_MAX_QUANTITY",Renderable::PT_MAX_QUANTITY);
   tolua_function(tolua_S,"delete",tolua_PX2_Renderable_delete00);
   tolua_function(tolua_S,"GetPrimitiveType",tolua_PX2_Renderable_GetPrimitiveType00);
   tolua_function(tolua_S,"SetVertexFormat",tolua_PX2_Renderable_SetVertexFormat00);
   tolua_function(tolua_S,"GetVertexFormat",tolua_PX2_Renderable_GetVertexFormat00);
   tolua_function(tolua_S,"GetVertexFormat",tolua_PX2_Renderable_GetVertexFormat01);
   tolua_function(tolua_S,"SetVertexBuffer",tolua_PX2_Renderable_SetVertexBuffer00);
   tolua_function(tolua_S,"GetVertexBuffer",tolua_PX2_Renderable_GetVertexBuffer00);
   tolua_function(tolua_S,"GetVertexBuffer",tolua_PX2_Renderable_GetVertexBuffer01);
   tolua_function(tolua_S,"SetIndexBuffer",tolua_PX2_Renderable_SetIndexBuffer00);
   tolua_function(tolua_S,"GetIndexBuffer",tolua_PX2_Renderable_GetIndexBuffer00);
   tolua_function(tolua_S,"GetIndexBuffer",tolua_PX2_Renderable_GetIndexBuffer01);
   tolua_function(tolua_S,"GetModelBound",tolua_PX2_Renderable_GetModelBound00);
   tolua_function(tolua_S,"GetModelBound",tolua_PX2_Renderable_GetModelBound01);
   tolua_constant(tolua_S,"RU_UI",Renderable::RU_UI);
   tolua_constant(tolua_S,"RU_GENERAL",Renderable::RU_GENERAL);
   tolua_constant(tolua_S,"RU_REFLECT",Renderable::RU_REFLECT);
   tolua_constant(tolua_S,"RU_SHADOWMAP",Renderable::RU_SHADOWMAP);
   tolua_constant(tolua_S,"RU_QUANTITY",Renderable::RU_QUANTITY);
   tolua_function(tolua_S,"AddRenderUsage",tolua_PX2_Renderable_AddRenderUsage00);
   tolua_function(tolua_S,"RemoveRenderUsage",tolua_PX2_Renderable_RemoveRenderUsage00);
   tolua_function(tolua_S,"GetRenderUsage",tolua_PX2_Renderable_GetRenderUsage00);
   tolua_constant(tolua_S,"RL_BACKGROUND",Renderable::RL_BACKGROUND);
   tolua_constant(tolua_S,"RL_SKY",Renderable::RL_SKY);
   tolua_constant(tolua_S,"RL_TERRAIN",Renderable::RL_TERRAIN);
   tolua_constant(tolua_S,"RL_SCENE",Renderable::RL_SCENE);
   tolua_constant(tolua_S,"RL_UI",Renderable::RL_UI);
   tolua_function(tolua_S,"SetRenderLayer",tolua_PX2_Renderable_SetRenderLayer00);
   tolua_function(tolua_S,"GetSortIndex",tolua_PX2_Renderable_GetSortIndex00);
   tolua_function(tolua_S,"SetMaterialInstance",tolua_PX2_Renderable_SetMaterialInstance00);
   tolua_function(tolua_S,"GetMaterialInstance",tolua_PX2_Renderable_GetMaterialInstance00);
   tolua_function(tolua_S,"AddLight",tolua_PX2_Renderable_AddLight00);
   tolua_function(tolua_S,"RemoveLight",tolua_PX2_Renderable_RemoveLight00);
   tolua_function(tolua_S,"ClearLights",tolua_PX2_Renderable_ClearLights00);
   tolua_function(tolua_S,"GetNumLights",tolua_PX2_Renderable_GetNumLights00);
   tolua_function(tolua_S,"GetLight",tolua_PX2_Renderable_GetLight00);
   tolua_constant(tolua_S,"GU_MODEL_BOUND_ONLY",Renderable::GU_MODEL_BOUND_ONLY);
   tolua_constant(tolua_S,"GU_NORMALS",Renderable::GU_NORMALS);
   tolua_constant(tolua_S,"GU_USE_GEOMETRY",Renderable::GU_USE_GEOMETRY);
   tolua_constant(tolua_S,"GU_USE_TCOORD_CHANNEL",Renderable::GU_USE_TCOORD_CHANNEL);
   tolua_function(tolua_S,"UpdateModelSpace",tolua_PX2_Renderable_UpdateModelSpace00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Triangles","Triangles","Renderable",tolua_collect_Triangles);
  #else
  tolua_cclass(tolua_S,"Triangles","Triangles","Renderable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Triangles");
   tolua_function(tolua_S,"delete",tolua_PX2_Triangles_delete00);
   tolua_function(tolua_S,"GetNumTriangles",tolua_PX2_Triangles_GetNumTriangles00);
   tolua_function(tolua_S,"GetTriangle",tolua_PX2_Triangles_GetTriangle00);
   tolua_function(tolua_S,"GetModelTriangle",tolua_PX2_Triangles_GetModelTriangle00);
   tolua_function(tolua_S,"GetWorldTriangle",tolua_PX2_Triangles_GetWorldTriangle00);
   tolua_function(tolua_S,"GetNumVertices",tolua_PX2_Triangles_GetNumVertices00);
   tolua_function(tolua_S,"GetWorldTransform",tolua_PX2_Triangles_GetWorldTransform00);
   tolua_function(tolua_S,"GetPosition",tolua_PX2_Triangles_GetPosition00);
   tolua_function(tolua_S,"UpdateModelSpace",tolua_PX2_Triangles_UpdateModelSpace00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"TriMesh","TriMesh","Triangles",tolua_collect_TriMesh);
  #else
  tolua_cclass(tolua_S,"TriMesh","TriMesh","Triangles",NULL);
  #endif
  tolua_beginmodule(tolua_S,"TriMesh");
   tolua_function(tolua_S,"new",tolua_PX2_TriMesh_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_TriMesh_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_TriMesh_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_TriMesh_delete00);
   tolua_function(tolua_S,"GetNumTriangles",tolua_PX2_TriMesh_GetNumTriangles00);
   tolua_function(tolua_S,"GetTriangle",tolua_PX2_TriMesh_GetTriangle00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Node","Node","Movable",NULL);
  tolua_beginmodule(tolua_S,"Node");
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SwitchNode","SwitchNode","Node",tolua_collect_SwitchNode);
  #else
  tolua_cclass(tolua_S,"SwitchNode","SwitchNode","Node",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SwitchNode");
   tolua_function(tolua_S,"new",tolua_PX2_SwitchNode_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SwitchNode_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SwitchNode_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SwitchNode_delete00);
   tolua_function(tolua_S,"Create",tolua_PX2_SwitchNode_Create00);
   tolua_constant(tolua_S,"SN_INVALID_CHILD",SwitchNode::SN_INVALID_CHILD);
   tolua_function(tolua_S,"SetActiveChild",tolua_PX2_SwitchNode_SetActiveChild00);
   tolua_function(tolua_S,"GetActiveChild",tolua_PX2_SwitchNode_GetActiveChild00);
   tolua_function(tolua_S,"DisableAllChildren",tolua_PX2_SwitchNode_DisableAllChildren00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Camera","Camera","Object",tolua_collect_Camera);
  #else
  tolua_cclass(tolua_S,"Camera","Camera","Object",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Camera");
   tolua_function(tolua_S,"new",tolua_PX2_Camera_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Camera_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Camera_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Camera_delete00);
   tolua_function(tolua_S,"SetFrame",tolua_PX2_Camera_SetFrame00);
   tolua_function(tolua_S,"SetPosition",tolua_PX2_Camera_SetPosition00);
   tolua_function(tolua_S,"SetAxes",tolua_PX2_Camera_SetAxes00);
   tolua_function(tolua_S,"GetPosition",tolua_PX2_Camera_GetPosition00);
   tolua_function(tolua_S,"GetDVector",tolua_PX2_Camera_GetDVector00);
   tolua_function(tolua_S,"GetUVector",tolua_PX2_Camera_GetUVector00);
   tolua_function(tolua_S,"GetRVector",tolua_PX2_Camera_GetRVector00);
   tolua_function(tolua_S,"GetViewMatrix",tolua_PX2_Camera_GetViewMatrix00);
   tolua_constant(tolua_S,"VF_DMIN",Camera::VF_DMIN);
   tolua_constant(tolua_S,"VF_DMAX",Camera::VF_DMAX);
   tolua_constant(tolua_S,"VF_UMIN",Camera::VF_UMIN);
   tolua_constant(tolua_S,"VF_UMAX",Camera::VF_UMAX);
   tolua_constant(tolua_S,"VF_RMIN",Camera::VF_RMIN);
   tolua_constant(tolua_S,"VF_RMAX",Camera::VF_RMAX);
   tolua_constant(tolua_S,"VF_QUANTITY",Camera::VF_QUANTITY);
   tolua_function(tolua_S,"IsPerspective",tolua_PX2_Camera_IsPerspective00);
   tolua_function(tolua_S,"SetFrustum",tolua_PX2_Camera_SetFrustum00);
   tolua_function(tolua_S,"SetFrustum",tolua_PX2_Camera_SetFrustum01);
   tolua_function(tolua_S,"SetFrustum",tolua_PX2_Camera_SetFrustum02);
   tolua_function(tolua_S,"GetFrustum",tolua_PX2_Camera_GetFrustum00);
   tolua_function(tolua_S,"GetFrustum",tolua_PX2_Camera_GetFrustum01);
   tolua_function(tolua_S,"GetFrustum",tolua_PX2_Camera_GetFrustum02);
   tolua_function(tolua_S,"GetDMin",tolua_PX2_Camera_GetDMin00);
   tolua_function(tolua_S,"GetDMax",tolua_PX2_Camera_GetDMax00);
   tolua_function(tolua_S,"GetUMin",tolua_PX2_Camera_GetUMin00);
   tolua_function(tolua_S,"GetUMax",tolua_PX2_Camera_GetUMax00);
   tolua_function(tolua_S,"GetRMin",tolua_PX2_Camera_GetRMin00);
   tolua_function(tolua_S,"GetRMax",tolua_PX2_Camera_GetRMax00);
   tolua_constant(tolua_S,"PM_DEPTH_ZERO_TO_ONE",Camera::PM_DEPTH_ZERO_TO_ONE);
   tolua_constant(tolua_S,"PM_DEPTH_MINUS_ONE_TO_ONE",Camera::PM_DEPTH_MINUS_ONE_TO_ONE);
   tolua_constant(tolua_S,"PM_DEPTH_QUANTITY",Camera::PM_DEPTH_QUANTITY);
   tolua_function(tolua_S,"GetDepthType",tolua_PX2_Camera_GetDepthType00);
   tolua_function(tolua_S,"GetProjectionMatrix",tolua_PX2_Camera_GetProjectionMatrix00);
   tolua_function(tolua_S,"GetProjectionViewMatrix",tolua_PX2_Camera_GetProjectionViewMatrix00);
   tolua_function(tolua_S,"SetPreViewMatrix",tolua_PX2_Camera_SetPreViewMatrix00);
   tolua_function(tolua_S,"GetPreViewMatrix",tolua_PX2_Camera_GetPreViewMatrix00);
   tolua_function(tolua_S,"PreViewIsIdentity",tolua_PX2_Camera_PreViewIsIdentity00);
   tolua_function(tolua_S,"SetPostProjectionMatrix",tolua_PX2_Camera_SetPostProjectionMatrix00);
   tolua_function(tolua_S,"GetPostProjectionMatrix",tolua_PX2_Camera_GetPostProjectionMatrix00);
   tolua_function(tolua_S,"PostProjectionIsIdentity",tolua_PX2_Camera_PostProjectionIsIdentity00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Renderer","Renderer","",NULL);
  tolua_beginmodule(tolua_S,"Renderer");
   tolua_function(tolua_S,"Initialize",tolua_PX2_Renderer_Initialize00);
   tolua_function(tolua_S,"Terminate",tolua_PX2_Renderer_Terminate00);
   tolua_function(tolua_S,"SetDefaultRenderer",tolua_PX2_Renderer_SetDefaultRenderer00);
   tolua_function(tolua_S,"GetDefaultRenderer",tolua_PX2_Renderer_GetDefaultRenderer00);
   tolua_function(tolua_S,"GetWidth",tolua_PX2_Renderer_GetWidth00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_Renderer_GetHeight00);
   tolua_function(tolua_S,"GetColorFormat",tolua_PX2_Renderer_GetColorFormat00);
   tolua_function(tolua_S,"GetDepthStencilFormat",tolua_PX2_Renderer_GetDepthStencilFormat00);
   tolua_function(tolua_S,"GetNumMultisamples",tolua_PX2_Renderer_GetNumMultisamples00);
   tolua_function(tolua_S,"Bind",tolua_PX2_Renderer_Bind00);
   tolua_function(tolua_S,"BindAll",tolua_PX2_Renderer_BindAll00);
   tolua_function(tolua_S,"Unbind",tolua_PX2_Renderer_Unbind00);
   tolua_function(tolua_S,"UnbindAll",tolua_PX2_Renderer_UnbindAll00);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable00);
   tolua_function(tolua_S,"Disable",tolua_PX2_Renderer_Disable00);
   tolua_function(tolua_S,"Bind",tolua_PX2_Renderer_Bind01);
   tolua_function(tolua_S,"BindAll",tolua_PX2_Renderer_BindAll01);
   tolua_function(tolua_S,"Unbind",tolua_PX2_Renderer_Unbind01);
   tolua_function(tolua_S,"UnbindAll",tolua_PX2_Renderer_UnbindAll01);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable01);
   tolua_function(tolua_S,"Disable",tolua_PX2_Renderer_Disable01);
   tolua_function(tolua_S,"Lock",tolua_PX2_Renderer_Lock00);
   tolua_function(tolua_S,"Unlock",tolua_PX2_Renderer_Unlock00);
   tolua_function(tolua_S,"Update",tolua_PX2_Renderer_Update00);
   tolua_function(tolua_S,"UpdateAll",tolua_PX2_Renderer_UpdateAll00);
   tolua_function(tolua_S,"Bind",tolua_PX2_Renderer_Bind02);
   tolua_function(tolua_S,"BindAll",tolua_PX2_Renderer_BindAll02);
   tolua_function(tolua_S,"Unbind",tolua_PX2_Renderer_Unbind02);
   tolua_function(tolua_S,"UnbindAll",tolua_PX2_Renderer_UnbindAll02);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable02);
   tolua_function(tolua_S,"Disable",tolua_PX2_Renderer_Disable02);
   tolua_function(tolua_S,"Lock",tolua_PX2_Renderer_Lock01);
   tolua_function(tolua_S,"Unlock",tolua_PX2_Renderer_Unlock01);
   tolua_function(tolua_S,"Update",tolua_PX2_Renderer_Update01);
   tolua_function(tolua_S,"UpdateAll",tolua_PX2_Renderer_UpdateAll01);
   tolua_function(tolua_S,"Bind",tolua_PX2_Renderer_Bind03);
   tolua_function(tolua_S,"BindAll",tolua_PX2_Renderer_BindAll03);
   tolua_function(tolua_S,"Unbind",tolua_PX2_Renderer_Unbind03);
   tolua_function(tolua_S,"UnbindAll",tolua_PX2_Renderer_UnbindAll03);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable03);
   tolua_function(tolua_S,"Disable",tolua_PX2_Renderer_Disable03);
   tolua_function(tolua_S,"Lock",tolua_PX2_Renderer_Lock02);
   tolua_function(tolua_S,"Unlock",tolua_PX2_Renderer_Unlock02);
   tolua_function(tolua_S,"Update",tolua_PX2_Renderer_Update02);
   tolua_function(tolua_S,"UpdateAll",tolua_PX2_Renderer_UpdateAll02);
   tolua_function(tolua_S,"Bind",tolua_PX2_Renderer_Bind04);
   tolua_function(tolua_S,"BindAll",tolua_PX2_Renderer_BindAll04);
   tolua_function(tolua_S,"Unbind",tolua_PX2_Renderer_Unbind04);
   tolua_function(tolua_S,"UnbindAll",tolua_PX2_Renderer_UnbindAll04);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable04);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable05);
   tolua_function(tolua_S,"Disable",tolua_PX2_Renderer_Disable04);
   tolua_function(tolua_S,"Lock",tolua_PX2_Renderer_Lock03);
   tolua_function(tolua_S,"Unlock",tolua_PX2_Renderer_Unlock03);
   tolua_function(tolua_S,"Update",tolua_PX2_Renderer_Update03);
   tolua_function(tolua_S,"UpdateAll",tolua_PX2_Renderer_UpdateAll03);
   tolua_function(tolua_S,"Bind",tolua_PX2_Renderer_Bind05);
   tolua_function(tolua_S,"BindAll",tolua_PX2_Renderer_BindAll05);
   tolua_function(tolua_S,"Unbind",tolua_PX2_Renderer_Unbind05);
   tolua_function(tolua_S,"UnbindAll",tolua_PX2_Renderer_UnbindAll05);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable06);
   tolua_function(tolua_S,"Disable",tolua_PX2_Renderer_Disable05);
   tolua_function(tolua_S,"Lock",tolua_PX2_Renderer_Lock04);
   tolua_function(tolua_S,"Unlock",tolua_PX2_Renderer_Unlock04);
   tolua_function(tolua_S,"Update",tolua_PX2_Renderer_Update04);
   tolua_function(tolua_S,"UpdateAll",tolua_PX2_Renderer_UpdateAll04);
   tolua_function(tolua_S,"Bind",tolua_PX2_Renderer_Bind06);
   tolua_function(tolua_S,"BindAll",tolua_PX2_Renderer_BindAll06);
   tolua_function(tolua_S,"Unbind",tolua_PX2_Renderer_Unbind06);
   tolua_function(tolua_S,"UnbindAll",tolua_PX2_Renderer_UnbindAll06);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable07);
   tolua_function(tolua_S,"Disable",tolua_PX2_Renderer_Disable06);
   tolua_function(tolua_S,"Lock",tolua_PX2_Renderer_Lock05);
   tolua_function(tolua_S,"Unlock",tolua_PX2_Renderer_Unlock05);
   tolua_function(tolua_S,"Update",tolua_PX2_Renderer_Update05);
   tolua_function(tolua_S,"UpdateAll",tolua_PX2_Renderer_UpdateAll05);
   tolua_function(tolua_S,"Bind",tolua_PX2_Renderer_Bind07);
   tolua_function(tolua_S,"BindAll",tolua_PX2_Renderer_BindAll07);
   tolua_function(tolua_S,"Unbind",tolua_PX2_Renderer_Unbind07);
   tolua_function(tolua_S,"UnbindAll",tolua_PX2_Renderer_UnbindAll07);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable08);
   tolua_function(tolua_S,"Disable",tolua_PX2_Renderer_Disable07);
   tolua_function(tolua_S,"ReadColor",tolua_PX2_Renderer_ReadColor00);
   tolua_function(tolua_S,"Bind",tolua_PX2_Renderer_Bind08);
   tolua_function(tolua_S,"BindAll",tolua_PX2_Renderer_BindAll08);
   tolua_function(tolua_S,"Unbind",tolua_PX2_Renderer_Unbind08);
   tolua_function(tolua_S,"UnbindAll",tolua_PX2_Renderer_UnbindAll08);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable09);
   tolua_function(tolua_S,"Disable",tolua_PX2_Renderer_Disable08);
   tolua_function(tolua_S,"Bind",tolua_PX2_Renderer_Bind09);
   tolua_function(tolua_S,"BindAll",tolua_PX2_Renderer_BindAll09);
   tolua_function(tolua_S,"Unbind",tolua_PX2_Renderer_Unbind09);
   tolua_function(tolua_S,"UnbindAll",tolua_PX2_Renderer_UnbindAll09);
   tolua_function(tolua_S,"Enable",tolua_PX2_Renderer_Enable10);
   tolua_function(tolua_S,"Disable",tolua_PX2_Renderer_Disable09);
   tolua_function(tolua_S,"GetAlphaProperty",tolua_PX2_Renderer_GetAlphaProperty00);
   tolua_function(tolua_S,"GetCullProperty",tolua_PX2_Renderer_GetCullProperty00);
   tolua_function(tolua_S,"GetDepthProperty",tolua_PX2_Renderer_GetDepthProperty00);
   tolua_function(tolua_S,"GetOffsetProperty",tolua_PX2_Renderer_GetOffsetProperty00);
   tolua_function(tolua_S,"GetStencilProperty",tolua_PX2_Renderer_GetStencilProperty00);
   tolua_function(tolua_S,"GetWireProperty",tolua_PX2_Renderer_GetWireProperty00);
   tolua_function(tolua_S,"SetCamera",tolua_PX2_Renderer_SetCamera00);
   tolua_function(tolua_S,"GetCamera",tolua_PX2_Renderer_GetCamera00);
   tolua_function(tolua_S,"GetCamera",tolua_PX2_Renderer_GetCamera01);
   tolua_function(tolua_S,"GetViewMatrix",tolua_PX2_Renderer_GetViewMatrix00);
   tolua_function(tolua_S,"GetProjectionMatrix",tolua_PX2_Renderer_GetProjectionMatrix00);
   tolua_function(tolua_S,"GetPostProjectionMatrix",tolua_PX2_Renderer_GetPostProjectionMatrix00);
   tolua_function(tolua_S,"GetPickRay",tolua_PX2_Renderer_GetPickRay00);
   tolua_function(tolua_S,"PointWorldToViewPort",tolua_PX2_Renderer_PointWorldToViewPort00);
   tolua_function(tolua_S,"SetClearColor",tolua_PX2_Renderer_SetClearColor00);
   tolua_function(tolua_S,"GetClearColor",tolua_PX2_Renderer_GetClearColor00);
   tolua_function(tolua_S,"SetClearDepth",tolua_PX2_Renderer_SetClearDepth00);
   tolua_function(tolua_S,"GetClearDepth",tolua_PX2_Renderer_GetClearDepth00);
   tolua_function(tolua_S,"SetClearStencil",tolua_PX2_Renderer_SetClearStencil00);
   tolua_function(tolua_S,"GetClearStencil",tolua_PX2_Renderer_GetClearStencil00);
   tolua_function(tolua_S,"GetColorMask",tolua_PX2_Renderer_GetColorMask00);
   tolua_function(tolua_S,"SetOverrideAlphaProperty",tolua_PX2_Renderer_SetOverrideAlphaProperty00);
   tolua_function(tolua_S,"SetOverrideCullProperty",tolua_PX2_Renderer_SetOverrideCullProperty00);
   tolua_function(tolua_S,"SetOverrideDepthProperty",tolua_PX2_Renderer_SetOverrideDepthProperty00);
   tolua_function(tolua_S,"SetOverrideOffsetProperty",tolua_PX2_Renderer_SetOverrideOffsetProperty00);
   tolua_function(tolua_S,"SetOverrideStencilProperty",tolua_PX2_Renderer_SetOverrideStencilProperty00);
   tolua_function(tolua_S,"SetOverrideWireProperty",tolua_PX2_Renderer_SetOverrideWireProperty00);
   tolua_function(tolua_S,"GetOverrideAlphaProperty",tolua_PX2_Renderer_GetOverrideAlphaProperty00);
   tolua_function(tolua_S,"GetOverrideCullProperty",tolua_PX2_Renderer_GetOverrideCullProperty00);
   tolua_function(tolua_S,"GetOverrideDepthProperty",tolua_PX2_Renderer_GetOverrideDepthProperty00);
   tolua_function(tolua_S,"GetOverrideOffsetProperty",tolua_PX2_Renderer_GetOverrideOffsetProperty00);
   tolua_function(tolua_S,"GetOverrideStencilProperty",tolua_PX2_Renderer_GetOverrideStencilProperty00);
   tolua_function(tolua_S,"GetOverrideWireProperty",tolua_PX2_Renderer_GetOverrideWireProperty00);
   tolua_function(tolua_S,"SetReverseCullOrder",tolua_PX2_Renderer_SetReverseCullOrder00);
   tolua_function(tolua_S,"GetReverseCullOrder",tolua_PX2_Renderer_GetReverseCullOrder00);
   tolua_function(tolua_S,"Draw",tolua_PX2_Renderer_Draw00);
   tolua_function(tolua_S,"Draw",tolua_PX2_Renderer_Draw01);
   tolua_function(tolua_S,"Draw",tolua_PX2_Renderer_Draw02);
   tolua_function(tolua_S,"SetAlphaProperty",tolua_PX2_Renderer_SetAlphaProperty00);
   tolua_function(tolua_S,"SetCullProperty",tolua_PX2_Renderer_SetCullProperty00);
   tolua_function(tolua_S,"SetDepthProperty",tolua_PX2_Renderer_SetDepthProperty00);
   tolua_function(tolua_S,"SetOffsetProperty",tolua_PX2_Renderer_SetOffsetProperty00);
   tolua_function(tolua_S,"SetStencilProperty",tolua_PX2_Renderer_SetStencilProperty00);
   tolua_function(tolua_S,"SetWireProperty",tolua_PX2_Renderer_SetWireProperty00);
   tolua_function(tolua_S,"SetViewport",tolua_PX2_Renderer_SetViewport00);
   tolua_function(tolua_S,"GetViewport",tolua_PX2_Renderer_GetViewport00);
   tolua_function(tolua_S,"SetDepthRange",tolua_PX2_Renderer_SetDepthRange00);
   tolua_function(tolua_S,"GetDepthRange",tolua_PX2_Renderer_GetDepthRange00);
   tolua_function(tolua_S,"Resize",tolua_PX2_Renderer_Resize00);
   tolua_function(tolua_S,"ResizeWindow",tolua_PX2_Renderer_ResizeWindow00);
   tolua_function(tolua_S,"ClearColorBuffer",tolua_PX2_Renderer_ClearColorBuffer00);
   tolua_function(tolua_S,"ClearDepthBuffer",tolua_PX2_Renderer_ClearDepthBuffer00);
   tolua_function(tolua_S,"ClearStencilBuffer",tolua_PX2_Renderer_ClearStencilBuffer00);
   tolua_function(tolua_S,"ClearBuffers",tolua_PX2_Renderer_ClearBuffers00);
   tolua_function(tolua_S,"ClearColorBuffer",tolua_PX2_Renderer_ClearColorBuffer01);
   tolua_function(tolua_S,"ClearDepthBuffer",tolua_PX2_Renderer_ClearDepthBuffer01);
   tolua_function(tolua_S,"ClearStencilBuffer",tolua_PX2_Renderer_ClearStencilBuffer01);
   tolua_function(tolua_S,"ClearBuffers",tolua_PX2_Renderer_ClearBuffers01);
   tolua_function(tolua_S,"DisplayColorBuffer",tolua_PX2_Renderer_DisplayColorBuffer00);
   tolua_function(tolua_S,"SetColorMask",tolua_PX2_Renderer_SetColorMask00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"KC_UNASSIGNED",KC_UNASSIGNED);
  tolua_constant(tolua_S,"KC_ESCAPE",KC_ESCAPE);
  tolua_constant(tolua_S,"KC_1",KC_1);
  tolua_constant(tolua_S,"KC_2",KC_2);
  tolua_constant(tolua_S,"KC_3",KC_3);
  tolua_constant(tolua_S,"KC_4",KC_4);
  tolua_constant(tolua_S,"KC_5",KC_5);
  tolua_constant(tolua_S,"KC_6",KC_6);
  tolua_constant(tolua_S,"KC_7",KC_7);
  tolua_constant(tolua_S,"KC_8",KC_8);
  tolua_constant(tolua_S,"KC_9",KC_9);
  tolua_constant(tolua_S,"KC_0",KC_0);
  tolua_constant(tolua_S,"KC_MINUS",KC_MINUS);
  tolua_constant(tolua_S,"KC_EQUALS",KC_EQUALS);
  tolua_constant(tolua_S,"KC_BACK",KC_BACK);
  tolua_constant(tolua_S,"KC_TAB",KC_TAB);
  tolua_constant(tolua_S,"KC_Q",KC_Q);
  tolua_constant(tolua_S,"KC_W",KC_W);
  tolua_constant(tolua_S,"KC_E",KC_E);
  tolua_constant(tolua_S,"KC_R",KC_R);
  tolua_constant(tolua_S,"KC_T",KC_T);
  tolua_constant(tolua_S,"KC_Y",KC_Y);
  tolua_constant(tolua_S,"KC_U",KC_U);
  tolua_constant(tolua_S,"KC_I",KC_I);
  tolua_constant(tolua_S,"KC_O",KC_O);
  tolua_constant(tolua_S,"KC_P",KC_P);
  tolua_constant(tolua_S,"KC_LBRACKET",KC_LBRACKET);
  tolua_constant(tolua_S,"KC_RBRACKET",KC_RBRACKET);
  tolua_constant(tolua_S,"KC_RETURN",KC_RETURN);
  tolua_constant(tolua_S,"KC_LCONTROL",KC_LCONTROL);
  tolua_constant(tolua_S,"KC_A",KC_A);
  tolua_constant(tolua_S,"KC_S",KC_S);
  tolua_constant(tolua_S,"KC_D",KC_D);
  tolua_constant(tolua_S,"KC_F",KC_F);
  tolua_constant(tolua_S,"KC_G",KC_G);
  tolua_constant(tolua_S,"KC_H",KC_H);
  tolua_constant(tolua_S,"KC_J",KC_J);
  tolua_constant(tolua_S,"KC_K",KC_K);
  tolua_constant(tolua_S,"KC_L",KC_L);
  tolua_constant(tolua_S,"KC_SEMICOLON",KC_SEMICOLON);
  tolua_constant(tolua_S,"KC_APOSTROPHE",KC_APOSTROPHE);
  tolua_constant(tolua_S,"KC_GRAVE",KC_GRAVE);
  tolua_constant(tolua_S,"KC_LSHIFT",KC_LSHIFT);
  tolua_constant(tolua_S,"KC_BACKSLASH",KC_BACKSLASH);
  tolua_constant(tolua_S,"KC_Z",KC_Z);
  tolua_constant(tolua_S,"KC_X",KC_X);
  tolua_constant(tolua_S,"KC_C",KC_C);
  tolua_constant(tolua_S,"KC_V",KC_V);
  tolua_constant(tolua_S,"KC_B",KC_B);
  tolua_constant(tolua_S,"KC_N",KC_N);
  tolua_constant(tolua_S,"KC_M",KC_M);
  tolua_constant(tolua_S,"KC_COMMA",KC_COMMA);
  tolua_constant(tolua_S,"KC_PERIOD",KC_PERIOD);
  tolua_constant(tolua_S,"KC_SLASH",KC_SLASH);
  tolua_constant(tolua_S,"KC_RSHIFT",KC_RSHIFT);
  tolua_constant(tolua_S,"KC_MULTIPLY",KC_MULTIPLY);
  tolua_constant(tolua_S,"KC_LMENU",KC_LMENU);
  tolua_constant(tolua_S,"KC_SPACE",KC_SPACE);
  tolua_constant(tolua_S,"KC_CAPITAL",KC_CAPITAL);
  tolua_constant(tolua_S,"KC_F1",KC_F1);
  tolua_constant(tolua_S,"KC_F2",KC_F2);
  tolua_constant(tolua_S,"KC_F3",KC_F3);
  tolua_constant(tolua_S,"KC_F4",KC_F4);
  tolua_constant(tolua_S,"KC_F5",KC_F5);
  tolua_constant(tolua_S,"KC_F6",KC_F6);
  tolua_constant(tolua_S,"KC_F7",KC_F7);
  tolua_constant(tolua_S,"KC_F8",KC_F8);
  tolua_constant(tolua_S,"KC_F9",KC_F9);
  tolua_constant(tolua_S,"KC_F10",KC_F10);
  tolua_constant(tolua_S,"KC_NUMLOCK",KC_NUMLOCK);
  tolua_constant(tolua_S,"KC_SCROLL",KC_SCROLL);
  tolua_constant(tolua_S,"KC_NUMPAD7",KC_NUMPAD7);
  tolua_constant(tolua_S,"KC_NUMPAD8",KC_NUMPAD8);
  tolua_constant(tolua_S,"KC_NUMPAD9",KC_NUMPAD9);
  tolua_constant(tolua_S,"KC_SUBTRACT",KC_SUBTRACT);
  tolua_constant(tolua_S,"KC_NUMPAD4",KC_NUMPAD4);
  tolua_constant(tolua_S,"KC_NUMPAD5",KC_NUMPAD5);
  tolua_constant(tolua_S,"KC_NUMPAD6",KC_NUMPAD6);
  tolua_constant(tolua_S,"KC_ADD",KC_ADD);
  tolua_constant(tolua_S,"KC_NUMPAD1",KC_NUMPAD1);
  tolua_constant(tolua_S,"KC_NUMPAD2",KC_NUMPAD2);
  tolua_constant(tolua_S,"KC_NUMPAD3",KC_NUMPAD3);
  tolua_constant(tolua_S,"KC_NUMPAD0",KC_NUMPAD0);
  tolua_constant(tolua_S,"KC_DECIMAL",KC_DECIMAL);
  tolua_constant(tolua_S,"KC_OEM_102",KC_OEM_102);
  tolua_constant(tolua_S,"KC_F11",KC_F11);
  tolua_constant(tolua_S,"KC_F12",KC_F12);
  tolua_constant(tolua_S,"KC_F13",KC_F13);
  tolua_constant(tolua_S,"KC_F14",KC_F14);
  tolua_constant(tolua_S,"KC_F15",KC_F15);
  tolua_constant(tolua_S,"KC_KANA",KC_KANA);
  tolua_constant(tolua_S,"KC_ABNT_C1",KC_ABNT_C1);
  tolua_constant(tolua_S,"KC_CONVERT",KC_CONVERT);
  tolua_constant(tolua_S,"KC_NOCONVERT",KC_NOCONVERT);
  tolua_constant(tolua_S,"KC_YEN",KC_YEN);
  tolua_constant(tolua_S,"KC_ABNT_C2",KC_ABNT_C2);
  tolua_constant(tolua_S,"KC_NUMPADEQUALS",KC_NUMPADEQUALS);
  tolua_constant(tolua_S,"KC_PREVTRACK",KC_PREVTRACK);
  tolua_constant(tolua_S,"KC_AT",KC_AT);
  tolua_constant(tolua_S,"KC_COLON",KC_COLON);
  tolua_constant(tolua_S,"KC_UNDERLINE",KC_UNDERLINE);
  tolua_constant(tolua_S,"KC_KANJI",KC_KANJI);
  tolua_constant(tolua_S,"KC_STOP",KC_STOP);
  tolua_constant(tolua_S,"KC_AX",KC_AX);
  tolua_constant(tolua_S,"KC_UNLABELED",KC_UNLABELED);
  tolua_constant(tolua_S,"KC_NEXTTRACK",KC_NEXTTRACK);
  tolua_constant(tolua_S,"KC_NUMPADENTER",KC_NUMPADENTER);
  tolua_constant(tolua_S,"KC_RCONTROL",KC_RCONTROL);
  tolua_constant(tolua_S,"KC_MUTE",KC_MUTE);
  tolua_constant(tolua_S,"KC_CALCULATOR",KC_CALCULATOR);
  tolua_constant(tolua_S,"KC_PLAYPAUSE",KC_PLAYPAUSE);
  tolua_constant(tolua_S,"KC_MEDIASTOP",KC_MEDIASTOP);
  tolua_constant(tolua_S,"KC_VOLUMEDOWN",KC_VOLUMEDOWN);
  tolua_constant(tolua_S,"KC_VOLUMEUP",KC_VOLUMEUP);
  tolua_constant(tolua_S,"KC_WEBHOME",KC_WEBHOME);
  tolua_constant(tolua_S,"KC_NUMPADCOMMA",KC_NUMPADCOMMA);
  tolua_constant(tolua_S,"KC_DIVIDE",KC_DIVIDE);
  tolua_constant(tolua_S,"KC_SYSRQ",KC_SYSRQ);
  tolua_constant(tolua_S,"KC_RMENU",KC_RMENU);
  tolua_constant(tolua_S,"KC_PAUSE",KC_PAUSE);
  tolua_constant(tolua_S,"KC_HOME",KC_HOME);
  tolua_constant(tolua_S,"KC_UP",KC_UP);
  tolua_constant(tolua_S,"KC_PGUP",KC_PGUP);
  tolua_constant(tolua_S,"KC_LEFT",KC_LEFT);
  tolua_constant(tolua_S,"KC_RIGHT",KC_RIGHT);
  tolua_constant(tolua_S,"KC_END",KC_END);
  tolua_constant(tolua_S,"KC_DOWN",KC_DOWN);
  tolua_constant(tolua_S,"KC_PGDOWN",KC_PGDOWN);
  tolua_constant(tolua_S,"KC_INSERT",KC_INSERT);
  tolua_constant(tolua_S,"KC_DELETE",KC_DELETE);
  tolua_constant(tolua_S,"KC_LWIN",KC_LWIN);
  tolua_constant(tolua_S,"KC_RWIN",KC_RWIN);
  tolua_constant(tolua_S,"KC_APPS",KC_APPS);
  tolua_constant(tolua_S,"KC_POWER",KC_POWER);
  tolua_constant(tolua_S,"KC_SLEEP",KC_SLEEP);
  tolua_constant(tolua_S,"KC_WAKE",KC_WAKE);
  tolua_constant(tolua_S,"KC_WEBSEARCH",KC_WEBSEARCH);
  tolua_constant(tolua_S,"KC_WEBFAVORITES",KC_WEBFAVORITES);
  tolua_constant(tolua_S,"KC_WEBREFRESH",KC_WEBREFRESH);
  tolua_constant(tolua_S,"KC_WEBSTOP",KC_WEBSTOP);
  tolua_constant(tolua_S,"KC_WEBFORWARD",KC_WEBFORWARD);
  tolua_constant(tolua_S,"KC_WEBBACK",KC_WEBBACK);
  tolua_constant(tolua_S,"KC_MYCOMPUTER",KC_MYCOMPUTER);
  tolua_constant(tolua_S,"KC_MAIL",KC_MAIL);
  tolua_constant(tolua_S,"KC_MEDIASELECT",KC_MEDIASELECT);
  tolua_constant(tolua_S,"MBID_LEFT",MBID_LEFT);
  tolua_constant(tolua_S,"MBID_RIGHT",MBID_RIGHT);
  tolua_constant(tolua_S,"MBID_MIDDLE",MBID_MIDDLE);
  tolua_constant(tolua_S,"MBID_Button3",MBID_Button3);
  tolua_constant(tolua_S,"MBID_Button4",MBID_Button4);
  tolua_constant(tolua_S,"MBID_Button5",MBID_Button5);
  tolua_constant(tolua_S,"MBID_Button6",MBID_Button6);
  tolua_constant(tolua_S,"MBID_Button7",MBID_Button7);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"InputEventData","InputEventData","",tolua_collect_InputEventData);
  #else
  tolua_cclass(tolua_S,"InputEventData","InputEventData","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"InputEventData");
   tolua_function(tolua_S,"new",tolua_PX2_InputEventData_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_InputEventData_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_InputEventData_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_InputEventData_delete00);
   tolua_variable(tolua_S,"KCode",tolua_get_InputEventData_KCode,tolua_set_InputEventData_KCode);
   tolua_variable(tolua_S,"MButtonID",tolua_get_InputEventData_MButtonID,tolua_set_InputEventData_MButtonID);
   tolua_variable(tolua_S,"MState",tolua_get_InputEventData_MState,tolua_set_InputEventData_MState);
   tolua_variable(tolua_S,"TState",tolua_get_InputEventData_TState,tolua_set_InputEventData_TState);
   tolua_variable(tolua_S,"TStates",tolua_get_InputEventData_TStates,tolua_set_InputEventData_TStates);
   tolua_variable(tolua_S,"ViewID",tolua_get_InputEventData_ViewID,tolua_set_InputEventData_ViewID);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"ScriptManager","ScriptManager","",NULL);
  tolua_beginmodule(tolua_S,"ScriptManager");
   tolua_function(tolua_S,"GetSingleton",tolua_PX2_ScriptManager_GetSingleton00);
   tolua_function(tolua_S,"CallString",tolua_PX2_ScriptManager_CallString00);
   tolua_function(tolua_S,"CallFile",tolua_PX2_ScriptManager_CallFile00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"ResourceManager","ResourceManager","",NULL);
  tolua_beginmodule(tolua_S,"ResourceManager");
   tolua_function(tolua_S,"GetSingleton",tolua_PX2_ResourceManager_GetSingleton00);
   tolua_constant(tolua_S,"LS_UNLOADED",ResourceManager::LS_UNLOADED);
   tolua_constant(tolua_S,"LS_LOADQUE",ResourceManager::LS_LOADQUE);
   tolua_constant(tolua_S,"LS_LOADING",ResourceManager::LS_LOADING);
   tolua_constant(tolua_S,"LS_LOADED",ResourceManager::LS_LOADED);
   tolua_constant(tolua_S,"LS_MAX_STATE",ResourceManager::LS_MAX_STATE);
   tolua_function(tolua_S,"Clear",tolua_PX2_ResourceManager_Clear00);
   tolua_function(tolua_S,"BlockLoad",tolua_PX2_ResourceManager_BlockLoad00);
   tolua_function(tolua_S,"BackgroundLoad",tolua_PX2_ResourceManager_BackgroundLoad00);
   tolua_function(tolua_S,"CheckRes",tolua_PX2_ResourceManager_CheckRes00);
   tolua_function(tolua_S,"GetResLoadState",tolua_PX2_ResourceManager_GetResLoadState00);
   tolua_function(tolua_S,"SetUseGarbageCollect",tolua_PX2_ResourceManager_SetUseGarbageCollect00);
   tolua_function(tolua_S,"IsUseGarbageCollect",tolua_PX2_ResourceManager_IsUseGarbageCollect00);
   tolua_function(tolua_S,"SetGarbageCollectTime",tolua_PX2_ResourceManager_SetGarbageCollectTime00);
   tolua_function(tolua_S,"GetGarbageCollectTime",tolua_PX2_ResourceManager_GetGarbageCollectTime00);
   tolua_function(tolua_S,"LoadBuffer",tolua_PX2_ResourceManager_LoadBuffer00);
   tolua_function(tolua_S,"AddTexPack",tolua_PX2_ResourceManager_AddTexPack00);
   tolua_function(tolua_S,"GetTexPack",tolua_PX2_ResourceManager_GetTexPack00);
   tolua_function(tolua_S,"GetTexPackElement",tolua_PX2_ResourceManager_GetTexPackElement00);
   tolua_function(tolua_S,"GetWriteablePath",tolua_PX2_ResourceManager_GetWriteablePath00);
   tolua_function(tolua_S,"GetResourcePath",tolua_PX2_ResourceManager_GetResourcePath00);
   tolua_function(tolua_S,"DDSKeepCompressed",tolua_PX2_ResourceManager_DDSKeepCompressed00);
   tolua_function(tolua_S,"IsDDSKeepCompressed",tolua_PX2_ResourceManager_IsDDSKeepCompressed00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"LanguageManager","LanguageManager","",NULL);
  tolua_beginmodule(tolua_S,"LanguageManager");
   tolua_function(tolua_S,"GetSingleton",tolua_PX2_LanguageManager_GetSingleton00);
   tolua_function(tolua_S,"Load",tolua_PX2_LanguageManager_Load00);
   tolua_function(tolua_S,"SetLanguage",tolua_PX2_LanguageManager_SetLanguage00);
   tolua_function(tolua_S,"GetValue",tolua_PX2_LanguageManager_GetValue00);
   tolua_function(tolua_S,"GetValue",tolua_PX2_LanguageManager_GetValue01);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Sound","Sound","",tolua_collect_Sound);
  #else
  tolua_cclass(tolua_S,"Sound","Sound","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Sound");
   tolua_function(tolua_S,"delete",tolua_PX2_Sound_delete00);
   tolua_function(tolua_S,"IsPlaying",tolua_PX2_Sound_IsPlaying00);
   tolua_function(tolua_S,"SetVolume",tolua_PX2_Sound_SetVolume00);
   tolua_function(tolua_S,"SetPaused",tolua_PX2_Sound_SetPaused00);
   tolua_function(tolua_S,"Stop",tolua_PX2_Sound_Stop00);
   tolua_function(tolua_S,"SetPosition",tolua_PX2_Sound_SetPosition00);
   tolua_function(tolua_S,"SetVelocity",tolua_PX2_Sound_SetVelocity00);
   tolua_function(tolua_S,"SetDistance",tolua_PX2_Sound_SetDistance00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SoundSystemInitInfo","SoundSystemInitInfo","",tolua_collect_SoundSystemInitInfo);
  #else
  tolua_cclass(tolua_S,"SoundSystemInitInfo","SoundSystemInitInfo","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SoundSystemInitInfo");
   tolua_function(tolua_S,"new",tolua_PX2_SoundSystemInitInfo_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SoundSystemInitInfo_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SoundSystemInitInfo_new00_local);
   tolua_variable(tolua_S,"MaxChannels",tolua_get_SoundSystemInitInfo_MaxChannels,tolua_set_SoundSystemInitInfo_MaxChannels);
   tolua_variable(tolua_S,"DopplerScale",tolua_get_SoundSystemInitInfo_DopplerScale,tolua_set_SoundSystemInitInfo_DopplerScale);
   tolua_variable(tolua_S,"DistanceFactor",tolua_get_SoundSystemInitInfo_DistanceFactor,tolua_set_SoundSystemInitInfo_DistanceFactor);
   tolua_variable(tolua_S,"RolloffScale",tolua_get_SoundSystemInitInfo_RolloffScale,tolua_set_SoundSystemInitInfo_RolloffScale);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SoundCreateInfo3D","SoundCreateInfo3D","",tolua_collect_SoundCreateInfo3D);
  #else
  tolua_cclass(tolua_S,"SoundCreateInfo3D","SoundCreateInfo3D","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SoundCreateInfo3D");
   tolua_function(tolua_S,"new",tolua_PX2_SoundCreateInfo3D_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SoundCreateInfo3D_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SoundCreateInfo3D_new00_local);
   tolua_variable(tolua_S,"MinDistance",tolua_get_SoundCreateInfo3D_MinDistance,tolua_set_SoundCreateInfo3D_MinDistance);
   tolua_variable(tolua_S,"MaxDistance",tolua_get_SoundCreateInfo3D_MaxDistance,tolua_set_SoundCreateInfo3D_MaxDistance);
   tolua_variable(tolua_S,"Volume",tolua_get_SoundCreateInfo3D_Volume,tolua_set_SoundCreateInfo3D_Volume);
   tolua_variable(tolua_S,"Position",tolua_get_SoundCreateInfo3D_Position,tolua_set_SoundCreateInfo3D_Position);
   tolua_variable(tolua_S,"Velocity",tolua_get_SoundCreateInfo3D_Velocity,tolua_set_SoundCreateInfo3D_Velocity);
   tolua_variable(tolua_S,"IsLoop",tolua_get_SoundCreateInfo3D_IsLoop,tolua_set_SoundCreateInfo3D_IsLoop);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"SoundSystem","SoundSystem","",NULL);
  tolua_beginmodule(tolua_S,"SoundSystem");
   tolua_function(tolua_S,"GetSingleton",tolua_PX2_SoundSystem_GetSingleton00);
   tolua_constant(tolua_S,"ST_NULL",SoundSystem::ST_NULL);
   tolua_constant(tolua_S,"ST_FMOD",SoundSystem::ST_FMOD);
   tolua_constant(tolua_S,"ST_ANDROID",SoundSystem::ST_ANDROID);
   tolua_constant(tolua_S,"ST_MARM",SoundSystem::ST_MARM);
   tolua_constant(tolua_S,"ST_MAX_TYPE",SoundSystem::ST_MAX_TYPE);
   tolua_function(tolua_S,"GetSystemType",tolua_PX2_SoundSystem_GetSystemType00);
   tolua_function(tolua_S,"SetMaxNumPlaySameTime",tolua_PX2_SoundSystem_SetMaxNumPlaySameTime00);
   tolua_function(tolua_S,"GetMaxNumPlaySameTime",tolua_PX2_SoundSystem_GetMaxNumPlaySameTime00);
   tolua_function(tolua_S,"SetPlaySameTimeRange",tolua_PX2_SoundSystem_SetPlaySameTimeRange00);
   tolua_function(tolua_S,"GetPlaySameTimeRange",tolua_PX2_SoundSystem_GetPlaySameTimeRange00);
   tolua_function(tolua_S,"SetListener",tolua_PX2_SoundSystem_SetListener00);
   tolua_function(tolua_S,"GetListenerPos",tolua_PX2_SoundSystem_GetListenerPos00);
   tolua_function(tolua_S,"PlayMusic",tolua_PX2_SoundSystem_PlayMusic00);
   tolua_function(tolua_S,"SetMusicVolume",tolua_PX2_SoundSystem_SetMusicVolume00);
   tolua_function(tolua_S,"PlaySound2DControl",tolua_PX2_SoundSystem_PlaySound2DControl00);
   tolua_function(tolua_S,"PlaySound3DControl",tolua_PX2_SoundSystem_PlaySound3DControl00);
   tolua_function(tolua_S,"CanPlaySameTime",tolua_PX2_SoundSystem_CanPlaySameTime00);
   tolua_function(tolua_S,"GetNumPlaySameTime",tolua_PX2_SoundSystem_GetNumPlaySameTime00);
  tolua_endmodule(tolua_S);
  tolua_constant(tolua_S,"UICT_NONE",UICT_NONE);
  tolua_constant(tolua_S,"UICT_PRESSED",UICT_PRESSED);
  tolua_constant(tolua_S,"UICT_RELEASED",UICT_RELEASED);
  tolua_constant(tolua_S,"UICT_RELEASED_NOTVALIED",UICT_RELEASED_NOTVALIED);
  tolua_constant(tolua_S,"UICT_PROGRESSCHANGED",UICT_PROGRESSCHANGED);
  tolua_constant(tolua_S,"UICT_EDITBOX_ATTACHWITHIME",UICT_EDITBOX_ATTACHWITHIME);
  tolua_constant(tolua_S,"UICT_EDITBOX_DETACHWITHIME",UICT_EDITBOX_DETACHWITHIME);
  tolua_constant(tolua_S,"UICT_EDITBOX_TEXTCHANGED",UICT_EDITBOX_TEXTCHANGED);
  tolua_constant(tolua_S,"UICT_EDITBOX_ENTER",UICT_EDITBOX_ENTER);
  tolua_constant(tolua_S,"UICT_MAX_TYPE",UICT_MAX_TYPE);
  tolua_cclass(tolua_S,"UIPicBox","UIPicBox","TriMesh",NULL);
  tolua_beginmodule(tolua_S,"UIPicBox");
   tolua_function(tolua_S,"SetDynamic",tolua_PX2_UIPicBox_SetDynamic00);
   tolua_function(tolua_S,"IsDynamic",tolua_PX2_UIPicBox_IsDynamic00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIFrame","UIFrame","Node",tolua_collect_UIFrame);
  #else
  tolua_cclass(tolua_S,"UIFrame","UIFrame","Node",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIFrame");
   tolua_function(tolua_S,"new",tolua_PX2_UIFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIFrame_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIFrame_delete00);
   tolua_function(tolua_S,"GetObjectByName",tolua_PX2_UIFrame_GetObjectByName00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIStaticText","UIStaticText","TriMesh",tolua_collect_UIStaticText);
  #else
  tolua_cclass(tolua_S,"UIStaticText","UIStaticText","TriMesh",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIStaticText");
   tolua_function(tolua_S,"new",tolua_PX2_UIStaticText_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIStaticText_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIStaticText_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIStaticText_delete00);
   tolua_function(tolua_S,"SetFont",tolua_PX2_UIStaticText_SetFont00);
   tolua_function(tolua_S,"GetFont",tolua_PX2_UIStaticText_GetFont00);
   tolua_function(tolua_S,"SetText",tolua_PX2_UIStaticText_SetText00);
   tolua_function(tolua_S,"GetText",tolua_PX2_UIStaticText_GetText00);
   tolua_function(tolua_S,"SetFontStyle",tolua_PX2_UIStaticText_SetFontStyle00);
   tolua_function(tolua_S,"GetFontStyle",tolua_PX2_UIStaticText_GetFontStyle00);
   tolua_function(tolua_S,"SetDrawStyle",tolua_PX2_UIStaticText_SetDrawStyle00);
   tolua_function(tolua_S,"GetDrawStyle",tolua_PX2_UIStaticText_GetDrawStyle00);
   tolua_function(tolua_S,"SetColor",tolua_PX2_UIStaticText_SetColor00);
   tolua_function(tolua_S,"GetColor",tolua_PX2_UIStaticText_GetColor00);
   tolua_function(tolua_S,"SetAlpha",tolua_PX2_UIStaticText_SetAlpha00);
   tolua_function(tolua_S,"GetAlpha",tolua_PX2_UIStaticText_GetAlpha00);
   tolua_function(tolua_S,"SetFontWidth",tolua_PX2_UIStaticText_SetFontWidth00);
   tolua_function(tolua_S,"GetFontWidth",tolua_PX2_UIStaticText_GetFontWidth00);
   tolua_function(tolua_S,"SetFontHeight",tolua_PX2_UIStaticText_SetFontHeight00);
   tolua_function(tolua_S,"GetFontHeight",tolua_PX2_UIStaticText_GetFontHeight00);
   tolua_function(tolua_S,"SetDoubleSide",tolua_PX2_UIStaticText_SetDoubleSide00);
   tolua_function(tolua_S,"IsDoubleSide",tolua_PX2_UIStaticText_IsDoubleSide00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIInputStaticText","UIInputStaticText","UIStaticText",tolua_collect_UIInputStaticText);
  #else
  tolua_cclass(tolua_S,"UIInputStaticText","UIInputStaticText","UIStaticText",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIInputStaticText");
   tolua_function(tolua_S,"new",tolua_PX2_UIInputStaticText_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIInputStaticText_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIInputStaticText_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIInputStaticText_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIEditBox","UIEditBox","UIFrame",tolua_collect_UIEditBox);
  #else
  tolua_cclass(tolua_S,"UIEditBox","UIEditBox","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIEditBox");
   tolua_function(tolua_S,"new",tolua_PX2_UIEditBox_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIEditBox_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIEditBox_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIEditBox_delete00);
   tolua_function(tolua_S,"SetPassword",tolua_PX2_UIEditBox_SetPassword00);
   tolua_function(tolua_S,"IsPassword",tolua_PX2_UIEditBox_IsPassword00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIEditBox_SetSize00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIEditBox_SetSize01);
   tolua_function(tolua_S,"GetWidth",tolua_PX2_UIEditBox_GetWidth00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_UIEditBox_GetHeight00);
   tolua_function(tolua_S,"GetSize",tolua_PX2_UIEditBox_GetSize00);
   tolua_function(tolua_S,"SetText",tolua_PX2_UIEditBox_SetText00);
   tolua_function(tolua_S,"GetText",tolua_PX2_UIEditBox_GetText00);
   tolua_function(tolua_S,"GetRealText",tolua_PX2_UIEditBox_GetRealText00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIButtonBase","UIButtonBase","UIFrame",tolua_collect_UIButtonBase);
  #else
  tolua_cclass(tolua_S,"UIButtonBase","UIButtonBase","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIButtonBase");
   tolua_function(tolua_S,"delete",tolua_PX2_UIButtonBase_delete00);
   tolua_constant(tolua_S,"BS_NORMAL",UIButtonBase::BS_NORMAL);
   tolua_constant(tolua_S,"BS_OVER",UIButtonBase::BS_OVER);
   tolua_constant(tolua_S,"BS_DOWN",UIButtonBase::BS_DOWN);
   tolua_constant(tolua_S,"BS_DISABLED",UIButtonBase::BS_DISABLED);
   tolua_constant(tolua_S,"BS_MAX_STATE",UIButtonBase::BS_MAX_STATE);
   tolua_function(tolua_S,"SetButtonState",tolua_PX2_UIButtonBase_SetButtonState00);
   tolua_function(tolua_S,"GetButtonState",tolua_PX2_UIButtonBase_GetButtonState00);
   tolua_function(tolua_S,"SetPicBox",tolua_PX2_UIButtonBase_SetPicBox00);
   tolua_function(tolua_S,"GetPicBoxAtState",tolua_PX2_UIButtonBase_GetPicBoxAtState00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIButtonBase_SetSize00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIButtonBase_SetSize01);
   tolua_function(tolua_S,"GetSize",tolua_PX2_UIButtonBase_GetSize00);
   tolua_function(tolua_S,"SetWidth",tolua_PX2_UIButtonBase_SetWidth00);
   tolua_function(tolua_S,"GetWidth",tolua_PX2_UIButtonBase_GetWidth00);
   tolua_function(tolua_S,"SetHeight",tolua_PX2_UIButtonBase_SetHeight00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_UIButtonBase_GetHeight00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIButton","UIButton","UIButtonBase",tolua_collect_UIButton);
  #else
  tolua_cclass(tolua_S,"UIButton","UIButton","UIButtonBase",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIButton");
   tolua_function(tolua_S,"new",tolua_PX2_UIButton_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIButton_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIButton_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIButton_delete00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UICheckButton","UICheckButton","UIButtonBase",tolua_collect_UICheckButton);
  #else
  tolua_cclass(tolua_S,"UICheckButton","UICheckButton","UIButtonBase",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UICheckButton");
   tolua_function(tolua_S,"new",tolua_PX2_UICheckButton_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UICheckButton_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UICheckButton_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UICheckButton_delete00);
   tolua_function(tolua_S,"Enable",tolua_PX2_UICheckButton_Enable00);
   tolua_function(tolua_S,"OnEvent",tolua_PX2_UICheckButton_OnEvent00);
   tolua_function(tolua_S,"OnCheck",tolua_PX2_UICheckButton_OnCheck00);
   tolua_function(tolua_S,"OnDisCheck",tolua_PX2_UICheckButton_OnDisCheck00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIProgressBar","UIProgressBar","UIFrame",tolua_collect_UIProgressBar);
  #else
  tolua_cclass(tolua_S,"UIProgressBar","UIProgressBar","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIProgressBar");
   tolua_function(tolua_S,"new",tolua_PX2_UIProgressBar_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIProgressBar_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIProgressBar_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIProgressBar_delete00);
   tolua_function(tolua_S,"SetBackPicBox",tolua_PX2_UIProgressBar_SetBackPicBox00);
   tolua_function(tolua_S,"SetProgressPicBox",tolua_PX2_UIProgressBar_SetProgressPicBox00);
   tolua_function(tolua_S,"SetOverPicBox",tolua_PX2_UIProgressBar_SetOverPicBox00);
   tolua_function(tolua_S,"GetBackPicBox",tolua_PX2_UIProgressBar_GetBackPicBox00);
   tolua_function(tolua_S,"GetProgressPicBox",tolua_PX2_UIProgressBar_GetProgressPicBox00);
   tolua_function(tolua_S,"GetOverPicBox",tolua_PX2_UIProgressBar_GetOverPicBox00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIProgressBar_SetSize00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIProgressBar_SetSize01);
   tolua_function(tolua_S,"GetWidth",tolua_PX2_UIProgressBar_GetWidth00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_UIProgressBar_GetHeight00);
   tolua_function(tolua_S,"GetSize",tolua_PX2_UIProgressBar_GetSize00);
   tolua_function(tolua_S,"SetProgress",tolua_PX2_UIProgressBar_SetProgress00);
   tolua_function(tolua_S,"GetProgress",tolua_PX2_UIProgressBar_GetProgress00);
   tolua_function(tolua_S,"SetProgressAnimInit",tolua_PX2_UIProgressBar_SetProgressAnimInit00);
   tolua_function(tolua_S,"SetProgressAnim",tolua_PX2_UIProgressBar_SetProgressAnim00);
   tolua_function(tolua_S,"SetProgressAnimSpeed",tolua_PX2_UIProgressBar_SetProgressAnimSpeed00);
   tolua_function(tolua_S,"GetProgressAnimSpeed",tolua_PX2_UIProgressBar_GetProgressAnimSpeed00);
   tolua_function(tolua_S,"GetProgressBarCtrl",tolua_PX2_UIProgressBar_GetProgressBarCtrl00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIRangeFrame","UIRangeFrame","UIFrame",tolua_collect_UIRangeFrame);
  #else
  tolua_cclass(tolua_S,"UIRangeFrame","UIRangeFrame","UIFrame",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIRangeFrame");
   tolua_function(tolua_S,"new",tolua_PX2_UIRangeFrame_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIRangeFrame_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIRangeFrame_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIRangeFrame_delete00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIRangeFrame_SetSize00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIRangeFrame_SetSize01);
   tolua_function(tolua_S,"GetWidth",tolua_PX2_UIRangeFrame_GetWidth00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_UIRangeFrame_GetHeight00);
   tolua_function(tolua_S,"GetSize",tolua_PX2_UIRangeFrame_GetSize00);
   tolua_function(tolua_S,"AttachChild",tolua_PX2_UIRangeFrame_AttachChild00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"UIManager","UIManager","Singleton<UIManager>",NULL);
  tolua_beginmodule(tolua_S,"UIManager");
   tolua_function(tolua_S,"GetDefaultView",tolua_PX2_UIManager_GetDefaultView00);
   tolua_function(tolua_S,"AddUIView",tolua_PX2_UIManager_AddUIView00);
   tolua_function(tolua_S,"GetUIViews",tolua_PX2_UIManager_GetUIViews00);
   tolua_function(tolua_S,"GetUIView",tolua_PX2_UIManager_GetUIView00);
   tolua_function(tolua_S,"CreateUIPicBox",tolua_PX2_UIManager_CreateUIPicBox00);
   tolua_function(tolua_S,"CreateUIPicBox",tolua_PX2_UIManager_CreateUIPicBox01);
   tolua_function(tolua_S,"CreateUIStaticText",tolua_PX2_UIManager_CreateUIStaticText00);
   tolua_function(tolua_S,"CreateUIFrame",tolua_PX2_UIManager_CreateUIFrame00);
   tolua_function(tolua_S,"CreateUIButton",tolua_PX2_UIManager_CreateUIButton00);
   tolua_variable(tolua_S,"__EventHandler__",tolua_get_UIManager___EventHandler__,NULL);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"UIView","UIView","",tolua_collect_UIView);
  #else
  tolua_cclass(tolua_S,"UIView","UIView","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"UIView");
   tolua_function(tolua_S,"new",tolua_PX2_UIView_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_UIView_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_UIView_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_UIView_delete00);
   tolua_function(tolua_S,"GetID",tolua_PX2_UIView_GetID00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIView_SetSize00);
   tolua_function(tolua_S,"SetSize",tolua_PX2_UIView_SetSize01);
   tolua_function(tolua_S,"GetSize",tolua_PX2_UIView_GetSize00);
   tolua_function(tolua_S,"SetWidth",tolua_PX2_UIView_SetWidth00);
   tolua_function(tolua_S,"GetWidth",tolua_PX2_UIView_GetWidth00);
   tolua_function(tolua_S,"SetHeight",tolua_PX2_UIView_SetHeight00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_UIView_GetHeight00);
   tolua_function(tolua_S,"SetRenderer",tolua_PX2_UIView_SetRenderer00);
   tolua_function(tolua_S,"GetRenderer",tolua_PX2_UIView_GetRenderer00);
   tolua_function(tolua_S,"SetMainFrame",tolua_PX2_UIView_SetMainFrame00);
   tolua_function(tolua_S,"GetMainFrame",tolua_PX2_UIView_GetMainFrame00);
   tolua_function(tolua_S,"GetCamera",tolua_PX2_UIView_GetCamera00);
   tolua_function(tolua_S,"GetCuller",tolua_PX2_UIView_GetCuller00);
   tolua_function(tolua_S,"GetPickedPicBoxs",tolua_PX2_UIView_GetPickedPicBoxs00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"Project","Project","Singleton<Project>",NULL);
  tolua_beginmodule(tolua_S,"Project");
   tolua_function(tolua_S,"GetSingleton",tolua_PX2_Project_GetSingleton00);
   tolua_function(tolua_S,"GetSingletonPtr",tolua_PX2_Project_GetSingletonPtr00);
   tolua_function(tolua_S,"GetName",tolua_PX2_Project_GetName00);
   tolua_function(tolua_S,"GetWidth",tolua_PX2_Project_GetWidth00);
   tolua_function(tolua_S,"GetHeight",tolua_PX2_Project_GetHeight00);
   tolua_function(tolua_S,"SetColor",tolua_PX2_Project_SetColor00);
   tolua_function(tolua_S,"GetColor",tolua_PX2_Project_GetColor00);
   tolua_function(tolua_S,"SetScene",tolua_PX2_Project_SetScene00);
   tolua_function(tolua_S,"GetScene",tolua_PX2_Project_GetScene00);
   tolua_function(tolua_S,"GetUI",tolua_PX2_Project_GetUI00);
   tolua_function(tolua_S,"SetShowProjectInfo",tolua_PX2_Project_SetShowProjectInfo00);
   tolua_function(tolua_S,"IsShowProjectInfo",tolua_PX2_Project_IsShowProjectInfo00);
   tolua_function(tolua_S,"SetPublish",tolua_PX2_Project_SetPublish00);
   tolua_function(tolua_S,"IsPublish",tolua_PX2_Project_IsPublish00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"GameManager","GameManager","Singleton<GameManager>",NULL);
  tolua_beginmodule(tolua_S,"GameManager");
   tolua_function(tolua_S,"CT_Movable",tolua_PX2_GameManager_CT_Movable00);
   tolua_function(tolua_S,"CT_Node",tolua_PX2_GameManager_CT_Node00);
   tolua_function(tolua_S,"CT_UIFrame",tolua_PX2_GameManager_CT_UIFrame00);
   tolua_function(tolua_S,"CT_UIPicBox",tolua_PX2_GameManager_CT_UIPicBox00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Netable","Netable","Controlledable",tolua_collect_Netable);
  #else
  tolua_cclass(tolua_S,"Netable","Netable","Controlledable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Netable");
   tolua_function(tolua_S,"new",tolua_PX2_Netable_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Netable_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Netable_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Netable_delete00);
   tolua_function(tolua_S,"ComeInToEventWorld",tolua_PX2_Netable_ComeInToEventWorld00);
   tolua_function(tolua_S,"GoOutFromEventWorld",tolua_PX2_Netable_GoOutFromEventWorld00);
   tolua_function(tolua_S,"IsInEventWorld",tolua_PX2_Netable_IsInEventWorld00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Gameable","Gameable","Netable",tolua_collect_Gameable);
  #else
  tolua_cclass(tolua_S,"Gameable","Gameable","Netable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Gameable");
   tolua_function(tolua_S,"new",tolua_PX2_Gameable_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Gameable_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Gameable_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Gameable_delete00);
   tolua_function(tolua_S,"Enable",tolua_PX2_Gameable_Enable00);
   tolua_function(tolua_S,"IsEnable",tolua_PX2_Gameable_IsEnable00);
   tolua_function(tolua_S,"SetServerID",tolua_PX2_Gameable_SetServerID00);
   tolua_function(tolua_S,"GetServerID",tolua_PX2_Gameable_GetServerID00);
   tolua_function(tolua_S,"SetExtraDataInt",tolua_PX2_Gameable_SetExtraDataInt00);
   tolua_function(tolua_S,"GetExtraDataInt",tolua_PX2_Gameable_GetExtraDataInt00);
   tolua_function(tolua_S,"SetExtraDataFloat",tolua_PX2_Gameable_SetExtraDataFloat00);
   tolua_function(tolua_S,"GetExtraDataFloat",tolua_PX2_Gameable_GetExtraDataFloat00);
   tolua_function(tolua_S,"SetScriptHandler_Init",tolua_PX2_Gameable_SetScriptHandler_Init00);
   tolua_function(tolua_S,"GetScriptHandler_Init",tolua_PX2_Gameable_GetScriptHandler_Init00);
   tolua_function(tolua_S,"Initlize",tolua_PX2_Gameable_Initlize00);
   tolua_function(tolua_S,"SaveToXML",tolua_PX2_Gameable_SaveToXML00);
   tolua_function(tolua_S,"LoadFromXML",tolua_PX2_Gameable_LoadFromXML00);
   tolua_function(tolua_S,"LoadFromXML",tolua_PX2_Gameable_LoadFromXML01);
   tolua_function(tolua_S,"SetUserScriptName",tolua_PX2_Gameable_SetUserScriptName00);
   tolua_function(tolua_S,"GetUserScriptName",tolua_PX2_Gameable_GetUserScriptName00);
   tolua_function(tolua_S,"GetScriptName",tolua_PX2_Gameable_GetScriptName00);
   tolua_function(tolua_S,"RegistToScriptSystem",tolua_PX2_Gameable_RegistToScriptSystem00);
   tolua_function(tolua_S,"UnRegistToScriptSystem",tolua_PX2_Gameable_UnRegistToScriptSystem00);
   tolua_function(tolua_S,"IsRegistedToScriptSystem",tolua_PX2_Gameable_IsRegistedToScriptSystem00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Animation","Animation","Gameable",tolua_collect_Animation);
  #else
  tolua_cclass(tolua_S,"Animation","Animation","Gameable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Animation");
   tolua_function(tolua_S,"delete",tolua_PX2_Animation_delete00);
   tolua_constant(tolua_S,"AT_2DFRAMES",Animation::AT_2DFRAMES);
   tolua_constant(tolua_S,"AT_2DSKELETON",Animation::AT_2DSKELETON);
   tolua_constant(tolua_S,"AT_3DSKELETON",Animation::AT_3DSKELETON);
   tolua_constant(tolua_S,"AT_MAX_TYPE",Animation::AT_MAX_TYPE);
   tolua_function(tolua_S,"GetAnimType",tolua_PX2_Animation_GetAnimType00);
   tolua_function(tolua_S,"SetNormalTime",tolua_PX2_Animation_SetNormalTime00);
   tolua_function(tolua_S,"GetNormalTime",tolua_PX2_Animation_GetNormalTime00);
   tolua_function(tolua_S,"SetTime",tolua_PX2_Animation_SetTime00);
   tolua_function(tolua_S,"GetTime",tolua_PX2_Animation_GetTime00);
   tolua_function(tolua_S,"SetFilename",tolua_PX2_Animation_SetFilename00);
   tolua_function(tolua_S,"GetFilename",tolua_PX2_Animation_GetFilename00);
   tolua_function(tolua_S,"SetPlayOnce",tolua_PX2_Animation_SetPlayOnce00);
   tolua_function(tolua_S,"IsPlayOnce",tolua_PX2_Animation_IsPlayOnce00);
   tolua_function(tolua_S,"GetCharacter",tolua_PX2_Animation_GetCharacter00);
   tolua_function(tolua_S,"LetCharacterPlay",tolua_PX2_Animation_LetCharacterPlay00);
   tolua_function(tolua_S,"OnPlay",tolua_PX2_Animation_OnPlay00);
   tolua_function(tolua_S,"OnRemove",tolua_PX2_Animation_OnRemove00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Animation2DFrames8","Animation2DFrames8","Animation",tolua_collect_Animation2DFrames8);
  #else
  tolua_cclass(tolua_S,"Animation2DFrames8","Animation2DFrames8","Animation",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Animation2DFrames8");
   tolua_function(tolua_S,"new",tolua_PX2_Animation2DFrames8_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Animation2DFrames8_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Animation2DFrames8_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Animation2DFrames8_delete00);
   tolua_function(tolua_S,"Stop",tolua_PX2_Animation2DFrames8_Stop00);
   tolua_function(tolua_S,"IsPlaying",tolua_PX2_Animation2DFrames8_IsPlaying00);
   tolua_function(tolua_S,"SetTime",tolua_PX2_Animation2DFrames8_SetTime00);
   tolua_function(tolua_S,"SetInterval",tolua_PX2_Animation2DFrames8_SetInterval00);
   tolua_function(tolua_S,"GetInterval",tolua_PX2_Animation2DFrames8_GetInterval00);
   tolua_function(tolua_S,"SetFilename",tolua_PX2_Animation2DFrames8_SetFilename00);
   tolua_function(tolua_S,"GetNumFramesPerDir",tolua_PX2_Animation2DFrames8_GetNumFramesPerDir00);
   tolua_function(tolua_S,"SetPlayOnce",tolua_PX2_Animation2DFrames8_SetPlayOnce00);
   tolua_function(tolua_S,"SetWorldRunDir",tolua_PX2_Animation2DFrames8_SetWorldRunDir00);
   tolua_function(tolua_S,"GetWorldRunDir",tolua_PX2_Animation2DFrames8_GetWorldRunDir00);
   tolua_function(tolua_S,"SetAnimSize",tolua_PX2_Animation2DFrames8_SetAnimSize00);
   tolua_function(tolua_S,"OnPlay",tolua_PX2_Animation2DFrames8_OnPlay00);
   tolua_function(tolua_S,"OnRemove",tolua_PX2_Animation2DFrames8_OnRemove00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Actor","Actor","Gameable",tolua_collect_Actor);
  #else
  tolua_cclass(tolua_S,"Actor","Actor","Gameable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Actor");
   tolua_function(tolua_S,"new",tolua_PX2_Actor_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Actor_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Actor_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Actor_delete00);
   tolua_function(tolua_S,"Update",tolua_PX2_Actor_Update00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"EffectActor","EffectActor","Actor",tolua_collect_EffectActor);
  #else
  tolua_cclass(tolua_S,"EffectActor","EffectActor","Actor",NULL);
  #endif
  tolua_beginmodule(tolua_S,"EffectActor");
   tolua_function(tolua_S,"new",tolua_PX2_EffectActor_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_EffectActor_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_EffectActor_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_EffectActor_delete00);
   tolua_function(tolua_S,"DoEnter",tolua_PX2_EffectActor_DoEnter00);
   tolua_function(tolua_S,"DoExecute",tolua_PX2_EffectActor_DoExecute00);
   tolua_function(tolua_S,"DoLeave",tolua_PX2_EffectActor_DoLeave00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"CameraActor","CameraActor","Actor",tolua_collect_CameraActor);
  #else
  tolua_cclass(tolua_S,"CameraActor","CameraActor","Actor",NULL);
  #endif
  tolua_beginmodule(tolua_S,"CameraActor");
   tolua_function(tolua_S,"new",tolua_PX2_CameraActor_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_CameraActor_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_CameraActor_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_CameraActor_delete00);
   tolua_function(tolua_S,"SetCamera",tolua_PX2_CameraActor_SetCamera00);
   tolua_function(tolua_S,"GetCamera",tolua_PX2_CameraActor_GetCamera00);
   tolua_function(tolua_S,"GetCameraNode",tolua_PX2_CameraActor_GetCameraNode00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Item","Item","Actor",tolua_collect_Item);
  #else
  tolua_cclass(tolua_S,"Item","Item","Actor",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Item");
   tolua_function(tolua_S,"new",tolua_PX2_Item_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Item_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Item_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Item_delete00);
   tolua_function(tolua_S,"SetTypeString",tolua_PX2_Item_SetTypeString00);
   tolua_function(tolua_S,"GetTypeString",tolua_PX2_Item_GetTypeString00);
   tolua_function(tolua_S,"SetCanBeEquipped",tolua_PX2_Item_SetCanBeEquipped00);
   tolua_function(tolua_S,"IsCanBeEquipped",tolua_PX2_Item_IsCanBeEquipped00);
   tolua_function(tolua_S,"SetEquippedDoUse",tolua_PX2_Item_SetEquippedDoUse00);
   tolua_function(tolua_S,"IsEquippedDoUse",tolua_PX2_Item_IsEquippedDoUse00);
   tolua_function(tolua_S,"IsEquipped",tolua_PX2_Item_IsEquipped00);
   tolua_function(tolua_S,"SetLevel",tolua_PX2_Item_SetLevel00);
   tolua_function(tolua_S,"GetLevel",tolua_PX2_Item_GetLevel00);
   tolua_function(tolua_S,"CanUseNow",tolua_PX2_Item_CanUseNow00);
   tolua_function(tolua_S,"Use",tolua_PX2_Item_Use00);
   tolua_function(tolua_S,"IsUsing",tolua_PX2_Item_IsUsing00);
   tolua_function(tolua_S,"SetScriptHandler_Use",tolua_PX2_Item_SetScriptHandler_Use00);
   tolua_function(tolua_S,"GetScriptHandler_Use",tolua_PX2_Item_GetScriptHandler_Use00);
   tolua_function(tolua_S,"AddScriptHandler_OnBeAffect",tolua_PX2_Item_AddScriptHandler_OnBeAffect00);
   tolua_function(tolua_S,"RemoveScriptHandler_OnBeAffect",tolua_PX2_Item_RemoveScriptHandler_OnBeAffect00);
   tolua_function(tolua_S,"AddScriptHandler_OnSucAffect",tolua_PX2_Item_AddScriptHandler_OnSucAffect00);
   tolua_function(tolua_S,"RemoveScriptHandler_OnSucAffect",tolua_PX2_Item_RemoveScriptHandler_OnSucAffect00);
   tolua_function(tolua_S,"OnBeAffect",tolua_PX2_Item_OnBeAffect00);
   tolua_function(tolua_S,"OnSucAffect",tolua_PX2_Item_OnSucAffect00);
   tolua_function(tolua_S,"GetCharacter",tolua_PX2_Item_GetCharacter00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Buf","Buf","Gameable",tolua_collect_Buf);
  #else
  tolua_cclass(tolua_S,"Buf","Buf","Gameable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Buf");
   tolua_function(tolua_S,"new",tolua_PX2_Buf_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Buf_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Buf_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Buf_delete00);
   tolua_function(tolua_S,"Update",tolua_PX2_Buf_Update00);
   tolua_function(tolua_S,"SetID",tolua_PX2_Buf_SetID00);
   tolua_function(tolua_S,"GetID",tolua_PX2_Buf_GetID00);
   tolua_function(tolua_S,"SetTypeID",tolua_PX2_Buf_SetTypeID00);
   tolua_function(tolua_S,"GetTypeID",tolua_PX2_Buf_GetTypeID00);
   tolua_function(tolua_S,"SetClass",tolua_PX2_Buf_SetClass00);
   tolua_function(tolua_S,"GetClass",tolua_PX2_Buf_GetClass00);
   tolua_function(tolua_S,"SetClassOnlyOne",tolua_PX2_Buf_SetClassOnlyOne00);
   tolua_function(tolua_S,"IsClassOnlyOne",tolua_PX2_Buf_IsClassOnlyOne00);
   tolua_function(tolua_S,"SetTime",tolua_PX2_Buf_SetTime00);
   tolua_function(tolua_S,"GetTime",tolua_PX2_Buf_GetTime00);
   tolua_function(tolua_S,"ResetTimeAdded",tolua_PX2_Buf_ResetTimeAdded00);
   tolua_function(tolua_S,"GetTimeAdded",tolua_PX2_Buf_GetTimeAdded00);
   tolua_function(tolua_S,"SetUseCenterIDAlive",tolua_PX2_Buf_SetUseCenterIDAlive00);
   tolua_function(tolua_S,"IsUseCenterIDAlive",tolua_PX2_Buf_IsUseCenterIDAlive00);
   tolua_function(tolua_S,"SetUseRange",tolua_PX2_Buf_SetUseRange00);
   tolua_function(tolua_S,"IsUseRange",tolua_PX2_Buf_IsUseRange00);
   tolua_function(tolua_S,"SetCenter",tolua_PX2_Buf_SetCenter00);
   tolua_function(tolua_S,"GetCenter",tolua_PX2_Buf_GetCenter00);
   tolua_function(tolua_S,"SetCenterCharacterID",tolua_PX2_Buf_SetCenterCharacterID00);
   tolua_function(tolua_S,"GetCenterCharacterID",tolua_PX2_Buf_GetCenterCharacterID00);
   tolua_function(tolua_S,"SetRadius",tolua_PX2_Buf_SetRadius00);
   tolua_function(tolua_S,"GetRadius",tolua_PX2_Buf_GetRadius00);
   tolua_function(tolua_S,"SetOver",tolua_PX2_Buf_SetOver00);
   tolua_function(tolua_S,"IsOver",tolua_PX2_Buf_IsOver00);
   tolua_function(tolua_S,"OnAdded",tolua_PX2_Buf_OnAdded00);
   tolua_function(tolua_S,"OnRemoved",tolua_PX2_Buf_OnRemoved00);
   tolua_function(tolua_S,"GetAddedIDString",tolua_PX2_Buf_GetAddedIDString00);
   tolua_function(tolua_S,"SetScriptHandler_OnAdded",tolua_PX2_Buf_SetScriptHandler_OnAdded00);
   tolua_function(tolua_S,"GetScriptHandler_OnAdded",tolua_PX2_Buf_GetScriptHandler_OnAdded00);
   tolua_function(tolua_S,"SetScriptHandler_OnRemoved",tolua_PX2_Buf_SetScriptHandler_OnRemoved00);
   tolua_function(tolua_S,"GetScirptHandler_OnRemoved",tolua_PX2_Buf_GetScirptHandler_OnRemoved00);
   tolua_function(tolua_S,"GetCharacter",tolua_PX2_Buf_GetCharacter00);
   tolua_function(tolua_S,"GetNextID",tolua_PX2_Buf_GetNextID00);
   tolua_function(tolua_S,"GetNextIDStr",tolua_PX2_Buf_GetNextIDStr00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"AimBuf","AimBuf","Buf",NULL);
  tolua_beginmodule(tolua_S,"AimBuf");
   tolua_function(tolua_S,"Create",tolua_PX2_AimBuf_Create00);
   tolua_constant(tolua_S,"M_CANTBEANIMED",AimBuf::M_CANTBEANIMED);
   tolua_constant(tolua_S,"M_AIMONLYONE",AimBuf::M_AIMONLYONE);
   tolua_constant(tolua_S,"M_MAX_MODE",AimBuf::M_MAX_MODE);
   tolua_function(tolua_S,"SetMode",tolua_PX2_AimBuf_SetMode00);
   tolua_function(tolua_S,"GetMode",tolua_PX2_AimBuf_GetMode00);
   tolua_function(tolua_S,"SetValue",tolua_PX2_AimBuf_SetValue00);
   tolua_function(tolua_S,"GetValue",tolua_PX2_AimBuf_GetValue00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"FreezeBuf","FreezeBuf","Buf",tolua_collect_FreezeBuf);
  #else
  tolua_cclass(tolua_S,"FreezeBuf","FreezeBuf","Buf",NULL);
  #endif
  tolua_beginmodule(tolua_S,"FreezeBuf");
   tolua_function(tolua_S,"new",tolua_PX2_FreezeBuf_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_FreezeBuf_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_FreezeBuf_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_FreezeBuf_delete00);
   tolua_function(tolua_S,"Create",tolua_PX2_FreezeBuf_Create00);
   tolua_function(tolua_S,"Update",tolua_PX2_FreezeBuf_Update00);
   tolua_function(tolua_S,"OnAdded",tolua_PX2_FreezeBuf_OnAdded00);
   tolua_function(tolua_S,"OnRemoved",tolua_PX2_FreezeBuf_OnRemoved00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"EffectBuf","EffectBuf","Buf",tolua_collect_EffectBuf);
  #else
  tolua_cclass(tolua_S,"EffectBuf","EffectBuf","Buf",NULL);
  #endif
  tolua_beginmodule(tolua_S,"EffectBuf");
   tolua_function(tolua_S,"new",tolua_PX2_EffectBuf_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_EffectBuf_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_EffectBuf_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_EffectBuf_delete00);
   tolua_function(tolua_S,"Create",tolua_PX2_EffectBuf_Create00);
   tolua_function(tolua_S,"SetEffectFilename",tolua_PX2_EffectBuf_SetEffectFilename00);
   tolua_function(tolua_S,"GetEffectFilename",tolua_PX2_EffectBuf_GetEffectFilename00);
   tolua_function(tolua_S,"SetAnchor",tolua_PX2_EffectBuf_SetAnchor00);
   tolua_function(tolua_S,"GetAnchor",tolua_PX2_EffectBuf_GetAnchor00);
   tolua_function(tolua_S,"OnAdded",tolua_PX2_EffectBuf_OnAdded00);
   tolua_function(tolua_S,"OnRemoved",tolua_PX2_EffectBuf_OnRemoved00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"HPBuf","HPBuf","Buf",tolua_collect_HPBuf);
  #else
  tolua_cclass(tolua_S,"HPBuf","HPBuf","Buf",NULL);
  #endif
  tolua_beginmodule(tolua_S,"HPBuf");
   tolua_function(tolua_S,"new",tolua_PX2_HPBuf_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_HPBuf_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_HPBuf_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_HPBuf_delete00);
   tolua_function(tolua_S,"Create",tolua_PX2_HPBuf_Create00);
   tolua_function(tolua_S,"Update",tolua_PX2_HPBuf_Update00);
   tolua_constant(tolua_S,"M_IMMEDIATE",HPBuf::M_IMMEDIATE);
   tolua_constant(tolua_S,"M_LASTING",HPBuf::M_LASTING);
   tolua_constant(tolua_S,"M_NOREDUCE",HPBuf::M_NOREDUCE);
   tolua_constant(tolua_S,"M_MAX_MODE",HPBuf::M_MAX_MODE);
   tolua_function(tolua_S,"SetMode",tolua_PX2_HPBuf_SetMode00);
   tolua_function(tolua_S,"GetMode",tolua_PX2_HPBuf_GetMode00);
   tolua_function(tolua_S,"SetValue",tolua_PX2_HPBuf_SetValue00);
   tolua_function(tolua_S,"GetValue",tolua_PX2_HPBuf_GetValue00);
   tolua_function(tolua_S,"OnAdded",tolua_PX2_HPBuf_OnAdded00);
   tolua_function(tolua_S,"OnRemoved",tolua_PX2_HPBuf_OnRemoved00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SpeedBuf","SpeedBuf","Buf",tolua_collect_SpeedBuf);
  #else
  tolua_cclass(tolua_S,"SpeedBuf","SpeedBuf","Buf",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SpeedBuf");
   tolua_function(tolua_S,"new",tolua_PX2_SpeedBuf_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SpeedBuf_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SpeedBuf_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SpeedBuf_delete00);
   tolua_function(tolua_S,"Create",tolua_PX2_SpeedBuf_Create00);
   tolua_function(tolua_S,"Update",tolua_PX2_SpeedBuf_Update00);
   tolua_constant(tolua_S,"M_IMMEDIATE",SpeedBuf::M_IMMEDIATE);
   tolua_constant(tolua_S,"M_LASTING",SpeedBuf::M_LASTING);
   tolua_constant(tolua_S,"M_DOSTOP",SpeedBuf::M_DOSTOP);
   tolua_constant(tolua_S,"M_MAX_MODE",SpeedBuf::M_MAX_MODE);
   tolua_function(tolua_S,"SetMode",tolua_PX2_SpeedBuf_SetMode00);
   tolua_function(tolua_S,"GetMode",tolua_PX2_SpeedBuf_GetMode00);
   tolua_function(tolua_S,"SetValue",tolua_PX2_SpeedBuf_SetValue00);
   tolua_function(tolua_S,"GetValue",tolua_PX2_SpeedBuf_GetValue00);
   tolua_function(tolua_S,"SetLastingMaxTime",tolua_PX2_SpeedBuf_SetLastingMaxTime00);
   tolua_function(tolua_S,"GetLastingMaxTime",tolua_PX2_SpeedBuf_GetLastingMaxTime00);
   tolua_function(tolua_S,"OnAdded",tolua_PX2_SpeedBuf_OnAdded00);
   tolua_function(tolua_S,"OnRemoved",tolua_PX2_SpeedBuf_OnRemoved00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"GroupBuf","GroupBuf","Buf",tolua_collect_GroupBuf);
  #else
  tolua_cclass(tolua_S,"GroupBuf","GroupBuf","Buf",NULL);
  #endif
  tolua_beginmodule(tolua_S,"GroupBuf");
   tolua_function(tolua_S,"new",tolua_PX2_GroupBuf_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_GroupBuf_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_GroupBuf_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_GroupBuf_delete00);
   tolua_function(tolua_S,"Create",tolua_PX2_GroupBuf_Create00);
   tolua_function(tolua_S,"Update",tolua_PX2_GroupBuf_Update00);
   tolua_function(tolua_S,"SetToGroupCharacterID",tolua_PX2_GroupBuf_SetToGroupCharacterID00);
   tolua_function(tolua_S,"GetBeforeGroup",tolua_PX2_GroupBuf_GetBeforeGroup00);
   tolua_function(tolua_S,"OnAdded",tolua_PX2_GroupBuf_OnAdded00);
   tolua_function(tolua_S,"OnRemoved",tolua_PX2_GroupBuf_OnRemoved00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SkillCDTimeBuf","SkillCDTimeBuf","Buf",tolua_collect_SkillCDTimeBuf);
  #else
  tolua_cclass(tolua_S,"SkillCDTimeBuf","SkillCDTimeBuf","Buf",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SkillCDTimeBuf");
   tolua_function(tolua_S,"new",tolua_PX2_SkillCDTimeBuf_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SkillCDTimeBuf_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SkillCDTimeBuf_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SkillCDTimeBuf_delete00);
   tolua_function(tolua_S,"Create",tolua_PX2_SkillCDTimeBuf_Create00);
   tolua_function(tolua_S,"Update",tolua_PX2_SkillCDTimeBuf_Update00);
   tolua_constant(tolua_S,"M_IMMEDIATE",SkillCDTimeBuf::M_IMMEDIATE);
   tolua_constant(tolua_S,"M_LASTING",SkillCDTimeBuf::M_LASTING);
   tolua_constant(tolua_S,"M_MAX_MODE",SkillCDTimeBuf::M_MAX_MODE);
   tolua_function(tolua_S,"SetMode",tolua_PX2_SkillCDTimeBuf_SetMode00);
   tolua_function(tolua_S,"GetMode",tolua_PX2_SkillCDTimeBuf_GetMode00);
   tolua_function(tolua_S,"SetValue",tolua_PX2_SkillCDTimeBuf_SetValue00);
   tolua_function(tolua_S,"GetValue",tolua_PX2_SkillCDTimeBuf_GetValue00);
   tolua_function(tolua_S,"SetLastingMaxTime",tolua_PX2_SkillCDTimeBuf_SetLastingMaxTime00);
   tolua_function(tolua_S,"GetLastingMaxTime",tolua_PX2_SkillCDTimeBuf_GetLastingMaxTime00);
   tolua_function(tolua_S,"SetSkillName",tolua_PX2_SkillCDTimeBuf_SetSkillName00);
   tolua_function(tolua_S,"GetSkillName",tolua_PX2_SkillCDTimeBuf_GetSkillName00);
   tolua_function(tolua_S,"OnAdded",tolua_PX2_SkillCDTimeBuf_OnAdded00);
   tolua_function(tolua_S,"OnRemoved",tolua_PX2_SkillCDTimeBuf_OnRemoved00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SkillCriticalBuf","SkillCriticalBuf","Buf",tolua_collect_SkillCriticalBuf);
  #else
  tolua_cclass(tolua_S,"SkillCriticalBuf","SkillCriticalBuf","Buf",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SkillCriticalBuf");
   tolua_function(tolua_S,"new",tolua_PX2_SkillCriticalBuf_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SkillCriticalBuf_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SkillCriticalBuf_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SkillCriticalBuf_delete00);
   tolua_function(tolua_S,"Create",tolua_PX2_SkillCriticalBuf_Create00);
   tolua_function(tolua_S,"SetSkillName",tolua_PX2_SkillCriticalBuf_SetSkillName00);
   tolua_function(tolua_S,"GetSkillName",tolua_PX2_SkillCriticalBuf_GetSkillName00);
   tolua_function(tolua_S,"SetPercent",tolua_PX2_SkillCriticalBuf_SetPercent00);
   tolua_function(tolua_S,"GetPercent",tolua_PX2_SkillCriticalBuf_GetPercent00);
   tolua_function(tolua_S,"SetProbability",tolua_PX2_SkillCriticalBuf_SetProbability00);
   tolua_function(tolua_S,"GetProbability",tolua_PX2_SkillCriticalBuf_GetProbability00);
   tolua_function(tolua_S,"OnAdded",tolua_PX2_SkillCriticalBuf_OnAdded00);
   tolua_function(tolua_S,"OnRemoved",tolua_PX2_SkillCriticalBuf_OnRemoved00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Skill","Skill","Gameable",tolua_collect_Skill);
  #else
  tolua_cclass(tolua_S,"Skill","Skill","Gameable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Skill");
   tolua_function(tolua_S,"new",tolua_PX2_Skill_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Skill_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Skill_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Skill_delete00);
   tolua_function(tolua_S,"GetCharacter",tolua_PX2_Skill_GetCharacter00);
   tolua_function(tolua_S,"OnAdded",tolua_PX2_Skill_OnAdded00);
   tolua_function(tolua_S,"OnRemove",tolua_PX2_Skill_OnRemove00);
   tolua_function(tolua_S,"Initlize",tolua_PX2_Skill_Initlize00);
   tolua_function(tolua_S,"Update",tolua_PX2_Skill_Update00);
   tolua_function(tolua_S,"SetID",tolua_PX2_Skill_SetID00);
   tolua_function(tolua_S,"GetID",tolua_PX2_Skill_GetID00);
   tolua_function(tolua_S,"SetTypeID",tolua_PX2_Skill_SetTypeID00);
   tolua_function(tolua_S,"GetTypeID",tolua_PX2_Skill_GetTypeID00);
   tolua_function(tolua_S,"SetTypeString",tolua_PX2_Skill_SetTypeString00);
   tolua_function(tolua_S,"GetTypeString",tolua_PX2_Skill_GetTypeString00);
   tolua_function(tolua_S,"SetDefPointer",tolua_PX2_Skill_SetDefPointer00);
   tolua_function(tolua_S,"GetDefPointer",tolua_PX2_Skill_GetDefPointer00);
   tolua_function(tolua_S,"SetActivateProbability",tolua_PX2_Skill_SetActivateProbability00);
   tolua_function(tolua_S,"GetActivateProbability",tolua_PX2_Skill_GetActivateProbability00);
   tolua_function(tolua_S,"SetPriority",tolua_PX2_Skill_SetPriority00);
   tolua_function(tolua_S,"GetPriority",tolua_PX2_Skill_GetPriority00);
   tolua_function(tolua_S,"SetPositive",tolua_PX2_Skill_SetPositive00);
   tolua_function(tolua_S,"IsPositive",tolua_PX2_Skill_IsPositive00);
   tolua_function(tolua_S,"SetDieActivate",tolua_PX2_Skill_SetDieActivate00);
   tolua_function(tolua_S,"IsDieActivate",tolua_PX2_Skill_IsDieActivate00);
   tolua_function(tolua_S,"SetBeRangeAffect",tolua_PX2_Skill_SetBeRangeAffect00);
   tolua_function(tolua_S,"IsRangeAffect",tolua_PX2_Skill_IsRangeAffect00);
   tolua_function(tolua_S,"SetNumTargetsLock",tolua_PX2_Skill_SetNumTargetsLock00);
   tolua_function(tolua_S,"GetNumTargetsLock",tolua_PX2_Skill_GetNumTargetsLock00);
   tolua_constant(tolua_S,"RT_NEAR",Skill::RT_NEAR);
   tolua_constant(tolua_S,"RT_FAR",Skill::RT_FAR);
   tolua_constant(tolua_S,"RT_MAX_TYPE",Skill::RT_MAX_TYPE);
   tolua_function(tolua_S,"SetRangeType",tolua_PX2_Skill_SetRangeType00);
   tolua_function(tolua_S,"GetRangeType",tolua_PX2_Skill_GetRangeType00);
   tolua_constant(tolua_S,"ST_SPHERE",Skill::ST_SPHERE);
   tolua_constant(tolua_S,"ST_FAN",Skill::ST_FAN);
   tolua_constant(tolua_S,"ST_BOX",Skill::ST_BOX);
   tolua_constant(tolua_S,"ST_MAX_TYPE",Skill::ST_MAX_TYPE);
   tolua_function(tolua_S,"SetShapeType",tolua_PX2_Skill_SetShapeType00);
   tolua_function(tolua_S,"GetShapeType",tolua_PX2_Skill_GetShapeType00);
   tolua_function(tolua_S,"SetHasTrack",tolua_PX2_Skill_SetHasTrack00);
   tolua_function(tolua_S,"IsHasTrack",tolua_PX2_Skill_IsHasTrack00);
   tolua_function(tolua_S,"SetAbleToBuilding",tolua_PX2_Skill_SetAbleToBuilding00);
   tolua_function(tolua_S,"IsAbleToBuilding",tolua_PX2_Skill_IsAbleToBuilding00);
   tolua_function(tolua_S,"SetNumMultiInstance",tolua_PX2_Skill_SetNumMultiInstance00);
   tolua_function(tolua_S,"GetNumMultiInstance",tolua_PX2_Skill_GetNumMultiInstance00);
   tolua_function(tolua_S,"SetLevel",tolua_PX2_Skill_SetLevel00);
   tolua_function(tolua_S,"GetLevel",tolua_PX2_Skill_GetLevel00);
   tolua_function(tolua_S,"SetMaxLevel",tolua_PX2_Skill_SetMaxLevel00);
   tolua_function(tolua_S,"GetMaxLevel",tolua_PX2_Skill_GetMaxLevel00);
   tolua_function(tolua_S,"SetScriptHandler_OnAdded",tolua_PX2_Skill_SetScriptHandler_OnAdded00);
   tolua_function(tolua_S,"GetScriptHandler_OnAdded",tolua_PX2_Skill_GetScriptHandler_OnAdded00);
   tolua_function(tolua_S,"SetScriptHandler_OnRemove",tolua_PX2_Skill_SetScriptHandler_OnRemove00);
   tolua_function(tolua_S,"GetScriptHandler_OnRemove",tolua_PX2_Skill_GetScriptHandler_OnRemove00);
   tolua_function(tolua_S,"SetActivateNeedCharacterAimTarget",tolua_PX2_Skill_SetActivateNeedCharacterAimTarget00);
   tolua_function(tolua_S,"IsActivateNeedCharacterAnimTarget",tolua_PX2_Skill_IsActivateNeedCharacterAnimTarget00);
   tolua_function(tolua_S,"SetActivateAllowTimes",tolua_PX2_Skill_SetActivateAllowTimes00);
   tolua_function(tolua_S,"GetActivateAllowTimes",tolua_PX2_Skill_GetActivateAllowTimes00);
   tolua_function(tolua_S,"SetActivatedTimes",tolua_PX2_Skill_SetActivatedTimes00);
   tolua_function(tolua_S,"GetActivatedTimes",tolua_PX2_Skill_GetActivatedTimes00);
   tolua_function(tolua_S,"IsActivateHasTimes",tolua_PX2_Skill_IsActivateHasTimes00);
   tolua_function(tolua_S,"GetSkillQueryBitSet",tolua_PX2_Skill_GetSkillQueryBitSet00);
   tolua_function(tolua_S,"IsCallOver",tolua_PX2_Skill_IsCallOver00);
   tolua_function(tolua_S,"Activate",tolua_PX2_Skill_Activate00);
   tolua_function(tolua_S,"DisActivate",tolua_PX2_Skill_DisActivate00);
   tolua_function(tolua_S,"IsActivatting",tolua_PX2_Skill_IsActivatting00);
   tolua_function(tolua_S,"ResetCD",tolua_PX2_Skill_ResetCD00);
   tolua_function(tolua_S,"SetOnCD",tolua_PX2_Skill_SetOnCD00);
   tolua_function(tolua_S,"IsOnCD",tolua_PX2_Skill_IsOnCD00);
   tolua_function(tolua_S,"SetOnCDTime",tolua_PX2_Skill_SetOnCDTime00);
   tolua_function(tolua_S,"GetOnCDTime",tolua_PX2_Skill_GetOnCDTime00);
   tolua_function(tolua_S,"GetNumInstances",tolua_PX2_Skill_GetNumInstances00);
   tolua_function(tolua_S,"ClearSkillInstance",tolua_PX2_Skill_ClearSkillInstance00);
   tolua_function(tolua_S,"SetFirstSkillStep",tolua_PX2_Skill_SetFirstSkillStep00);
   tolua_function(tolua_S,"GetFirstSkillStep",tolua_PX2_Skill_GetFirstSkillStep00);
   tolua_function(tolua_S,"GetSkillStepByName",tolua_PX2_Skill_GetSkillStepByName00);
   tolua_function(tolua_S,"GetLastSkillStep",tolua_PX2_Skill_GetLastSkillStep00);
   tolua_constant(tolua_S,"AGT_ENEMY",Skill::AGT_ENEMY);
   tolua_constant(tolua_S,"AGT_SELF",Skill::AGT_SELF);
   tolua_constant(tolua_S,"AGT_BOTH",Skill::AGT_BOTH);
   tolua_constant(tolua_S,"AGT_MAX_TYPE",Skill::AGT_MAX_TYPE);
   tolua_function(tolua_S,"SetAffectGroupType",tolua_PX2_Skill_SetAffectGroupType00);
   tolua_function(tolua_S,"GetAffectGroupType",tolua_PX2_Skill_GetAffectGroupType00);
   tolua_function(tolua_S,"SetPhysicsAP",tolua_PX2_Skill_SetPhysicsAP00);
   tolua_function(tolua_S,"GetPhysicsAP",tolua_PX2_Skill_GetPhysicsAP00);
   tolua_function(tolua_S,"SetMagicAP",tolua_PX2_Skill_SetMagicAP00);
   tolua_function(tolua_S,"GetMagicAP",tolua_PX2_Skill_GetMagicAP00);
   tolua_function(tolua_S,"SetCriticalPercent",tolua_PX2_Skill_SetCriticalPercent00);
   tolua_function(tolua_S,"GetCriticalPercent",tolua_PX2_Skill_GetCriticalPercent00);
   tolua_function(tolua_S,"SetCriticalProbability",tolua_PX2_Skill_SetCriticalProbability00);
   tolua_function(tolua_S,"GetCriticalProbability",tolua_PX2_Skill_GetCriticalProbability00);
   tolua_function(tolua_S,"GetPhysicsAPLast",tolua_PX2_Skill_GetPhysicsAPLast00);
   tolua_function(tolua_S,"GetMagicAPLast",tolua_PX2_Skill_GetMagicAPLast00);
   tolua_function(tolua_S,"AddAffectParam",tolua_PX2_Skill_AddAffectParam00);
   tolua_function(tolua_S,"RemoveAffectParam",tolua_PX2_Skill_RemoveAffectParam00);
   tolua_function(tolua_S,"IsHasAffectParam",tolua_PX2_Skill_IsHasAffectParam00);
   tolua_function(tolua_S,"GetAffectParam",tolua_PX2_Skill_GetAffectParam00);
   tolua_function(tolua_S,"IsInRadiusLength",tolua_PX2_Skill_IsInRadiusLength00);
   tolua_function(tolua_S,"IsInTrigerDistance",tolua_PX2_Skill_IsInTrigerDistance00);
   tolua_function(tolua_S,"IsInRange",tolua_PX2_Skill_IsInRange00);
   tolua_function(tolua_S,"IsInBoxRange",tolua_PX2_Skill_IsInBoxRange00);
   tolua_function(tolua_S,"IsInFanRange",tolua_PX2_Skill_IsInFanRange00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SkillStep","SkillStep","Gameable",tolua_collect_SkillStep);
  #else
  tolua_cclass(tolua_S,"SkillStep","SkillStep","Gameable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SkillStep");
   tolua_function(tolua_S,"delete",tolua_PX2_SkillStep_delete00);
   tolua_function(tolua_S,"GetSkill",tolua_PX2_SkillStep_GetSkill00);
   tolua_function(tolua_S,"GetCurEnteredSkillInstance",tolua_PX2_SkillStep_GetCurEnteredSkillInstance00);
   tolua_function(tolua_S,"SetProbability",tolua_PX2_SkillStep_SetProbability00);
   tolua_function(tolua_S,"GetProbability",tolua_PX2_SkillStep_GetProbability00);
   tolua_constant(tolua_S,"M_RANGETIME",SkillStep::M_RANGETIME);
   tolua_constant(tolua_S,"M_FARTRACK",SkillStep::M_FARTRACK);
   tolua_constant(tolua_S,"M_LINK",SkillStep::M_LINK);
   tolua_constant(tolua_S,"M_MAX_MODE",SkillStep::M_MAX_MODE);
   tolua_function(tolua_S,"GetMode",tolua_PX2_SkillStep_GetMode00);
   tolua_function(tolua_S,"SetSkillCallOverAtThisStep",tolua_PX2_SkillStep_SetSkillCallOverAtThisStep00);
   tolua_function(tolua_S,"IsSkillCallOverAtThisStep",tolua_PX2_SkillStep_IsSkillCallOverAtThisStep00);
   tolua_constant(tolua_S,"TT_TIME",SkillStep::TT_TIME);
   tolua_constant(tolua_S,"TT_ANIMPERCENT",SkillStep::TT_ANIMPERCENT);
   tolua_constant(tolua_S,"TT_MAX_TYPE",SkillStep::TT_MAX_TYPE);
   tolua_function(tolua_S,"SetSkillCallOverTimeType",tolua_PX2_SkillStep_SetSkillCallOverTimeType00);
   tolua_function(tolua_S,"GetSkillCallOverTimeType",tolua_PX2_SkillStep_GetSkillCallOverTimeType00);
   tolua_function(tolua_S,"SetSkillCallOverValue",tolua_PX2_SkillStep_SetSkillCallOverValue00);
   tolua_function(tolua_S,"GetSkillCallOverValue",tolua_PX2_SkillStep_GetSkillCallOverValue00);
   tolua_function(tolua_S,"GetSkillCallOverTime",tolua_PX2_SkillStep_GetSkillCallOverTime00);
   tolua_function(tolua_S,"SetAnimName",tolua_PX2_SkillStep_SetAnimName00);
   tolua_function(tolua_S,"GetAnimName",tolua_PX2_SkillStep_GetAnimName00);
   tolua_function(tolua_S,"SetSelfEffectFilename",tolua_PX2_SkillStep_SetSelfEffectFilename00);
   tolua_function(tolua_S,"GetSelfEffectFilename",tolua_PX2_SkillStep_GetSelfEffectFilename00);
   tolua_function(tolua_S,"SetSelfEffectAnchor",tolua_PX2_SkillStep_SetSelfEffectAnchor00);
   tolua_function(tolua_S,"GetSelfEffectAnchor",tolua_PX2_SkillStep_GetSelfEffectAnchor00);
   tolua_function(tolua_S,"SetSelfEffectTime",tolua_PX2_SkillStep_SetSelfEffectTime00);
   tolua_function(tolua_S,"GetSelfEffectTime",tolua_PX2_SkillStep_GetSelfEffectTime00);
   tolua_function(tolua_S,"SetSelfPosEffectFilename",tolua_PX2_SkillStep_SetSelfPosEffectFilename00);
   tolua_function(tolua_S,"GetSelfPosEffectFilename",tolua_PX2_SkillStep_GetSelfPosEffectFilename00);
   tolua_function(tolua_S,"SetSelfPosEffectAnchor",tolua_PX2_SkillStep_SetSelfPosEffectAnchor00);
   tolua_function(tolua_S,"GetSelfPosEffectAnchor",tolua_PX2_SkillStep_GetSelfPosEffectAnchor00);
   tolua_function(tolua_S,"SetSelfPosEffectTime",tolua_PX2_SkillStep_SetSelfPosEffectTime00);
   tolua_function(tolua_S,"GetSelfPosEffectTime",tolua_PX2_SkillStep_GetSelfPosEffectTime00);
   tolua_function(tolua_S,"SetTargetEffectFilename",tolua_PX2_SkillStep_SetTargetEffectFilename00);
   tolua_function(tolua_S,"GetTargetEffectFilename",tolua_PX2_SkillStep_GetTargetEffectFilename00);
   tolua_function(tolua_S,"SetTargetEffectAnchor",tolua_PX2_SkillStep_SetTargetEffectAnchor00);
   tolua_function(tolua_S,"GetTargetEffectAnchor",tolua_PX2_SkillStep_GetTargetEffectAnchor00);
   tolua_function(tolua_S,"SetTargetEffectTime",tolua_PX2_SkillStep_SetTargetEffectTime00);
   tolua_function(tolua_S,"GetTargetEffectTime",tolua_PX2_SkillStep_GetTargetEffectTime00);
   tolua_function(tolua_S,"SetTargetPosEffectFilename",tolua_PX2_SkillStep_SetTargetPosEffectFilename00);
   tolua_function(tolua_S,"GetTargetPosEffectFilename",tolua_PX2_SkillStep_GetTargetPosEffectFilename00);
   tolua_function(tolua_S,"SetTargetPosEffectTime",tolua_PX2_SkillStep_SetTargetPosEffectTime00);
   tolua_function(tolua_S,"GetTargetPosEffectTime",tolua_PX2_SkillStep_GetTargetPosEffectTime00);
   tolua_function(tolua_S,"SetScriptHandler_Enter",tolua_PX2_SkillStep_SetScriptHandler_Enter00);
   tolua_function(tolua_S,"GetScriptHandler_Enter",tolua_PX2_SkillStep_GetScriptHandler_Enter00);
   tolua_function(tolua_S,"SetScriptHandler_Leave",tolua_PX2_SkillStep_SetScriptHandler_Leave00);
   tolua_function(tolua_S,"GetScriptHandler_Leave",tolua_PX2_SkillStep_GetScriptHandler_Leave00);
   tolua_function(tolua_S,"OnEnter",tolua_PX2_SkillStep_OnEnter00);
   tolua_function(tolua_S,"OnLeave",tolua_PX2_SkillStep_OnLeave00);
   tolua_function(tolua_S,"SetNextStep",tolua_PX2_SkillStep_SetNextStep00);
   tolua_function(tolua_S,"GetNextStep",tolua_PX2_SkillStep_GetNextStep00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SkillStepRangeTime","SkillStepRangeTime","SkillStep",tolua_collect_SkillStepRangeTime);
  #else
  tolua_cclass(tolua_S,"SkillStepRangeTime","SkillStepRangeTime","SkillStep",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SkillStepRangeTime");
   tolua_function(tolua_S,"new",tolua_PX2_SkillStepRangeTime_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SkillStepRangeTime_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SkillStepRangeTime_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SkillStepRangeTime_delete00);
   tolua_constant(tolua_S,"TT_TIME",SkillStepRangeTime::TT_TIME);
   tolua_constant(tolua_S,"TT_ANIMPERCENT",SkillStepRangeTime::TT_ANIMPERCENT);
   tolua_constant(tolua_S,"TT_MAX_TYPE",SkillStepRangeTime::TT_MAX_TYPE);
   tolua_function(tolua_S,"SetTimeType",tolua_PX2_SkillStepRangeTime_SetTimeType00);
   tolua_function(tolua_S,"GetTimeType",tolua_PX2_SkillStepRangeTime_GetTimeType00);
   tolua_function(tolua_S,"SetValue",tolua_PX2_SkillStepRangeTime_SetValue00);
   tolua_function(tolua_S,"GetValue",tolua_PX2_SkillStepRangeTime_GetValue00);
   tolua_function(tolua_S,"GetTime",tolua_PX2_SkillStepRangeTime_GetTime00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SkillStepFarTrack","SkillStepFarTrack","SkillStep",tolua_collect_SkillStepFarTrack);
  #else
  tolua_cclass(tolua_S,"SkillStepFarTrack","SkillStepFarTrack","SkillStep",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SkillStepFarTrack");
   tolua_function(tolua_S,"new",tolua_PX2_SkillStepFarTrack_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SkillStepFarTrack_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SkillStepFarTrack_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SkillStepFarTrack_delete00);
   tolua_function(tolua_S,"SetRangeRadius",tolua_PX2_SkillStepFarTrack_SetRangeRadius00);
   tolua_function(tolua_S,"GetRangeRadius",tolua_PX2_SkillStepFarTrack_GetRangeRadius00);
   tolua_function(tolua_S,"SetBeTrackToActor",tolua_PX2_SkillStepFarTrack_SetBeTrackToActor00);
   tolua_function(tolua_S,"IsTrackToActor",tolua_PX2_SkillStepFarTrack_IsTrackToActor00);
   tolua_function(tolua_S,"SetTrackDir",tolua_PX2_SkillStepFarTrack_SetTrackDir00);
   tolua_function(tolua_S,"GetTrackDir",tolua_PX2_SkillStepFarTrack_GetTrackDir00);
   tolua_function(tolua_S,"SetSpeed",tolua_PX2_SkillStepFarTrack_SetSpeed00);
   tolua_function(tolua_S,"GetSpeed",tolua_PX2_SkillStepFarTrack_GetSpeed00);
   tolua_function(tolua_S,"SetTrackTime",tolua_PX2_SkillStepFarTrack_SetTrackTime00);
   tolua_function(tolua_S,"GetTrackTime",tolua_PX2_SkillStepFarTrack_GetTrackTime00);
   tolua_function(tolua_S,"SetDegree",tolua_PX2_SkillStepFarTrack_SetDegree00);
   tolua_function(tolua_S,"GetDegree",tolua_PX2_SkillStepFarTrack_GetDegree00);
   tolua_function(tolua_S,"SetSideDegree",tolua_PX2_SkillStepFarTrack_SetSideDegree00);
   tolua_function(tolua_S,"GetSideDegree",tolua_PX2_SkillStepFarTrack_GetSideDegree00);
   tolua_function(tolua_S,"SetAlignTrace",tolua_PX2_SkillStepFarTrack_SetAlignTrace00);
   tolua_function(tolua_S,"IsAlignTrace",tolua_PX2_SkillStepFarTrack_IsAlignTrace00);
   tolua_function(tolua_S,"SetDoDamageOnTrack",tolua_PX2_SkillStepFarTrack_SetDoDamageOnTrack00);
   tolua_function(tolua_S,"IsDoDamageOnTrack",tolua_PX2_SkillStepFarTrack_IsDoDamageOnTrack00);
   tolua_function(tolua_S,"SetDamageOnTrackFrequency",tolua_PX2_SkillStepFarTrack_SetDamageOnTrackFrequency00);
   tolua_function(tolua_S,"GetDamageOnTrackFrequency",tolua_PX2_SkillStepFarTrack_GetDamageOnTrackFrequency00);
   tolua_function(tolua_S,"SetCurTrackSkillInstance",tolua_PX2_SkillStepFarTrack_SetCurTrackSkillInstance00);
   tolua_function(tolua_S,"GetCurTrackSkillInstance",tolua_PX2_SkillStepFarTrack_GetCurTrackSkillInstance00);
   tolua_function(tolua_S,"SetScriptHandler_OnTrack",tolua_PX2_SkillStepFarTrack_SetScriptHandler_OnTrack00);
   tolua_function(tolua_S,"GetScriptHandler_OnTrack",tolua_PX2_SkillStepFarTrack_GetScriptHandler_OnTrack00);
   tolua_function(tolua_S,"OnEnter",tolua_PX2_SkillStepFarTrack_OnEnter00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SkillStepLink","SkillStepLink","SkillStep",tolua_collect_SkillStepLink);
  #else
  tolua_cclass(tolua_S,"SkillStepLink","SkillStepLink","SkillStep",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SkillStepLink");
   tolua_function(tolua_S,"new",tolua_PX2_SkillStepLink_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SkillStepLink_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SkillStepLink_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SkillStepLink_delete00);
   tolua_function(tolua_S,"SetLinkToActor",tolua_PX2_SkillStepLink_SetLinkToActor00);
   tolua_function(tolua_S,"IsLinkToActor",tolua_PX2_SkillStepLink_IsLinkToActor00);
   tolua_function(tolua_S,"SetLinkDir",tolua_PX2_SkillStepLink_SetLinkDir00);
   tolua_function(tolua_S,"GetLinkDir",tolua_PX2_SkillStepLink_GetLinkDir00);
   tolua_function(tolua_S,"SetSpeed",tolua_PX2_SkillStepLink_SetSpeed00);
   tolua_function(tolua_S,"GetSpeed",tolua_PX2_SkillStepLink_GetSpeed00);
   tolua_function(tolua_S,"SetLinkToTime",tolua_PX2_SkillStepLink_SetLinkToTime00);
   tolua_function(tolua_S,"GetLinkToTime",tolua_PX2_SkillStepLink_GetLinkToTime00);
   tolua_function(tolua_S,"SetLinkedDoOver",tolua_PX2_SkillStepLink_SetLinkedDoOver00);
   tolua_function(tolua_S,"IsLinkedDoOver",tolua_PX2_SkillStepLink_IsLinkedDoOver00);
   tolua_function(tolua_S,"SetCurLinkedSkillInstance",tolua_PX2_SkillStepLink_SetCurLinkedSkillInstance00);
   tolua_function(tolua_S,"GetCurLinkedSkillInstance",tolua_PX2_SkillStepLink_GetCurLinkedSkillInstance00);
   tolua_function(tolua_S,"SetScriptHandler_OnLinked",tolua_PX2_SkillStepLink_SetScriptHandler_OnLinked00);
   tolua_function(tolua_S,"GetScriptHandler_OnLinked",tolua_PX2_SkillStepLink_GetScriptHandler_OnLinked00);
   tolua_function(tolua_S,"OnEnter",tolua_PX2_SkillStepLink_OnEnter00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SkillInstance","SkillInstance","Gameable",tolua_collect_SkillInstance);
  #else
  tolua_cclass(tolua_S,"SkillInstance","SkillInstance","Gameable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SkillInstance");
   tolua_function(tolua_S,"new",tolua_PX2_SkillInstance_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SkillInstance_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SkillInstance_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SkillInstance_delete00);
   tolua_function(tolua_S,"SetBeShared",tolua_PX2_SkillInstance_SetBeShared00);
   tolua_function(tolua_S,"IsBeShared",tolua_PX2_SkillInstance_IsBeShared00);
   tolua_function(tolua_S,"Update",tolua_PX2_SkillInstance_Update00);
   tolua_function(tolua_S,"IsOver",tolua_PX2_SkillInstance_IsOver00);
   tolua_function(tolua_S,"IsSkillCallOver",tolua_PX2_SkillInstance_IsSkillCallOver00);
   tolua_function(tolua_S,"Enter",tolua_PX2_SkillInstance_Enter00);
   tolua_function(tolua_S,"OnLeave",tolua_PX2_SkillInstance_OnLeave00);
   tolua_function(tolua_S,"OnEnter",tolua_PX2_SkillInstance_OnEnter00);
   tolua_function(tolua_S,"AddSkillActor",tolua_PX2_SkillInstance_AddSkillActor00);
   tolua_function(tolua_S,"GetSkillActor",tolua_PX2_SkillInstance_GetSkillActor00);
   tolua_function(tolua_S,"SetAimTarget",tolua_PX2_SkillInstance_SetAimTarget00);
   tolua_function(tolua_S,"GetAimTarget",tolua_PX2_SkillInstance_GetAimTarget00);
   tolua_function(tolua_S,"AddTarget",tolua_PX2_SkillInstance_AddTarget00);
   tolua_function(tolua_S,"HasTarget",tolua_PX2_SkillInstance_HasTarget00);
   tolua_function(tolua_S,"GetNumTargets",tolua_PX2_SkillInstance_GetNumTargets00);
   tolua_function(tolua_S,"GetTarget",tolua_PX2_SkillInstance_GetTarget00);
   tolua_function(tolua_S,"GetTargetCharacter",tolua_PX2_SkillInstance_GetTargetCharacter00);
   tolua_function(tolua_S,"RemoveTarget",tolua_PX2_SkillInstance_RemoveTarget00);
   tolua_function(tolua_S,"RemoveAllTargets",tolua_PX2_SkillInstance_RemoveAllTargets00);
   tolua_function(tolua_S,"GetSkill",tolua_PX2_SkillInstance_GetSkill00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SkillActor","SkillActor","EffectActor",tolua_collect_SkillActor);
  #else
  tolua_cclass(tolua_S,"SkillActor","SkillActor","EffectActor",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SkillActor");
   tolua_function(tolua_S,"new",tolua_PX2_SkillActor_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SkillActor_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SkillActor_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SkillActor_delete00);
   tolua_function(tolua_S,"Update",tolua_PX2_SkillActor_Update00);
   tolua_constant(tolua_S,"TT_ACTOR",SkillActor::TT_ACTOR);
   tolua_constant(tolua_S,"TT_POSITION",SkillActor::TT_POSITION);
   tolua_constant(tolua_S,"TT_MAX_TYPE",SkillActor::TT_MAX_TYPE);
   tolua_function(tolua_S,"SetTargetType",tolua_PX2_SkillActor_SetTargetType00);
   tolua_function(tolua_S,"GetTargetType",tolua_PX2_SkillActor_GetTargetType00);
   tolua_function(tolua_S,"SetAttackSpeed",tolua_PX2_SkillActor_SetAttackSpeed00);
   tolua_function(tolua_S,"GetAttackSpeed",tolua_PX2_SkillActor_GetAttackSpeed00);
   tolua_function(tolua_S,"SetBeginPos",tolua_PX2_SkillActor_SetBeginPos00);
   tolua_function(tolua_S,"GetBeginPos",tolua_PX2_SkillActor_GetBeginPos00);
   tolua_function(tolua_S,"SetCharacterGroup",tolua_PX2_SkillActor_SetCharacterGroup00);
   tolua_function(tolua_S,"GetCharacterGroup",tolua_PX2_SkillActor_GetCharacterGroup00);
   tolua_function(tolua_S,"SetSkillTypeID",tolua_PX2_SkillActor_SetSkillTypeID00);
   tolua_function(tolua_S,"GetSkillITypeID",tolua_PX2_SkillActor_GetSkillITypeID00);
   tolua_function(tolua_S,"SetTargetID",tolua_PX2_SkillActor_SetTargetID00);
   tolua_function(tolua_S,"GetTargetID",tolua_PX2_SkillActor_GetTargetID00);
   tolua_function(tolua_S,"SetTargetPos",tolua_PX2_SkillActor_SetTargetPos00);
   tolua_function(tolua_S,"GetTargetPos",tolua_PX2_SkillActor_GetTargetPos00);
   tolua_function(tolua_S,"SetDegree",tolua_PX2_SkillActor_SetDegree00);
   tolua_function(tolua_S,"GetDegree",tolua_PX2_SkillActor_GetDegree00);
   tolua_function(tolua_S,"SetSideDegree",tolua_PX2_SkillActor_SetSideDegree00);
   tolua_function(tolua_S,"GetSideDegree",tolua_PX2_SkillActor_GetSideDegree00);
   tolua_function(tolua_S,"SetAlignTrace",tolua_PX2_SkillActor_SetAlignTrace00);
   tolua_function(tolua_S,"IsAlignTrace",tolua_PX2_SkillActor_IsAlignTrace00);
   tolua_function(tolua_S,"SetRangeRadius",tolua_PX2_SkillActor_SetRangeRadius00);
   tolua_function(tolua_S,"GetRangeRadius",tolua_PX2_SkillActor_GetRangeRadius00);
   tolua_function(tolua_S,"SetDoDamageOnTrack",tolua_PX2_SkillActor_SetDoDamageOnTrack00);
   tolua_function(tolua_S,"IsDoDamageOnTrack",tolua_PX2_SkillActor_IsDoDamageOnTrack00);
   tolua_function(tolua_S,"Start",tolua_PX2_SkillActor_Start00);
   tolua_function(tolua_S,"OnStart",tolua_PX2_SkillActor_OnStart00);
   tolua_function(tolua_S,"IsOver",tolua_PX2_SkillActor_IsOver00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"SkillActorLink","SkillActorLink","EffectActor",tolua_collect_SkillActorLink);
  #else
  tolua_cclass(tolua_S,"SkillActorLink","SkillActorLink","EffectActor",NULL);
  #endif
  tolua_beginmodule(tolua_S,"SkillActorLink");
   tolua_function(tolua_S,"new",tolua_PX2_SkillActorLink_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_SkillActorLink_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_SkillActorLink_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_SkillActorLink_delete00);
   tolua_function(tolua_S,"Update",tolua_PX2_SkillActorLink_Update00);
   tolua_constant(tolua_S,"TT_ACTOR",SkillActorLink::TT_ACTOR);
   tolua_constant(tolua_S,"TT_POSITION",SkillActorLink::TT_POSITION);
   tolua_constant(tolua_S,"TT_MAX_TYPE",SkillActorLink::TT_MAX_TYPE);
   tolua_function(tolua_S,"SetTargetType",tolua_PX2_SkillActorLink_SetTargetType00);
   tolua_function(tolua_S,"GetTargetType",tolua_PX2_SkillActorLink_GetTargetType00);
   tolua_function(tolua_S,"SetFromActorID",tolua_PX2_SkillActorLink_SetFromActorID00);
   tolua_function(tolua_S,"GetFromActorID",tolua_PX2_SkillActorLink_GetFromActorID00);
   tolua_function(tolua_S,"SetFromActorAnchor",tolua_PX2_SkillActorLink_SetFromActorAnchor00);
   tolua_function(tolua_S,"GetFromActorAnchor",tolua_PX2_SkillActorLink_GetFromActorAnchor00);
   tolua_function(tolua_S,"SetToActorID",tolua_PX2_SkillActorLink_SetToActorID00);
   tolua_function(tolua_S,"GetToActorID",tolua_PX2_SkillActorLink_GetToActorID00);
   tolua_function(tolua_S,"SetToActorAnchor",tolua_PX2_SkillActorLink_SetToActorAnchor00);
   tolua_function(tolua_S,"GetToActorAnchor",tolua_PX2_SkillActorLink_GetToActorAnchor00);
   tolua_function(tolua_S,"SetToPosition",tolua_PX2_SkillActorLink_SetToPosition00);
   tolua_function(tolua_S,"GetToPosition",tolua_PX2_SkillActorLink_GetToPosition00);
   tolua_function(tolua_S,"SetLinkSpeed",tolua_PX2_SkillActorLink_SetLinkSpeed00);
   tolua_function(tolua_S,"GetLinkSpeed",tolua_PX2_SkillActorLink_GetLinkSpeed00);
   tolua_function(tolua_S,"Start",tolua_PX2_SkillActorLink_Start00);
   tolua_function(tolua_S,"OnStart",tolua_PX2_SkillActorLink_OnStart00);
   tolua_function(tolua_S,"IsLinked",tolua_PX2_SkillActorLink_IsLinked00);
   tolua_function(tolua_S,"SetOver",tolua_PX2_SkillActorLink_SetOver00);
   tolua_function(tolua_S,"IsOver",tolua_PX2_SkillActorLink_IsOver00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"AffectObject","AffectObject","",tolua_collect_AffectObject);
  #else
  tolua_cclass(tolua_S,"AffectObject","AffectObject","",NULL);
  #endif
  tolua_beginmodule(tolua_S,"AffectObject");
   tolua_function(tolua_S,"new",tolua_PX2_AffectObject_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_AffectObject_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_AffectObject_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_AffectObject_delete00);
   tolua_variable(tolua_S,"AffectCharacter",tolua_get_AffectObject_AffectCharacter_ptr,tolua_set_AffectObject_AffectCharacter_ptr);
   tolua_variable(tolua_S,"AffectSkill",tolua_get_AffectObject_AffectSkill_ptr,tolua_set_AffectObject_AffectSkill_ptr);
   tolua_variable(tolua_S,"AffectSkillInstance",tolua_get_AffectObject_AffectSkillInstance_ptr,tolua_set_AffectObject_AffectSkillInstance_ptr);
   tolua_variable(tolua_S,"AffectItem",tolua_get_AffectObject_AffectItem_ptr,tolua_set_AffectObject_AffectItem_ptr);
   tolua_variable(tolua_S,"AffectBuf",tolua_get_AffectObject_AffectBuf_ptr,tolua_set_AffectObject_AffectBuf_ptr);
   tolua_variable(tolua_S,"AffectType",tolua_get_AffectObject_AffectType,tolua_set_AffectObject_AffectType);
   tolua_variable(tolua_S,"Value",tolua_get_AffectObject_Value,tolua_set_AffectObject_Value);
   tolua_variable(tolua_S,"LastAffectDoType",tolua_get_AffectObject_LastAffectDoType,tolua_set_AffectObject_LastAffectDoType);
   tolua_variable(tolua_S,"LastAffectDoTypeValue",tolua_get_AffectObject_LastAffectDoTypeValue,tolua_set_AffectObject_LastAffectDoTypeValue);
   tolua_variable(tolua_S,"BeAffectCharacter",tolua_get_AffectObject_BeAffectCharacter_ptr,tolua_set_AffectObject_BeAffectCharacter_ptr);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Character","Character","Actor",tolua_collect_Character);
  #else
  tolua_cclass(tolua_S,"Character","Character","Actor",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Character");
   tolua_function(tolua_S,"new",tolua_PX2_Character_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Character_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Character_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Character_delete00);
   tolua_function(tolua_S,"Initlize",tolua_PX2_Character_Initlize00);
   tolua_function(tolua_S,"SetMovableFilename",tolua_PX2_Character_SetMovableFilename00);
   tolua_function(tolua_S,"SetLevel",tolua_PX2_Character_SetLevel00);
   tolua_function(tolua_S,"GetLevel",tolua_PX2_Character_GetLevel00);
   tolua_function(tolua_S,"SetExp",tolua_PX2_Character_SetExp00);
   tolua_function(tolua_S,"GetExp",tolua_PX2_Character_GetExp00);
   tolua_function(tolua_S,"GetExpCurLevel",tolua_PX2_Character_GetExpCurLevel00);
   tolua_function(tolua_S,"SetBaseHPCurLevel",tolua_PX2_Character_SetBaseHPCurLevel00);
   tolua_function(tolua_S,"GetBaseHPCurLevel",tolua_PX2_Character_GetBaseHPCurLevel00);
   tolua_function(tolua_S,"SetCurHPNoReduce",tolua_PX2_Character_SetCurHPNoReduce00);
   tolua_function(tolua_S,"IsCurHPNoRecline",tolua_PX2_Character_IsCurHPNoRecline00);
   tolua_function(tolua_S,"SetCurHP",tolua_PX2_Character_SetCurHP00);
   tolua_function(tolua_S,"AddCurHP",tolua_PX2_Character_AddCurHP00);
   tolua_function(tolua_S,"GetCurHP",tolua_PX2_Character_GetCurHP00);
   tolua_function(tolua_S,"AddMHP",tolua_PX2_Character_AddMHP00);
   tolua_function(tolua_S,"RemoveMHP",tolua_PX2_Character_RemoveMHP00);
   tolua_function(tolua_S,"GetMMapHPs",tolua_PX2_Character_GetMMapHPs00);
   tolua_function(tolua_S,"CalMHP",tolua_PX2_Character_CalMHP00);
   tolua_function(tolua_S,"GetMHP",tolua_PX2_Character_GetMHP00);
   tolua_function(tolua_S,"GetHPPercent",tolua_PX2_Character_GetHPPercent00);
   tolua_function(tolua_S,"SetBaseAPCurLevel",tolua_PX2_Character_SetBaseAPCurLevel00);
   tolua_function(tolua_S,"GetBaseAPCurLevel",tolua_PX2_Character_GetBaseAPCurLevel00);
   tolua_function(tolua_S,"SetCurAP",tolua_PX2_Character_SetCurAP00);
   tolua_function(tolua_S,"GetCurAP",tolua_PX2_Character_GetCurAP00);
   tolua_function(tolua_S,"AddMAP",tolua_PX2_Character_AddMAP00);
   tolua_function(tolua_S,"RemoveMAP",tolua_PX2_Character_RemoveMAP00);
   tolua_function(tolua_S,"GetMMapAPs",tolua_PX2_Character_GetMMapAPs00);
   tolua_function(tolua_S,"CalMAP",tolua_PX2_Character_CalMAP00);
   tolua_function(tolua_S,"GetMAP",tolua_PX2_Character_GetMAP00);
   tolua_function(tolua_S,"SetDead",tolua_PX2_Character_SetDead00);
   tolua_function(tolua_S,"Die",tolua_PX2_Character_Die00);
   tolua_function(tolua_S,"IsDead",tolua_PX2_Character_IsDead00);
   tolua_function(tolua_S,"SetScriptHandler_OnDie",tolua_PX2_Character_SetScriptHandler_OnDie00);
   tolua_function(tolua_S,"GetScriptHandler_OnDie",tolua_PX2_Character_GetScriptHandler_OnDie00);
   tolua_function(tolua_S,"AddScriptHandler_OnDie",tolua_PX2_Character_AddScriptHandler_OnDie00);
   tolua_function(tolua_S,"RemoveScriptHandler_OnDie",tolua_PX2_Character_RemoveScriptHandler_OnDie00);
   tolua_function(tolua_S,"AddAnim",tolua_PX2_Character_AddAnim00);
   tolua_function(tolua_S,"HasAnim",tolua_PX2_Character_HasAnim00);
   tolua_function(tolua_S,"RemoveAnim",tolua_PX2_Character_RemoveAnim00);
   tolua_function(tolua_S,"RemoveAllAnims",tolua_PX2_Character_RemoveAllAnims00);
   tolua_function(tolua_S,"GetNumAnims",tolua_PX2_Character_GetNumAnims00);
   tolua_function(tolua_S,"GetAnim",tolua_PX2_Character_GetAnim00);
   tolua_function(tolua_S,"GetAnimByName",tolua_PX2_Character_GetAnimByName00);
   tolua_function(tolua_S,"GetStandAnim",tolua_PX2_Character_GetStandAnim00);
   tolua_function(tolua_S,"PlayAnim",tolua_PX2_Character_PlayAnim00);
   tolua_function(tolua_S,"StopAnim",tolua_PX2_Character_StopAnim00);
   tolua_function(tolua_S,"StopCurAnim",tolua_PX2_Character_StopCurAnim00);
   tolua_function(tolua_S,"PlayCurAnim",tolua_PX2_Character_PlayCurAnim00);
   tolua_function(tolua_S,"PlayAnimByName",tolua_PX2_Character_PlayAnimByName00);
   tolua_function(tolua_S,"GetCurPlayingAnim",tolua_PX2_Character_GetCurPlayingAnim00);
   tolua_function(tolua_S,"IsHasAnimPlaying",tolua_PX2_Character_IsHasAnimPlaying00);
   tolua_function(tolua_S,"SetModelTagName",tolua_PX2_Character_SetModelTagName00);
   tolua_function(tolua_S,"GetModelTagName",tolua_PX2_Character_GetModelTagName00);
   tolua_function(tolua_S,"GetSkinCtrls",tolua_PX2_Character_GetSkinCtrls00);
   tolua_function(tolua_S,"AddItem",tolua_PX2_Character_AddItem00);
   tolua_function(tolua_S,"HasItem",tolua_PX2_Character_HasItem00);
   tolua_function(tolua_S,"GetNumItems",tolua_PX2_Character_GetNumItems00);
   tolua_function(tolua_S,"GetItemByID",tolua_PX2_Character_GetItemByID00);
   tolua_function(tolua_S,"GetItem",tolua_PX2_Character_GetItem00);
   tolua_function(tolua_S,"RemoveItem",tolua_PX2_Character_RemoveItem00);
   tolua_function(tolua_S,"RemoveAllItems",tolua_PX2_Character_RemoveAllItems00);
   tolua_function(tolua_S,"EquipItem",tolua_PX2_Character_EquipItem00);
   tolua_function(tolua_S,"GetNumItemsEquipped",tolua_PX2_Character_GetNumItemsEquipped00);
   tolua_function(tolua_S,"GetEquippedItem",tolua_PX2_Character_GetEquippedItem00);
   tolua_function(tolua_S,"UnEquipItem",tolua_PX2_Character_UnEquipItem00);
   tolua_function(tolua_S,"UnEquipAllItems",tolua_PX2_Character_UnEquipAllItems00);
   tolua_function(tolua_S,"AddSkill",tolua_PX2_Character_AddSkill00);
   tolua_function(tolua_S,"HasSkill",tolua_PX2_Character_HasSkill00);
   tolua_function(tolua_S,"GetNumSkills",tolua_PX2_Character_GetNumSkills00);
   tolua_function(tolua_S,"GetSkillByID",tolua_PX2_Character_GetSkillByID00);
   tolua_function(tolua_S,"GetSkillByTypeID",tolua_PX2_Character_GetSkillByTypeID00);
   tolua_function(tolua_S,"GetSkillByName",tolua_PX2_Character_GetSkillByName00);
   tolua_function(tolua_S,"GetDefSkill",tolua_PX2_Character_GetDefSkill00);
   tolua_function(tolua_S,"GetSkill",tolua_PX2_Character_GetSkill00);
   tolua_function(tolua_S,"RemoveSkill",tolua_PX2_Character_RemoveSkill00);
   tolua_function(tolua_S,"RemoveAllSkills",tolua_PX2_Character_RemoveAllSkills00);
   tolua_function(tolua_S,"IsAnySkillHasInstance",tolua_PX2_Character_IsAnySkillHasInstance00);
   tolua_function(tolua_S,"IsAllSkillCallOver",tolua_PX2_Character_IsAllSkillCallOver00);
   tolua_function(tolua_S,"ResetAllSkillsCD",tolua_PX2_Character_ResetAllSkillsCD00);
   tolua_function(tolua_S,"GetValidSkills",tolua_PX2_Character_GetValidSkills00);
   tolua_function(tolua_S,"AddBufClassExcept",tolua_PX2_Character_AddBufClassExcept00);
   tolua_function(tolua_S,"RemoveBufClassExcept",tolua_PX2_Character_RemoveBufClassExcept00);
   tolua_function(tolua_S,"RemoveAllBufClassExcepts",tolua_PX2_Character_RemoveAllBufClassExcepts00);
   tolua_function(tolua_S,"HasBufClassExcept",tolua_PX2_Character_HasBufClassExcept00);
   tolua_function(tolua_S,"AddBuf",tolua_PX2_Character_AddBuf00);
   tolua_function(tolua_S,"HasBuf",tolua_PX2_Character_HasBuf00);
   tolua_function(tolua_S,"HasBuf",tolua_PX2_Character_HasBuf01);
   tolua_function(tolua_S,"HasBufClass",tolua_PX2_Character_HasBufClass00);
   tolua_function(tolua_S,"HasBufClass",tolua_PX2_Character_HasBufClass01);
   tolua_function(tolua_S,"GetBufByClass",tolua_PX2_Character_GetBufByClass00);
   tolua_function(tolua_S,"GetNumBufsOfClass",tolua_PX2_Character_GetNumBufsOfClass00);
   tolua_function(tolua_S,"RemoveBufsOfClass",tolua_PX2_Character_RemoveBufsOfClass00);
   tolua_function(tolua_S,"GetNumBufs",tolua_PX2_Character_GetNumBufs00);
   tolua_function(tolua_S,"GetBufs",tolua_PX2_Character_GetBufs00);
   tolua_function(tolua_S,"RemoveBuf",tolua_PX2_Character_RemoveBuf00);
   tolua_function(tolua_S,"RemoveAllBufs",tolua_PX2_Character_RemoveAllBufs00);
   tolua_function(tolua_S,"Freeze",tolua_PX2_Character_Freeze00);
   tolua_function(tolua_S,"IsFreezed",tolua_PX2_Character_IsFreezed00);
   tolua_function(tolua_S,"SetWatchDistance",tolua_PX2_Character_SetWatchDistance00);
   tolua_function(tolua_S,"GetWatchDistance",tolua_PX2_Character_GetWatchDistance00);
   tolua_function(tolua_S,"SetCanBeAimed",tolua_PX2_Character_SetCanBeAimed00);
   tolua_function(tolua_S,"IsCanBeAimed",tolua_PX2_Character_IsCanBeAimed00);
   tolua_function(tolua_S,"SetAimTarget",tolua_PX2_Character_SetAimTarget00);
   tolua_function(tolua_S,"GetAimTarget",tolua_PX2_Character_GetAimTarget00);
   tolua_function(tolua_S,"GetAimTargetCharacter",tolua_PX2_Character_GetAimTargetCharacter00);
   tolua_function(tolua_S,"GetAimTargetCharacterAlive",tolua_PX2_Character_GetAimTargetCharacterAlive00);
   tolua_function(tolua_S,"GetNumAimingMe",tolua_PX2_Character_GetNumAimingMe00);
   tolua_function(tolua_S,"BeAffect",tolua_PX2_Character_BeAffect00);
   tolua_function(tolua_S,"OnBeAffect",tolua_PX2_Character_OnBeAffect00);
   tolua_function(tolua_S,"OnSucAffect",tolua_PX2_Character_OnSucAffect00);
   tolua_function(tolua_S,"SetCurAffectMeObject",tolua_PX2_Character_SetCurAffectMeObject00);
   tolua_function(tolua_S,"GetCurAffectMeObject",tolua_PX2_Character_GetCurAffectMeObject00);
   tolua_function(tolua_S,"SetCurSucAffectObject",tolua_PX2_Character_SetCurSucAffectObject00);
   tolua_function(tolua_S,"GetCurSucAffectObject",tolua_PX2_Character_GetCurSucAffectObject00);
   tolua_function(tolua_S,"SetScriptHandler_OnBeAffect",tolua_PX2_Character_SetScriptHandler_OnBeAffect00);
   tolua_function(tolua_S,"GetScriptHandler_OnBeAffect",tolua_PX2_Character_GetScriptHandler_OnBeAffect00);
   tolua_function(tolua_S,"AddScriptHandler_OnBeAffect",tolua_PX2_Character_AddScriptHandler_OnBeAffect00);
   tolua_function(tolua_S,"RemoveScriptHandler_OnBeAffect",tolua_PX2_Character_RemoveScriptHandler_OnBeAffect00);
   tolua_function(tolua_S,"SetScriptHandler_OnSucAffect",tolua_PX2_Character_SetScriptHandler_OnSucAffect00);
   tolua_function(tolua_S,"GetScriptHandler_OnSucAffect",tolua_PX2_Character_GetScriptHandler_OnSucAffect00);
   tolua_function(tolua_S,"AddScriptHandler_OnSucAffect",tolua_PX2_Character_AddScriptHandler_OnSucAffect00);
   tolua_function(tolua_S,"RemoveScriptHandler_OnSucAffect",tolua_PX2_Character_RemoveScriptHandler_OnSucAffect00);
   tolua_function(tolua_S,"SetScriptHandler_OnSucAffectParam",tolua_PX2_Character_SetScriptHandler_OnSucAffectParam00);
   tolua_function(tolua_S,"GetScriptHandler_OnSucAffectParam",tolua_PX2_Character_GetScriptHandler_OnSucAffectParam00);
   tolua_function(tolua_S,"CreateStateMachines",tolua_PX2_Character_CreateStateMachines00);
   tolua_function(tolua_S,"GetActionSM",tolua_PX2_Character_GetActionSM00);
   tolua_function(tolua_S,"GetMovementSM",tolua_PX2_Character_GetMovementSM00);
   tolua_function(tolua_S,"GetPostureSM",tolua_PX2_Character_GetPostureSM00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Character2DFrames8","Character2DFrames8","Character",tolua_collect_Character2DFrames8);
  #else
  tolua_cclass(tolua_S,"Character2DFrames8","Character2DFrames8","Character",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Character2DFrames8");
   tolua_function(tolua_S,"new",tolua_PX2_Character2DFrames8_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Character2DFrames8_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Character2DFrames8_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Character2DFrames8_delete00);
   tolua_function(tolua_S,"Update",tolua_PX2_Character2DFrames8_Update00);
   tolua_function(tolua_S,"GetActorNode",tolua_PX2_Character2DFrames8_GetActorNode00);
   tolua_function(tolua_S,"GetAnimNode",tolua_PX2_Character2DFrames8_GetAnimNode00);
   tolua_function(tolua_S,"ShowSelfRadiusRange",tolua_PX2_Character2DFrames8_ShowSelfRadiusRange00);
   tolua_function(tolua_S,"IsShowSelfRadiusRange",tolua_PX2_Character2DFrames8_IsShowSelfRadiusRange00);
   tolua_function(tolua_S,"ShowHeadingDir",tolua_PX2_Character2DFrames8_ShowHeadingDir00);
   tolua_function(tolua_S,"IsShowHeadingDir",tolua_PX2_Character2DFrames8_IsShowHeadingDir00);
   tolua_function(tolua_S,"SetSelfRadius",tolua_PX2_Character2DFrames8_SetSelfRadius00);
   tolua_function(tolua_S,"SetHeight",tolua_PX2_Character2DFrames8_SetHeight00);
   tolua_function(tolua_S,"SetOffset",tolua_PX2_Character2DFrames8_SetOffset00);
   tolua_function(tolua_S,"GetOffset",tolua_PX2_Character2DFrames8_GetOffset00);
   tolua_function(tolua_S,"SetAnimSize",tolua_PX2_Character2DFrames8_SetAnimSize00);
   tolua_function(tolua_S,"GetAnimSize",tolua_PX2_Character2DFrames8_GetAnimSize00);
   tolua_function(tolua_S,"SetShadowFilename",tolua_PX2_Character2DFrames8_SetShadowFilename00);
   tolua_function(tolua_S,"GetShadowFilename",tolua_PX2_Character2DFrames8_GetShadowFilename00);
   tolua_function(tolua_S,"SetShadowSize",tolua_PX2_Character2DFrames8_SetShadowSize00);
   tolua_function(tolua_S,"GetShadowSize",tolua_PX2_Character2DFrames8_GetShadowSize00);
   tolua_function(tolua_S,"SetAttackFrontNodeOffset",tolua_PX2_Character2DFrames8_SetAttackFrontNodeOffset00);
   tolua_function(tolua_S,"GetAttackFrontNodeOffset",tolua_PX2_Character2DFrames8_GetAttackFrontNodeOffset00);
   tolua_function(tolua_S,"SetHeading",tolua_PX2_Character2DFrames8_SetHeading00);
   tolua_function(tolua_S,"Die",tolua_PX2_Character2DFrames8_Die00);
   tolua_function(tolua_S,"SaveToXMLNode",tolua_PX2_Character2DFrames8_SaveToXMLNode00);
   tolua_function(tolua_S,"LoadFromXMLNode",tolua_PX2_Character2DFrames8_LoadFromXMLNode00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Scene","Scene","Netable",tolua_collect_Scene);
  #else
  tolua_cclass(tolua_S,"Scene","Scene","Netable",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Scene");
   tolua_function(tolua_S,"new",tolua_PX2_Scene_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Scene_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Scene_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Scene_delete00);
   tolua_function(tolua_S,"Update",tolua_PX2_Scene_Update00);
   tolua_function(tolua_S,"SetCameraActor",tolua_PX2_Scene_SetCameraActor00);
   tolua_function(tolua_S,"GetCameraActor",tolua_PX2_Scene_GetCameraActor00);
   tolua_function(tolua_S,"SetSceneID",tolua_PX2_Scene_SetSceneID00);
   tolua_function(tolua_S,"GetSceneID",tolua_PX2_Scene_GetSceneID00);
   tolua_function(tolua_S,"GetSceneNode",tolua_PX2_Scene_GetSceneNode00);
   tolua_function(tolua_S,"SetViewPort",tolua_PX2_Scene_SetViewPort00);
   tolua_function(tolua_S,"GetViewport",tolua_PX2_Scene_GetViewport00);
   tolua_function(tolua_S,"CallRendererSetViewport",tolua_PX2_Scene_CallRendererSetViewport00);
   tolua_function(tolua_S,"AddActor",tolua_PX2_Scene_AddActor00);
   tolua_function(tolua_S,"RemoveActor",tolua_PX2_Scene_RemoveActor00);
   tolua_function(tolua_S,"IsActorIn",tolua_PX2_Scene_IsActorIn00);
   tolua_function(tolua_S,"GetNumActors",tolua_PX2_Scene_GetNumActors00);
   tolua_function(tolua_S,"GetActor",tolua_PX2_Scene_GetActor00);
   tolua_function(tolua_S,"GetActor",tolua_PX2_Scene_GetActor01);
   tolua_function(tolua_S,"ShowHelpMovables",tolua_PX2_Scene_ShowHelpMovables00);
  tolua_endmodule(tolua_S);
  #ifdef __cplusplus
  tolua_cclass(tolua_S,"Scene3D","Scene3D","Scene",tolua_collect_Scene3D);
  #else
  tolua_cclass(tolua_S,"Scene3D","Scene3D","Scene",NULL);
  #endif
  tolua_beginmodule(tolua_S,"Scene3D");
   tolua_function(tolua_S,"new",tolua_PX2_Scene3D_new00);
   tolua_function(tolua_S,"new_local",tolua_PX2_Scene3D_new00_local);
   tolua_function(tolua_S,".call",tolua_PX2_Scene3D_new00_local);
   tolua_function(tolua_S,"delete",tolua_PX2_Scene3D_delete00);
   tolua_function(tolua_S,"Update",tolua_PX2_Scene3D_Update00);
   tolua_function(tolua_S,"OnAddedActor",tolua_PX2_Scene3D_OnAddedActor00);
   tolua_function(tolua_S,"ShowHelpMovables",tolua_PX2_Scene3D_ShowHelpMovables00);
   tolua_function(tolua_S,"GetTerrainActor",tolua_PX2_Scene3D_GetTerrainActor00);
   tolua_function(tolua_S,"GetDefaultARActor",tolua_PX2_Scene3D_GetDefaultARActor00);
  tolua_endmodule(tolua_S);
  tolua_cclass(tolua_S,"SoundManager","SoundManager","",NULL);
  tolua_beginmodule(tolua_S,"SoundManager");
   tolua_function(tolua_S,"GetSingleton",tolua_PX2_SoundManager_GetSingleton00);
   tolua_function(tolua_S,"Clear",tolua_PX2_SoundManager_Clear00);
   tolua_function(tolua_S,"Update",tolua_PX2_SoundManager_Update00);
   tolua_function(tolua_S,"PlaySound",tolua_PX2_SoundManager_PlaySound00);
   tolua_function(tolua_S,"StopSound",tolua_PX2_SoundManager_StopSound00);
  tolua_endmodule(tolua_S);
 tolua_endmodule(tolua_S);
 return 1;
}


#if defined(LUA_VERSION_NUM) && LUA_VERSION_NUM >= 501
 TOLUA_API int luaopen_PX2 (lua_State* tolua_S) {
 return tolua_PX2_open(tolua_S);
};
#endif

